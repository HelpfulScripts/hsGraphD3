{
	"id": 0,
	"name": "hsGraphD3",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"API\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/API.ts",
			"comment": {
				"shortText": "# API"
			},
			"sources": [
				{
					"fileName": "API.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1370,
			"name": "\"Axis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Axis.ts",
			"comment": {
				"shortText": "# Axis class",
				"text": "### Axes Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.axes.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log\n             .inspect(new hsGraphD3.GraphCartesian(svgRoot[0]).defaults.axes, null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1371,
					"name": "Direction",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1372,
							"name": "horizontal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 50,
									"character": 14
								}
							],
							"defaultValue": "\"hor\""
						},
						{
							"id": 1373,
							"name": "vertical",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 51,
									"character": 12
								}
							],
							"defaultValue": "\"ver\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1372,
								1373
							]
						}
					],
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 49,
							"character": 21
						}
					]
				},
				{
					"id": 1393,
					"name": "Axes",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1396,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1397,
									"name": "new Axes",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1398,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Axes",
										"id": 1393
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.__constructor",
										"id": 1345
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 78,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.__constructor",
								"id": 1345
							}
						},
						{
							"id": 1395,
							"name": "axes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 78,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Axis",
									"id": 1416
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1415,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 1414,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphComponent.svg",
								"id": 1344
							}
						},
						{
							"id": 1394,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 76,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"axes\""
						},
						{
							"id": 1399,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1400,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.componentType",
										"id": 1349
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 86,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.componentType",
								"id": 1349
							}
						},
						{
							"id": 1401,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1402,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AxesDefaults",
										"id": 1386
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 88,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 1403,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1404,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AxesDefaults",
										"id": 1386
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 90,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 1405,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1406,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1407,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "def.d3Base"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 99,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 1412,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1413,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 115,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 1408,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1409,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 102,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 1410,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1411,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 109,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1396
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1395,
								1415,
								1414,
								1394
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1399,
								1401
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1403,
								1405,
								1412,
								1408,
								1410
							]
						}
					],
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 75,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 1416,
					"name": "Axis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1421,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1422,
									"name": "new Axis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1423,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1424,
											"name": "dir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Direction",
												"id": 1371
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Axis",
										"id": 1416
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 122,
									"character": 24
								}
							]
						},
						{
							"id": 1419,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 121,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							}
						},
						{
							"id": 1417,
							"name": "dir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 119,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Direction",
								"id": 1371
							}
						},
						{
							"id": 1418,
							"name": "pos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 120,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1420,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 122,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						},
						{
							"id": 1427,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1428,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AxisDefaults",
										"id": 1374
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 145,
									"character": 23
								}
							]
						},
						{
							"id": 1425,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1426,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AxisDefaults",
										"id": 1374
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 131,
									"character": 25
								}
							]
						},
						{
							"id": 1436,
							"name": "getD3Axis",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1437,
									"name": "getD3Axis",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1438,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDims",
												"id": 294
											}
										},
										{
											"id": 1439,
											"name": "axisDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AxisDefaults",
												"id": 1374
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Axis",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Date"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1440,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1441,
																	"name": "valueOf",
																	"kind": 64,
																	"kindString": "Function",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1442,
																			"name": "valueOf",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-axis/index.d.ts",
																			"line": 21,
																			"character": 59
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Functions",
																	"kind": 64,
																	"children": [
																		1441
																	]
																}
															]
														}
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 221,
									"character": 13
								}
							]
						},
						{
							"id": 1429,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1430,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 149,
									"character": 13
								}
							]
						},
						{
							"id": 1431,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1432,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 158,
									"character": 26
								}
							]
						},
						{
							"id": 1433,
							"name": "setTransform",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1434,
									"name": "setTransform",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1435,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDims",
												"id": 294
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 187,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1421
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1419,
								1417,
								1418,
								1420
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1427
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1425,
								1436,
								1429,
								1431,
								1433
							]
						}
					],
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 118,
							"character": 17
						}
					]
				},
				{
					"id": 1386,
					"name": "AxesDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 1391,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1392,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 1387,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1389,
							"name": "hor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 70,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisDefaults",
								"id": 1374
							}
						},
						{
							"id": 1388,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1390,
							"name": "ver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 71,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisDefaults",
								"id": 1374
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1387,
								1389,
								1388,
								1390
							]
						}
					],
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 67,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				},
				{
					"id": 1374,
					"name": "AxisDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 1384,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1385,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 1375,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 55,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1381,
							"name": "crossing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 61,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Date"
									},
									{
										"type": "stringLiteral",
										"value": "auto"
									}
								]
							}
						},
						{
							"id": 1377,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Line",
								"id": 1271
							}
						},
						{
							"id": 1382,
							"name": "numTicksMajor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 62,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "auto"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1383,
							"name": "numTicksMinor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 63,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "auto"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1376,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 56,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1380,
							"name": "tickLabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Text",
								"id": 1287
							}
						},
						{
							"id": 1379,
							"name": "tickMarks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 59,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Line",
								"id": 1271
							}
						},
						{
							"id": 1378,
							"name": "tickWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Axis.ts",
									"line": 58,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1375,
								1381,
								1377,
								1382,
								1383,
								1376,
								1380,
								1379,
								1378
							]
						}
					],
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 54,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				},
				{
					"id": 1443,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 31,
							"character": 54
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Axis')"
				},
				{
					"id": 1444,
					"name": "pixPerMajorTick",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 46,
							"character": 21
						}
					],
					"type": {
						"type": "unknown",
						"name": "200"
					},
					"defaultValue": "200"
				},
				{
					"id": 1445,
					"name": "pixPerMinorTick",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Axis.ts",
							"line": 47,
							"character": 21
						}
					],
					"type": {
						"type": "unknown",
						"name": "50"
					},
					"defaultValue": "50"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1371
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1393,
						1416
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1386,
						1374
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1443,
						1444,
						1445
					]
				}
			],
			"sources": [
				{
					"fileName": "Axis.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 546,
			"name": "\"Canvas\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Canvas.ts",
			"comment": {
				"shortText": "# Canvas component\nrenders the `Graph's` background, covering the entire viewport.",
				"text": "### Canvas Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.canvas.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log\n             .inspect(new hsGraphD3.GraphCartesian(svgRoot[0]).defaults.canvas, null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 554,
					"name": "Canvas",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 556,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 557,
									"name": "new Canvas",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 558,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Canvas",
										"id": 554
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.__constructor",
										"id": 1345
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 43,
									"character": 27
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.__constructor",
								"id": 1345
							}
						},
						{
							"id": 575,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 574,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphComponent.svg",
								"id": 1344
							}
						},
						{
							"id": 555,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 43,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"canvas\""
						},
						{
							"id": 559,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 560,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.componentType",
										"id": 1349
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 49,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.componentType",
								"id": 1349
							}
						},
						{
							"id": 561,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 562,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CanvasDefaults",
										"id": 547
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 51,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 563,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 564,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CanvasDefaults",
										"id": 547
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 53,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 565,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 566,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 567,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 57,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 572,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 573,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 75,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 568,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 61,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 570,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 571,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the Graph's background canvas"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 67,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								556
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								575,
								574,
								555
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								559,
								561
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								563,
								565,
								572,
								568,
								570
							]
						}
					],
					"sources": [
						{
							"fileName": "Canvas.ts",
							"line": 42,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 547,
					"name": "CanvasDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 548,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 549,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 552,
							"name": "fill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 97,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Fill",
								"id": 8
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RectStyle.fill",
								"id": 19
							}
						},
						{
							"id": 550,
							"name": "rx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 95,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RectStyle.rx",
								"id": 17
							}
						},
						{
							"id": 551,
							"name": "ry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 96,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RectStyle.ry",
								"id": 18
							}
						},
						{
							"id": 553,
							"name": "stroke",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 98,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "RectStyle.stroke",
								"id": 20
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								552,
								550,
								551,
								553
							]
						}
					],
					"sources": [
						{
							"fileName": "Canvas.ts",
							"line": 39,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						},
						{
							"type": "reference",
							"name": "RectStyle",
							"id": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						554
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						547
					]
				}
			],
			"sources": [
				{
					"fileName": "Canvas.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2494,
			"name": "\"CartSeriesPlot\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/CartSeriesPlot.ts",
			"comment": {
				"shortText": "# CartSeriesPlot",
				"text": "Abstract base class for all series plot types on cartesian coordinates.\nTo create a series plot, add the desired plot type to the graph:\n```\ngraph.series.add(<type>, ...<data-columns>);\n```\n"
			},
			"children": [
				{
					"id": 2503,
					"name": "CartSeriesPlot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Abstract base class for all cartesian plots."
					},
					"children": [
						{
							"id": 2504,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2505,
									"name": "new CartSeriesPlot",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2506,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 2507,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2508,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CartSeriesPlot",
										"id": 2503
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							}
						},
						{
							"id": 2552,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 2550,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 2553,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 2551,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 2511,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 2512,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							}
						},
						{
							"id": 2509,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 2510,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							]
						},
						{
							"id": 2554,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2555,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 2587,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2588,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 2542,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 2543,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2544,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2545,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 133,
									"character": 35
								}
							]
						},
						{
							"id": 2534,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 2535,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2536,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2537,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 129,
									"character": 38
								}
							]
						},
						{
							"id": 2538,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 2539,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2540,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2541,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 131,
									"character": 35
								}
							]
						},
						{
							"id": 2556,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2557,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2558,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2559,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 2560,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2561,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2562,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2563,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 2564,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2565,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2566,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2567,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2568,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 2569,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2570,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2571,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2572,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 2573,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2574,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2575,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2576,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2577,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 2513,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2514,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the defaults for the series. Called during `addSeries`."
									},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getDefaults",
										"id": 122
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 65,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getDefaults",
								"id": 122
							}
						},
						{
							"id": 2546,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2547,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2548,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2549,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							]
						},
						{
							"id": 2529,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2530,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							}
						},
						{
							"id": 2515,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2516,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2517,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2518,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.initialize",
										"id": 155
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 75,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.initialize",
								"id": 155
							}
						},
						{
							"id": 2589,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2590,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 2591,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 2526,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2527,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2528,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							}
						},
						{
							"id": 2519,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2520,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2521,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2522,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.preRender",
										"id": 159
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 96,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.preRender",
								"id": 159
							}
						},
						{
							"id": 2523,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2524,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 2525,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							}
						},
						{
							"id": 2531,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2532,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2533,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							]
						},
						{
							"id": 2592,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2593,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 2594,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 2578,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2579,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 2580,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2581,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 2582,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2583,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2584,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2585,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 2586,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2504
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2552,
								2550,
								2553,
								2551
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2511,
								2509,
								2554
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2587,
								2542,
								2534,
								2538,
								2556,
								2560,
								2569,
								2513,
								2546,
								2529,
								2515,
								2589,
								2526,
								2519,
								2523,
								2531,
								2592,
								2578
							]
						}
					],
					"sources": [
						{
							"fileName": "CartSeriesPlot.ts",
							"line": 45,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SeriesPlot",
							"id": 108
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NumericSeriesPlot",
							"id": 1447
						},
						{
							"type": "reference",
							"name": "OrdinalSeriesPlot",
							"id": 2095
						}
					]
				},
				{
					"id": 2495,
					"name": "CartSeriesDimensions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "valid standard dimensions on cartesian plots:\n- x: a {@ Graph.ValueDef Value Definiton} for the x-axis.\n- y: a {@ Graph.ValueDef Value Definiton} for the y-axis.\n- y0: optional {@ Graph.ValueDef Value Definiton} for lower fill border on the y-axis\n- r: optional {@ Graph.ValueDef Value Definiton} for the size of markers"
					},
					"indexSignature": [
						{
							"id": 2500,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "valid standard dimensions on cartesian plots:\n- x: a {@ Graph.ValueDef Value Definiton} for the x-axis.\n- y: a {@ Graph.ValueDef Value Definiton} for the y-axis.\n- y0: optional {@ Graph.ValueDef Value Definiton} for lower fill border on the y-axis\n- r: optional {@ Graph.ValueDef Value Definiton} for the size of markers"
							},
							"parameters": [
								{
									"id": 2501,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ValueDef",
								"id": 740
							}
						}
					],
					"children": [
						{
							"id": 2499,
							"name": "r",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 39,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "ValueDef",
								"id": 740
							}
						},
						{
							"id": 2502,
							"name": "stacked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesDimensions.stacked",
								"id": 193
							}
						},
						{
							"id": 2496,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 36,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "ValueDef",
								"id": 740
							}
						},
						{
							"id": 2497,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 37,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "ValueDef",
								"id": 740
							}
						},
						{
							"id": 2498,
							"name": "y0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ValueDef",
								"id": 740
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2499,
								2502,
								2496,
								2497,
								2498
							]
						}
					],
					"sources": [
						{
							"fileName": "CartSeriesPlot.ts",
							"line": 35,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SeriesDimensions",
							"id": 190
						}
					]
				},
				{
					"id": 2595,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "CartSeriesPlot.ts",
							"line": 14,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('CartSeriesPlot')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2503
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2495
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2595
					]
				}
			],
			"sources": [
				{
					"fileName": "CartSeriesPlot.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 576,
			"name": "\"Graph\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Graph.ts",
			"comment": {
				"shortText": "# Graph",
				"text": "The base class for Graph types.\nTakes care of the overall orchestration of the Graph, including the following tasks:\n- setting up the SVG environment for the `Graph`\n- creating a central {@link GraphComponent.GraphCfg configuration object} that is used throughout the library.\n- creating and managing the {@link GraphComponent components} to render in ths `Graph`\n- initializing default {@link Settings settings}\n- establishing {@link Graph.LifecycleCalls lifecycle calls}\n- adding {@link SeriesPlot `series`} to render by calling {@link Graph.Graph.addSeries `addSeries`}\n- rendering the graph by calling {@link Graph.Graph.render `render`}\n- managing a central {@link Graph.Graph.transition `transition`} that applies to all components.\n\n### Graph Management Phases\nGraph Management is dividied into the following phases:\n1. **Graph creation**: `const graph = new xxxGraph(root);`\n    - creates the graph's {@link GraphComponent components} and their\n      {@link Graph.Graph.createComponents sequence of rendering} in the DOM\n    - sets the factory {@link Settings default settings} for all components\n2. **Graph configuration**:\n    - adding series: `graph.series.add(<type>, {y:'State', x:'costs'});`\n    - configuring defaults: e.g., `graph.grids.defaults.hor.major.rendered = false;`\n3. **Graph rendering**: `graph.render(<data>)`\n    - sets the graph-wide transition timing and easing\n    - starts a {@link Graph.LifecycleCalls render lifecycle} by calling each of the lifecycle methods on all components:\n        - Once, following graph creation, {@Link Graph.LifecycleCalls.initialize initializes} the components\n        - Calls {@link Graph.LifecycleCalls.preRender preRender} for any regular preparation\n        - Calls {@link Graph.LifecycleCalls.renderComponent renderComponent} to render each component\n    - returns a {@link Graph.RenderChain RenderChain} that can be used to dynamically {@link Graph.RenderChain.update update}\n      the data or settings, which triggers a new render lifecycle.\n\n### Graph Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.graph.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log\n             .inspect(new hsGraphD3.GraphCartesian(svgRoot[0]).defaults.graph, null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 646,
					"name": "Graph",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "## Graph\nAbstract base Graph."
					},
					"children": [
						{
							"id": 664,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 665,
									"name": "new Graph",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 666,
											"name": "root",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Graph",
										"id": 646
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.__constructor",
										"id": 1323
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 294,
									"character": 46
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.__constructor",
								"id": 1323
							}
						},
						{
							"id": 737,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 661,
							"name": "components",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the list of components to render"
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 289,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "GraphComponent",
									"id": 1343
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 663,
							"name": "cumulativeDomains",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 294,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "Domains",
								"id": 594
							}
						},
						{
							"id": 662,
							"name": "initialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "tracks whether components have been initialized."
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 292,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 660,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the HTML root element to attach the render tree to."
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 286,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 647,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 274,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 648,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						},
						{
							"id": 699,
							"name": "axes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 700,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Axes",
										"id": 1393
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 397,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "Components.axes",
								"id": 644
							}
						},
						{
							"id": 695,
							"name": "canvas",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 696,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Canvas",
										"id": 554
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 395,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "Components.canvas",
								"id": 642
							}
						},
						{
							"id": 667,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 668,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 307,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 697,
							"name": "grids",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 698,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Grids",
										"id": 503
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 396,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "Components.grids",
								"id": 643
							}
						},
						{
							"id": 693,
							"name": "scales",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 694,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scales",
										"id": 325
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 394,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "Components.scales",
								"id": 641
							}
						},
						{
							"id": 701,
							"name": "series",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 702,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Series",
										"id": 197
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 398,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "Components.series",
								"id": 645
							}
						},
						{
							"id": 674,
							"name": "seriesTypes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "returns the types of all registered `Series`"
							},
							"getSignature": [
								{
									"id": 675,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "returns the types of all registered `Series`"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 316,
									"character": 26
								}
							]
						},
						{
							"id": 669,
							"name": "viewport",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 670,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 671,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 673,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "GraphComponent.ts",
															"line": 47,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "UnitVp",
														"id": 42
													}
												},
												{
													"id": 672,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "GraphComponent.ts",
															"line": 46,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "UnitVp",
														"id": 42
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														673,
														672
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 311,
									"character": 26
								}
							]
						},
						{
							"id": 731,
							"name": "createBaseSVG",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 732,
									"name": "createBaseSVG",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates the base SVG element for the entire graph.\nThis function is intended to be called only once at creation of the graph."
									},
									"parameters": [
										{
											"id": 733,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "d3Base",
										"id": 46
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 497,
									"character": 25
								}
							]
						},
						{
							"id": 726,
							"name": "createComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 727,
									"name": "createComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates the list of `GraphComponents` and determines the rendering order:\n- Scales: not rendered explicitly, but used in other components\n- Canvas: the background area for the plot\n- Grids\n- Axes\n- Series"
									},
									"parameters": [
										{
											"id": 728,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 466,
									"character": 28
								}
							]
						},
						{
							"id": 691,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 692,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "called once during construction to create the components defaults."
									},
									"type": {
										"type": "reference",
										"name": "GraphDefaults",
										"id": 580
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 385,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 703,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 704,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once at the beginning of the first call to `Graph.render()`\nand initializes all known `GraphComponts`."
									},
									"parameters": [
										{
											"id": 705,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 407,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 683,
							"name": "isRendered",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 684,
									"name": "isRendered",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 329,
									"character": 21
								}
							]
						},
						{
							"id": 721,
							"name": "makeDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 722,
									"name": "makeDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 450,
									"character": 26
								}
							]
						},
						{
							"id": 713,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 714,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component."
									},
									"parameters": [
										{
											"id": 715,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 424,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 706,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 707,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before each call to renderComponent."
									},
									"parameters": [
										{
											"id": 708,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 709,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.preRender",
										"id": 630
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 412,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 723,
							"name": "prepareDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 724,
									"name": "prepareDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 725,
											"name": "scalesDefaults",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScalesDefaults",
												"id": 315
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Domains",
										"id": 594
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 456,
									"character": 37
								}
							]
						},
						{
							"id": 685,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 686,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the tree with the supplied data. The call returns a {@link Graph.RenderChain `RenderChain`}\nfunction that allows rendering to be repeated at fixed intervals with updated data.",
										"returns": "a `RenderChain`.\n"
									},
									"parameters": [
										{
											"id": 687,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the data to render. If `data` is a {@link Graph.DataSet DataSet}, it will be used\nto render all added series. Otherwise `data` can be specified as `DataSet[]` to provide a\ndifferent data source to each of the series. The series' index is used to index the list,\nstarting with 0 in the order of adding it to the graph.\nIf there are more series than data sets ion the list, indexing will restart at index 0."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "RenderChain",
										"id": 619
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 346,
									"character": 17
								}
							]
						},
						{
							"id": 710,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 711,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component."
									},
									"parameters": [
										{
											"id": 712,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.renderComponent",
										"id": 634
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 419,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						},
						{
							"id": 716,
							"name": "renderLifecycle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 717,
									"name": "renderLifecycle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 718,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 428,
									"character": 19
								}
							]
						},
						{
							"id": 729,
							"name": "resize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 730,
									"name": "resize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "callback on window resize event, adjusts the viewport to the new dimensions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 476,
									"character": 18
								}
							]
						},
						{
							"id": 719,
							"name": "setScales",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 720,
									"name": "setScales",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set the scales for the graph prior to rendering components."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 448,
									"character": 32
								}
							]
						},
						{
							"id": 676,
							"name": "transition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 677,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the `Graphs` transition duration as an alternative to `defaults.graph.transitionTime`.\nIf `done` is provided, it will be used as a callback for when the transition ends."
									},
									"parameters": [
										{
											"id": 678,
											"name": "duration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 679,
											"name": "done",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 680,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 681,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 682,
																	"name": "data",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "DataSet",
																		"id": 585
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "Graph.ts",
															"line": 326,
															"character": 45
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 326,
									"character": 21
								}
							]
						},
						{
							"id": 734,
							"name": "updateBaseSVG",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 735,
									"name": "updateBaseSVG",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "sets the graph's viewBox, typically after a window resize."
									},
									"parameters": [
										{
											"id": 736,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 509,
									"character": 25
								}
							]
						},
						{
							"id": 688,
							"name": "updateFn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 689,
									"name": "updateFn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 690,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 364,
									"character": 20
								}
							]
						},
						{
							"id": 649,
							"name": "addGraph",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 650,
									"name": "addGraph",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 651,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 652,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 653,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 654,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "Graph.ts",
															"line": 275,
															"character": 42
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 275,
									"character": 27
								}
							]
						},
						{
							"id": 655,
							"name": "removeGraph",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 656,
									"name": "removeGraph",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 657,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 278,
									"character": 30
								}
							]
						},
						{
							"id": 658,
							"name": "resizeGraphs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 659,
									"name": "resizeGraphs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 281,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								664
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								737,
								661,
								663,
								662,
								660,
								647
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								699,
								695,
								667,
								697,
								693,
								701,
								674,
								669
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								731,
								726,
								691,
								703,
								683,
								721,
								713,
								706,
								723,
								685,
								710,
								716,
								729,
								719,
								676,
								734,
								688,
								649,
								655,
								658
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 273,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphBase",
							"id": 1321
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "GraphCartesian",
							"id": 2430
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						},
						{
							"type": "reference",
							"name": "Components",
							"id": 640
						}
					]
				},
				{
					"id": 640,
					"name": "Components",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Provides access to the `Components` managed by a `Graph`."
					},
					"children": [
						{
							"id": 644,
							"name": "axes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 248,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Axes",
								"id": 1393
							}
						},
						{
							"id": 642,
							"name": "canvas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 246,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Canvas",
								"id": 554
							}
						},
						{
							"id": 643,
							"name": "grids",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 247,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Grids",
								"id": 503
							}
						},
						{
							"id": 641,
							"name": "scales",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 245,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Scales",
								"id": 325
							}
						},
						{
							"id": 645,
							"name": "series",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 249,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Series",
								"id": 197
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								644,
								642,
								643,
								641,
								645
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 244,
							"character": 20
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "Graph",
							"id": 646
						},
						{
							"type": "reference",
							"name": "GraphCartesian",
							"id": 2430
						}
					]
				},
				{
					"id": 585,
					"name": "DataSet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 586,
							"name": "colNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 114,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 587,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 115,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "DataRow",
									"id": 742
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								586,
								587
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 113,
							"character": 24
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NumericDataSet",
							"id": 588
						}
					]
				},
				{
					"id": 594,
					"name": "Domains",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "aggregates the [min, max] ranges for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
					},
					"indexSignature": [
						{
							"id": 595,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "aggregates the [min, max] ranges for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
							},
							"parameters": [
								{
									"id": 596,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 134,
							"character": 28
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NumDomains",
							"id": 597
						},
						{
							"type": "reference",
							"name": "TimeDomains",
							"id": 602
						},
						{
							"type": "reference",
							"name": "OrdDomains",
							"id": 607
						}
					]
				},
				{
					"id": 580,
					"name": "GraphDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "default settings for the `Graph` component"
					},
					"indexSignature": [
						{
							"id": 583,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "default settings for the `Graph` component"
							},
							"parameters": [
								{
									"id": 584,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 582,
							"name": "easing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 103,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 581,
							"name": "transitionTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the duration of the `Graph`-wide transition, restarted whith each `render` call."
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 102,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								582,
								581
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 100,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				},
				{
					"id": 591,
					"name": "GraphDimensions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "translates semantic graph dimensions (e.g. 'hor', 'ver', 'size')\nto the column names of the data used while adding a series.\nA `ValueDef` array is used to , each element will be used in turn when `render` is called with multiple data sets."
					},
					"indexSignature": [
						{
							"id": 592,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "translates semantic graph dimensions (e.g. 'hor', 'ver', 'size')\nto the column names of the data used while adding a series.\nA `ValueDef` array is used to , each element will be used in turn when `render` is called with multiple data sets."
							},
							"parameters": [
								{
									"id": 593,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ValueDef",
									"id": 740
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 128,
							"character": 32
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CartDimensions",
							"id": 2424
						}
					]
				},
				{
					"id": 625,
					"name": "LifecycleCalls",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "All `GraphComponents` implement these lifecycle methods that are called by the `Graph` instance\nin response to a `render` call:\n- **initialize**: called the first time the `Graph` is rendered, ahead of any other lifecycle method.\nDuring initialization, the component's style settings are applied\n- **preRender**: called each time the `Graph` is rendered, ahead of any other recurring lifecycle method.\nImplementations can assume that\n    - `initialize` has been called on all `GraphComponents`.\n    - the main axes scales have been properly configured to the data.\n- **renderComponent**: called each time the `Graph` is rendered, to render the component.\nImplementations can assume that `preRender` has been called on all `GraphComponents`.\n- **postRender**: called each time the `Graph` is rendered, to render the component.\nImplementations can assume that `preRender` has been called on all `GraphComponents`."
					},
					"children": [
						{
							"id": 626,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 627,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "called the first time the `Graph` is rendered, before any of the other lifecycle methods.\nAt this point, all components have been created, defaults have been defined,\nand the tree-wide transition has been set."
									},
									"parameters": [
										{
											"id": 628,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 219,
									"character": 14
								}
							]
						},
						{
							"id": 636,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 637,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after the call to renderComponent.\nCan be used for cleanup operations."
									},
									"parameters": [
										{
											"id": 638,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 639,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 237,
									"character": 14
								}
							]
						},
						{
							"id": 629,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 630,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before each call to renderComponent.\nAt this point, the axis scales have been set and all components are initialized."
									},
									"parameters": [
										{
											"id": 631,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 632,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 225,
									"character": 13
								}
							]
						},
						{
							"id": 633,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 634,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component.\nAt this point all components have completed preRendering"
									},
									"parameters": [
										{
											"id": 635,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 231,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								626,
								636,
								629,
								633
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 213,
							"character": 31
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "Axes",
							"id": 1393
						},
						{
							"type": "reference",
							"name": "Canvas",
							"id": 554
						},
						{
							"type": "reference",
							"name": "Graph",
							"id": 646
						},
						{
							"type": "reference",
							"name": "GraphBase",
							"id": 1321
						},
						{
							"type": "reference",
							"name": "GraphCartesian",
							"id": 2430
						},
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						},
						{
							"type": "reference",
							"name": "Grids",
							"id": 503
						},
						{
							"type": "reference",
							"name": "Scales",
							"id": 325
						},
						{
							"type": "reference",
							"name": "Series",
							"id": 197
						},
						{
							"type": "reference",
							"name": "Title",
							"id": 2605
						}
					]
				},
				{
					"id": 597,
					"name": "NumDomains",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "aggregates the [min, max] ranges for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
					},
					"indexSignature": [
						{
							"id": 600,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "aggregates the [min, max] ranges for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
							},
							"parameters": [
								{
									"id": 601,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 140,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Domains",
							"id": 594
						}
					]
				},
				{
					"id": 588,
					"name": "NumericDataSet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 589,
							"name": "colNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 119,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "DataSet.colNames",
								"id": 586
							}
						},
						{
							"id": 590,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 120,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NumericDataRow",
									"id": 743
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "DataSet.rows",
								"id": 587
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								589,
								590
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 118,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "DataSet",
							"id": 585
						}
					]
				},
				{
					"id": 607,
					"name": "OrdDomains",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "aggregates ordinal values for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
					},
					"indexSignature": [
						{
							"id": 610,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "aggregates ordinal values for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
							},
							"parameters": [
								{
									"id": 611,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 152,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Domains",
							"id": 594
						}
					]
				},
				{
					"id": 612,
					"name": "RenderCallback",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function interface, describing the signature of the call back function\nin {@link RenderChain `RenderChain`}.\nIf the function returns `false`, no further callbacks will be initiated"
					},
					"signatures": [
						{
							"id": 613,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function interface, describing the signature of the call back function\nin {@link RenderChain `RenderChain`}.\nIf the function returns `false`, no further callbacks will be initiated"
							},
							"parameters": [
								{
									"id": 614,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "DataSet",
												"id": 585
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataSet",
													"id": 585
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 161,
							"character": 31
						}
					]
				},
				{
					"id": 619,
					"name": "RenderChain",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This object is returned by a call to {@link Graph.render `Graph.render`}, providing an `update` function\nto call in order to render dynamic data updates."
					},
					"children": [
						{
							"id": 620,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Update function, can be called to dynamically update the data and trigger a redraw in regular intervals.\nOnce called, the `callback` function will be invoked in roughly regular intervals every `duration` milliseconds.\nReturning `false` in the `callback` will stop the callbacks.",
								"tags": [
									{
										"tag": "param",
										"text": "optional period in ms to call `sample` function. the `Graph's` tree-wide transition\nwill be timed to end at the specified duration, upon which the `sample` callback will be called.",
										"param": "duration"
									},
									{
										"tag": "param",
										"text": "callback function that allow periodic manipulation of the `data` set.\nNew callbacks will be scheduled at `duration` intervals as long as the callback returns `true`.\nOtherwise the callbacks will be stopped. Independent of the return value,\na render cycle will automatically be triggered after `update` returns.\nSee {@link TimeSeries TimeSeries} for an example.\n",
										"param": "callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 196,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 621,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 622,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 623,
													"name": "duration",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 624,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "RenderCallback",
														"id": 612
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 196,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								620
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 183,
							"character": 28
						}
					]
				},
				{
					"id": 602,
					"name": "TimeDomains",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "aggregates the [min, max] ranges for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
					},
					"indexSignature": [
						{
							"id": 605,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "aggregates the [min, max] ranges for each semantic {@link Graph.GraphDimensions graph dimension} (e.g. 'hor', 'ver', 'size')"
							},
							"parameters": [
								{
									"id": 606,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 146,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Domains",
							"id": 594
						}
					]
				},
				{
					"id": 615,
					"name": "Update",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function interface, describing the signature of the `update` function"
					},
					"signatures": [
						{
							"id": 616,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function interface, describing the signature of the `update` function"
							},
							"parameters": [
								{
									"id": 617,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "optional period in ms to call `sample` function. the `Graph's` tree-wide transition\nwill be timed to end at the specified duration, upon which the `sample` callback will be called."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 618,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "callback function that allow periodic manipulation of the `data` set.\nNew callbacks will be scheduled at `duration` intervals as long as the callback returns `true`.\nOtherwise the callbacks will be stopped. Independent of the return value,\na render cycle will automatically be triggered after `update` returns.\nSee {@link TimeSeries TimeSeries} for an example.\n"
									},
									"type": {
										"type": "reference",
										"name": "RenderCallback",
										"id": 612
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 175,
							"character": 23
						}
					]
				},
				{
					"id": 577,
					"name": "ValueFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a function returning the value of a data point"
					},
					"signatures": [
						{
							"id": 578,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "a function returning the value of a data point"
							},
							"parameters": [
								{
									"id": 579,
									"name": "i",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "an optional number, typically indicating the sequence index of a row in a data set\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DataVal",
								"id": 741
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 97,
							"character": 24
						}
					]
				},
				{
					"id": 742,
					"name": "DataRow",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 109,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "DataVal",
							"id": 741
						}
					}
				},
				{
					"id": 741,
					"name": "DataVal",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Basic generic data type"
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 107,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Date"
							}
						]
					}
				},
				{
					"id": 744,
					"name": "Domain",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 135,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NumDomain",
								"id": 745
							},
							{
								"type": "reference",
								"name": "OrdDomain",
								"id": 747
							},
							{
								"type": "reference",
								"name": "TimeDomain",
								"id": 746
							}
						]
					}
				},
				{
					"id": 745,
					"name": "NumDomain",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 141,
							"character": 30
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 743,
					"name": "NumericDataRow",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 111,
							"character": 26
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 747,
					"name": "OrdDomain",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 153,
							"character": 30
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 746,
					"name": "TimeDomain",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 147,
							"character": 31
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"name": "Date"
							},
							{
								"type": "reference",
								"name": "Date"
							}
						]
					}
				},
				{
					"id": 740,
					"name": "ValueDef",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Basic `ValueDef` definition:\n- `string`: the name of column in the data set\n- `number`: a constant value\n- `ValueFn`: a function, returning the value."
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 91,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"name": "ValueFn",
								"id": 577
							}
						]
					}
				},
				{
					"id": 738,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 59,
							"character": 54
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Graph')"
				},
				{
					"id": 739,
					"name": "vpWidth",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The standard width of the viewport, in viewport coordinates.\nViewport coordinates are established via the SVG `viewBox` node,\nindependant of the actual viewport size in pixels."
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 83,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1000"
				},
				{
					"id": 748,
					"name": "initializeCfg",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 749,
							"name": "initializeCfg",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates and initializes the `Graph`-wide configuration object."
							},
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 254,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						646
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						640,
						585,
						594,
						580,
						591,
						625,
						597,
						588,
						607,
						612,
						619,
						602,
						615,
						577
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						742,
						741,
						744,
						745,
						743,
						747,
						746,
						740
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						738,
						739
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						748
					]
				}
			],
			"sources": [
				{
					"fileName": "Graph.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2423,
			"name": "\"GraphCartesian\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/GraphCartesian.ts",
			"comment": {
				"shortText": "## GraphCartesian",
				"text": "creates a 2D cartesian graph.\n\n### Example:\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n     colNames: ['date', 'time', 'volume', 'costs'],\n     rows: [\n         ['1/1/14', -1,   0.2, 0.3],\n         ['1/1/16', -0.2, 0.7, 0.2],\n         ['9/1/16', 0.4,  0.1, 0.3],\n         ['5/1/17', 0.6, -0.2, 0.1],\n         ['7/1/18', 0.8,  0.3, 0.5],\n         ['1/1/19', 1,    0.2, 0.4]\n     ]\n}\n\n// setup and plot the data:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('line', {x:'time', y:'volume'},);\ngraph.series.add('line', {x:'time', y:'costs'});\n\nwith (graph.canvas.defaults) {\n     fill.color = '#fcfcfc';\n     stroke.width = 10;  // in viewport coordinates (0 - 1000)\n}\n\n// series defaults can be indexed by position or by name. Names are created as `series`+position index.\ngraph.series.defaults[0].marker.size = 15;\ngraph.series.defaults[0].marker.fill.color = '#66f';\ngraph.series.defaults[0].marker.stroke.color = '#00f';\ngraph.series.defaults.series0.line.width = 5;\ngraph.series.defaults.series0.line.color = '#00c';\n\ngraph.series.defaults.series1.marker.size = 10;\ngraph.series.defaults.series1.marker.fill.color = '#6f6';\ngraph.series.defaults.series1.marker.stroke.color = '#0a0';\ngraph.series.defaults.series1.line.width = 5;\ngraph.series.defaults[1].line.color = '#0c0';\n\ngraph.render(data).update(2000, data => {\n   data.rows.map(row => {\n     row[2] = 2*(Math.random()-0.5); // -1...1\n     row[3] = Math.random();         //  0...1\n   });\n   return true;\n});\n\n</file>\n</example>\n\n### GraphCartesian Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         const graph = new hsGraphD3.GraphCartesian(svgRoot[0]);\n         defaults = hsUtil.log\n             .inspect(graph.defaults, null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 2430,
					"name": "GraphCartesian",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2443,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2444,
									"name": "new GraphCartesian",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2445,
											"name": "root",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "GraphCartesian",
										"id": 2430
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.__constructor",
										"id": 1323
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.__constructor",
										"id": 664
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 294,
									"character": 46
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.__constructor",
								"id": 1323
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.__constructor",
								"id": 664
							}
						},
						{
							"id": 2492,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 2442,
							"name": "cumulativeDomains",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 294,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "Domains",
								"id": 594
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.cumulativeDomains",
								"id": 663
							}
						},
						{
							"id": 2441,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the HTML root element to attach the render tree to."
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 286,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.root",
								"id": 660
							}
						},
						{
							"id": 2475,
							"name": "axes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2476,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Axes",
										"id": 1393
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.axes",
										"id": 699
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 397,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.axes",
								"id": 699
							},
							"implementationOf": {
								"type": "reference",
								"name": "Components.axes",
								"id": 644
							}
						},
						{
							"id": 2471,
							"name": "canvas",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2472,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Canvas",
										"id": 554
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.canvas",
										"id": 695
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 395,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.canvas",
								"id": 695
							},
							"implementationOf": {
								"type": "reference",
								"name": "Components.canvas",
								"id": 642
							}
						},
						{
							"id": 2446,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2447,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.defaults",
										"id": 667
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 307,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.defaults",
								"id": 667
							}
						},
						{
							"id": 2473,
							"name": "grids",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2474,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Grids",
										"id": 503
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.grids",
										"id": 697
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 396,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.grids",
								"id": 697
							},
							"implementationOf": {
								"type": "reference",
								"name": "Components.grids",
								"id": 643
							}
						},
						{
							"id": 2469,
							"name": "scales",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2470,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scales",
										"id": 325
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.scales",
										"id": 693
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 394,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.scales",
								"id": 693
							},
							"implementationOf": {
								"type": "reference",
								"name": "Components.scales",
								"id": 641
							}
						},
						{
							"id": 2477,
							"name": "series",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2478,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Series",
										"id": 197
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.series",
										"id": 701
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 398,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.series",
								"id": 701
							},
							"implementationOf": {
								"type": "reference",
								"name": "Components.series",
								"id": 645
							}
						},
						{
							"id": 2453,
							"name": "seriesTypes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "returns the types of all registered `Series`"
							},
							"getSignature": [
								{
									"id": 2454,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "returns the types of all registered `Series`"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.seriesTypes",
										"id": 674
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 316,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.seriesTypes",
								"id": 674
							}
						},
						{
							"id": 2448,
							"name": "viewport",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2449,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2450,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2452,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "GraphComponent.ts",
															"line": 47,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "UnitVp",
														"id": 42
													}
												},
												{
													"id": 2451,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "GraphComponent.ts",
															"line": 46,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "UnitVp",
														"id": 42
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2452,
														2451
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.viewport",
										"id": 669
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 311,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.viewport",
								"id": 669
							}
						},
						{
							"id": 2467,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2468,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "called once during construction to create the components defaults."
									},
									"type": {
										"type": "reference",
										"name": "GraphDefaults",
										"id": 580
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.createDefaults",
										"id": 691
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 385,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.createDefaults",
								"id": 691
							}
						},
						{
							"id": 2438,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2439,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2440,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Graph.initialize",
										"id": 703
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 150,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Graph.initialize",
								"id": 703
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 2462,
							"name": "isRendered",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2463,
									"name": "isRendered",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.isRendered",
										"id": 683
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 329,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.isRendered",
								"id": 683
							}
						},
						{
							"id": 2431,
							"name": "makeDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2432,
									"name": "makeDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called during `Graph` construction to create component defaults and\nscale defaults for the `GraphDimensions` used in cartedian plots."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Graph.makeDefaults",
										"id": 721
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 114,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Graph.makeDefaults",
								"id": 721
							}
						},
						{
							"id": 2486,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2487,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component."
									},
									"parameters": [
										{
											"id": 2488,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.postRender",
										"id": 713
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 424,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.postRender",
								"id": 713
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 2479,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2480,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before each call to renderComponent."
									},
									"parameters": [
										{
											"id": 2481,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 2482,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.preRender",
										"id": 706
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.preRender",
										"id": 630
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 412,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.preRender",
								"id": 706
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 2435,
							"name": "prepareDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2436,
									"name": "prepareDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns a `Domains` object"
									},
									"parameters": [
										{
											"id": 2437,
											"name": "scalesDefaults",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "ScalesDefaults",
												"id": 315
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Domains",
										"id": 594
									},
									"overwrites": {
										"type": "reference",
										"name": "Graph.prepareDomains",
										"id": 723
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 139,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Graph.prepareDomains",
								"id": 723
							}
						},
						{
							"id": 2464,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2465,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the tree with the supplied data. The call returns a {@link Graph.RenderChain `RenderChain`}\nfunction that allows rendering to be repeated at fixed intervals with updated data.",
										"returns": "a `RenderChain`.\n"
									},
									"parameters": [
										{
											"id": 2466,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the data to render. If `data` is a {@link Graph.DataSet DataSet}, it will be used\nto render all added series. Otherwise `data` can be specified as `DataSet[]` to provide a\ndifferent data source to each of the series. The series' index is used to index the list,\nstarting with 0 in the order of adding it to the graph.\nIf there are more series than data sets ion the list, indexing will restart at index 0."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "RenderChain",
										"id": 619
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.render",
										"id": 685
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 346,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.render",
								"id": 685
							}
						},
						{
							"id": 2483,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2484,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component."
									},
									"parameters": [
										{
											"id": 2485,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.renderComponent",
										"id": 710
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.renderComponent",
										"id": 634
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 419,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.renderComponent",
								"id": 710
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						},
						{
							"id": 2489,
							"name": "renderLifecycle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2490,
									"name": "renderLifecycle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2491,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.renderLifecycle",
										"id": 716
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 428,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.renderLifecycle",
								"id": 716
							}
						},
						{
							"id": 2433,
							"name": "setScales",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2434,
									"name": "setScales",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set scales, called during `prerender`"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Graph.setScales",
										"id": 719
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 126,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Graph.setScales",
								"id": 719
							}
						},
						{
							"id": 2455,
							"name": "transition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2456,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the `Graphs` transition duration as an alternative to `defaults.graph.transitionTime`.\nIf `done` is provided, it will be used as a callback for when the transition ends."
									},
									"parameters": [
										{
											"id": 2457,
											"name": "duration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2458,
											"name": "done",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2459,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2460,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2461,
																	"name": "data",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "DataSet",
																		"id": 585
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "Graph.ts",
															"line": 326,
															"character": 45
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Graph.transition",
										"id": 676
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 326,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Graph.transition",
								"id": 676
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2443
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2492,
								2442,
								2441
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2475,
								2471,
								2446,
								2473,
								2469,
								2477,
								2453,
								2448
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2467,
								2438,
								2462,
								2431,
								2486,
								2479,
								2435,
								2464,
								2483,
								2489,
								2433,
								2455
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphCartesian.ts",
							"line": 108,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Graph",
							"id": 646
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						},
						{
							"type": "reference",
							"name": "Components",
							"id": 640
						}
					]
				},
				{
					"id": 2424,
					"name": "CartDimensions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 2428,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 2429,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ValueDef",
									"id": 740
								}
							}
						}
					],
					"children": [
						{
							"id": 2425,
							"name": "hor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 106,
									"character": 61
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ValueDef",
									"id": 740
								}
							}
						},
						{
							"id": 2427,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 106,
									"character": 94
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ValueDef",
									"id": 740
								}
							}
						},
						{
							"id": 2426,
							"name": "ver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphCartesian.ts",
									"line": 106,
									"character": 77
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ValueDef",
									"id": 740
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2425,
								2427,
								2426
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphCartesian.ts",
							"line": 106,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphDimensions",
							"id": 591
						}
					]
				},
				{
					"id": 2493,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "GraphCartesian.ts",
							"line": 84,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('GraphCartesian')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2430
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2424
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2493
					]
				}
			],
			"sources": [
				{
					"fileName": "GraphCartesian.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 750,
			"name": "\"GraphComponent\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/GraphComponent.ts",
			"comment": {},
			"children": [
				{
					"id": 1321,
					"name": "GraphBase",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 1323,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1324,
									"name": "new GraphBase",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1325,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "GraphBase",
										"id": 1321
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 28
								}
							]
						},
						{
							"id": 1322,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							}
						},
						{
							"id": 1328,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "getter for the defaults."
							},
							"getSignature": [
								{
									"id": 1329,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "getter for the defaults."
									},
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 90,
									"character": 25
								}
							]
						},
						{
							"id": 1326,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1327,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates a default entry for the component type in `Defaults`"
									},
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 87,
									"character": 27
								}
							]
						},
						{
							"id": 1330,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1331,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "called once during creation of the `Graph`. m"
									},
									"parameters": [
										{
											"id": 1332,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 95,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 1340,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1341,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after each call to renderComponent."
									},
									"parameters": [
										{
											"id": 1342,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 104,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 1333,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1334,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before each call to renderComponent."
									},
									"parameters": [
										{
											"id": 1335,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 1336,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.preRender",
										"id": 630
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 98,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 1337,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1338,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component."
									},
									"parameters": [
										{
											"id": 1339,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.renderComponent",
										"id": 634
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 101,
									"character": 28
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1323
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1322
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1328
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1326,
								1330,
								1340,
								1333,
								1337
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 78,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Graph",
							"id": 646
						},
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 1343,
					"name": "GraphComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Generic base class for all component types"
					},
					"children": [
						{
							"id": 1345,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1346,
									"name": "new GraphComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1347,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1348,
											"name": "compClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "GraphComponent",
										"id": 1343
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.__constructor",
										"id": 1323
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.__constructor",
								"id": 1323
							}
						},
						{
							"id": 1351,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 1344,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						},
						{
							"id": 1349,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "returns the component type as a string name"
							},
							"getSignature": [
								{
									"id": 1350,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "returns the component type as a string name"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 126,
									"character": 30
								}
							]
						},
						{
							"id": 1354,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "getter for the defaults."
							},
							"getSignature": [
								{
									"id": 1355,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "getter for the defaults."
									},
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 90,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 1352,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1353,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates a default entry for the component type in `Defaults`"
									},
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 87,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 1356,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1357,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "called once during creation of the `Graph`. m"
									},
									"parameters": [
										{
											"id": 1358,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 95,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 1366,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1367,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after each call to renderComponent."
									},
									"parameters": [
										{
											"id": 1368,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 104,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 1359,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1360,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before each call to renderComponent."
									},
									"parameters": [
										{
											"id": 1361,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 1362,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.preRender",
										"id": 630
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 98,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 1363,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1364,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component."
									},
									"parameters": [
										{
											"id": 1365,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.renderComponent",
										"id": 634
									}
								}
							],
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 101,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1345
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1351,
								1344
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1349,
								1354
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1352,
								1356,
								1366,
								1359,
								1363
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 110,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphBase",
							"id": 1321
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Series",
							"id": 197
						},
						{
							"type": "reference",
							"name": "Scales",
							"id": 325
						},
						{
							"type": "reference",
							"name": "Grids",
							"id": 503
						},
						{
							"type": "reference",
							"name": "Canvas",
							"id": 554
						},
						{
							"type": "reference",
							"name": "Axes",
							"id": 1393
						},
						{
							"type": "reference",
							"name": "Title",
							"id": 2605
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 1277,
					"name": "Area",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1278,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 83,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"id": 55
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Fill.color",
								"id": 9
							}
						},
						{
							"id": 1279,
							"name": "opacity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 84,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ZeroToOne",
								"id": 56
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Fill.opacity",
								"id": 10
							}
						},
						{
							"id": 1280,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Rendered.rendered",
								"id": 1270
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1278,
								1279,
								1280
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 29,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Fill",
							"id": 8
						},
						{
							"type": "reference",
							"name": "Rendered",
							"id": 1269
						}
					]
				},
				{
					"id": 1318,
					"name": "ComponentDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Generic base interface for the default setting for all component types."
					},
					"indexSignature": [
						{
							"id": 1319,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Generic base interface for the default setting for all component types."
							},
							"parameters": [
								{
									"id": 1320,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 74,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "SeriesDefaults",
							"id": 194
						},
						{
							"type": "reference",
							"name": "ScalesDefaults",
							"id": 315
						},
						{
							"type": "reference",
							"name": "GridDefaults",
							"id": 491
						},
						{
							"type": "reference",
							"name": "CanvasDefaults",
							"id": 547
						},
						{
							"type": "reference",
							"name": "GraphDefaults",
							"id": 580
						},
						{
							"type": "reference",
							"name": "AxisDefaults",
							"id": 1374
						},
						{
							"type": "reference",
							"name": "AxesDefaults",
							"id": 1386
						},
						{
							"type": "reference",
							"name": "TitleDefaults",
							"id": 2600
						}
					]
				},
				{
					"id": 1296,
					"name": "GraphCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Configuration parameters for the render tree, passed to each `GraphComponent` during construction."
					},
					"children": [
						{
							"id": 1297,
							"name": "baseSVG",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg for the rendering tree"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 39,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						},
						{
							"id": 1298,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "dimensions of the HTML client rect containing this graph in pixel."
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 42,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1299,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1303,
											"name": "height",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "GraphComponent.ts",
													"line": 42,
													"character": 55
												}
											],
											"type": {
												"type": "reference",
												"name": "pixel",
												"id": 1369
											}
										},
										{
											"id": 1302,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "GraphComponent.ts",
													"line": 42,
													"character": 41
												}
											],
											"type": {
												"type": "reference",
												"name": "pixel",
												"id": 1369
											}
										},
										{
											"id": 1300,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "GraphComponent.ts",
													"line": 42,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "pixel",
												"id": 1369
											}
										},
										{
											"id": 1301,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "GraphComponent.ts",
													"line": 42,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"name": "pixel",
												"id": 1369
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1303,
												1302,
												1300,
												1301
											]
										}
									],
									"sources": [
										{
											"fileName": "GraphComponent.ts",
											"line": 42,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1308,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Default settings for GraphComp[onents in this graph]"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 51,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "DefaultsType",
								"id": 47
							}
						},
						{
							"id": 1309,
							"name": "scales",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "mapping of semantic scales to data columns and scaling functions.\nThe scaling function will be set at rendering time for each new rendering frame.",
								"tags": [
									{
										"tag": "param",
										"text": "*string* the semantic name of the axis to plot and scale. E.g. for 2D cartesian plots,\n`dim` is `hor`, `ver`, or `size`.\n",
										"param": "dim"
									}
								]
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 60,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1310,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 1311,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 1312,
													"name": "dim",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 253
											}
										}
									],
									"sources": [
										{
											"fileName": "GraphComponent.ts",
											"line": 60,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 1313,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "used to aggregate series into grouped stacks."
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 65,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1314,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 1315,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 1316,
													"name": "group",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "GraphComponent.ts",
											"line": 65,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 1317,
							"name": "transition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the currently used transition. A new transition will be set each time `Graph.render()` is called."
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1304,
							"name": "viewPort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "top level svg viewBox dimensions in viewport units"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 45,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1305,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1307,
											"name": "height",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "GraphComponent.ts",
													"line": 47,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "UnitVp",
												"id": 42
											}
										},
										{
											"id": 1306,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "GraphComponent.ts",
													"line": 46,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "UnitVp",
												"id": 42
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1307,
												1306
											]
										}
									],
									"sources": [
										{
											"fileName": "GraphComponent.ts",
											"line": 45,
											"character": 13
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1297,
								1298,
								1308,
								1309,
								1313,
								1317,
								1304
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 37,
							"character": 25
						}
					]
				},
				{
					"id": 1271,
					"name": "Line",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1273,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 89,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"id": 55
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Stroke.color",
								"id": 13
							}
						},
						{
							"id": 1275,
							"name": "dashed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 91,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Stroke.dashed",
								"id": 15
							}
						},
						{
							"id": 1274,
							"name": "opacity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 90,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ZeroToOne",
								"id": 56
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Stroke.opacity",
								"id": 14
							}
						},
						{
							"id": 1276,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Rendered.rendered",
								"id": 1270
							}
						},
						{
							"id": 1272,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Stroke.width",
								"id": 12
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1273,
								1275,
								1274,
								1276,
								1272
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 28,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Stroke",
							"id": 11
						},
						{
							"type": "reference",
							"name": "Rendered",
							"id": 1269
						}
					]
				},
				{
					"id": 1281,
					"name": "Marker",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1284,
							"name": "fill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 119,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Fill",
								"id": 8
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MarkerStyle.fill",
								"id": 39
							}
						},
						{
							"id": 1286,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Rendered.rendered",
								"id": 1270
							}
						},
						{
							"id": 1283,
							"name": "shape",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "MarkerShape",
								"id": 30
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MarkerStyle.shape",
								"id": 38
							}
						},
						{
							"id": 1282,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 117,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MarkerStyle.size",
								"id": 37
							}
						},
						{
							"id": 1285,
							"name": "stroke",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MarkerStyle.stroke",
								"id": 40
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1284,
								1286,
								1283,
								1282,
								1285
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 30,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "MarkerStyle",
							"id": 36
						},
						{
							"type": "reference",
							"name": "Rendered",
							"id": 1269
						}
					]
				},
				{
					"id": 1269,
					"name": "Rendered",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1270,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1270
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 25,
							"character": 25
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Line",
							"id": 1271
						},
						{
							"type": "reference",
							"name": "Area",
							"id": 1277
						},
						{
							"type": "reference",
							"name": "Marker",
							"id": 1281
						},
						{
							"type": "reference",
							"name": "Text",
							"id": 1287
						}
					]
				},
				{
					"id": 1010,
					"name": "SVGCircleSelection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1109,
							"name": "append",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1110,
									"name": "append",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends a new element of this type (tag name) as the last child of each selected element,\nor before the next following sibling in the update selection if this is an enter selection.\nThe latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data;\nhowever, note that selection.order may still be required if updating elements change order\n(i.e., if the order of new data is inconsistent with old data).",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n"
									},
									"typeParameter": [
										{
											"id": 1111,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ElementTagNameMap"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1112,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing the tag name.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"name": "ElementTagNameMap"
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ElementTagNameMap[K]"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.append"
									}
								},
								{
									"id": 1113,
									"name": "append",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends a new element of this type (tag name) as the last child of each selected element,\nor before the next following sibling in the update selection if this is an enter selection.\nThe latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data;\nhowever, note that selection.order may still be required if updating elements change order\n(i.e., if the order of new data is inconsistent with old data).",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 1114,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1115,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing the tag name. The specified name may have a namespace prefix, such as svg:text\nto specify a text attribute in the SVG namespace. If no namespace is specified, the namespace will be inherited\nfrom the parent element; or, if the name is one of the known prefixes, the corresponding namespace will be used\n(for example, svg implies svg:svg)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ChildElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.append"
									}
								},
								{
									"id": 1116,
									"name": "append",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends a new element of the type provided by the element creator function as the last child of each selected element,\nor before the next following sibling in the update selection if this is an enter selection.\nThe latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data;\nhowever, note that selection.order may still be required if updating elements change order\n(i.e., if the order of new data is inconsistent with old data).",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 1117,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1118,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A creator function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return\nan element to be appended. (The function typically creates a new element, but it may instead return an existing element.)\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "ChildElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ChildElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.append"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 480,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 498,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 516,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.append"
							}
						},
						{
							"id": 1035,
							"name": "attr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1036,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the current value of the specified attribute for the first (non-null) element in the selection.\nThis is generally useful only if you know that the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 1037,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								},
								{
									"id": 1038,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the attribute with the specified name for the selected elements and returns this selection."
									},
									"parameters": [
										{
											"id": 1039,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1040,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null,to clear the attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								},
								{
									"id": 1041,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the attribute with the specified name for the selected elements and returns this selection.\nAll elements are given the same attribute value."
									},
									"parameters": [
										{
											"id": 1042,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1043,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Constant value for the attribute\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								},
								{
									"id": 1044,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the attribute with the specified name for the selected elements and returns this selection.\nThe value for the individual selected elements is determined by the value function."
									},
									"parameters": [
										{
											"id": 1045,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1046,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).  A null value will clear the attribute.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 269,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 276,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 284,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 293,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.attr"
							}
						},
						{
							"id": 1245,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1246,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Invoke the specified function exactly once, passing in this selection along with any optional arguments.\nReturns this selection."
									},
									"parameters": [
										{
											"id": 1247,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A function which is passed this selection as the first argument along with any optional arguments."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1248,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1249,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1250,
																	"name": "selection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																},
																{
																	"id": 1251,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 919,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 1252,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "List of optional arguments to be passed to the callback function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.call"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 919,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.call"
							}
						},
						{
							"id": 1047,
							"name": "classed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1048,
									"name": "classed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if and only if the first (non-null) selected element has the specified classes.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 1049,
											"name": "names",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.classed"
									}
								},
								{
									"id": 1050,
									"name": "classed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Assigns or unassigns the specified CSS class names on the selected elements by setting\nthe class attribute or modifying the classList property and returns this selection.\nIf the constant value is truthy, then all elements are assigned the specified classes; otherwise, the classes are unassigned."
									},
									"parameters": [
										{
											"id": 1051,
											"name": "names",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string of space-separated class names."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1052,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A boolean flag (true = assign / false = unassign)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.classed"
									}
								},
								{
									"id": 1053,
									"name": "classed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Assigns or unassigns the specified CSS class names on the selected elements by setting\nthe class attribute or modifying the classList property and returns this selection.\nThe assign/unassign status for the individual selected elements is determined by the boolean return\nvalue of the value function."
									},
									"parameters": [
										{
											"id": 1054,
											"name": "names",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string of space-separated class names."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1055,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order,\nbeing passed the current datum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nThe function’s return value is then used to assign or unassign classes on each element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.classed"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 301,
									"character": 11
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 310,
									"character": 11
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 322,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.classed"
							}
						},
						{
							"id": 1130,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1131,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts clones of the selected elements immediately following the selected elements and returns a selection of the newly\nadded clones. If deep is true, the descendant nodes of the selected elements will be cloned as well. Otherwise, only the elements\nthemselves will be cloned."
									},
									"parameters": [
										{
											"id": 1132,
											"name": "deep",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Perform deep cloning if this flag is set to true.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.clone"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 581,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.clone"
							}
						},
						{
							"id": 1170,
							"name": "data",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1171,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the array of data for the selected elements."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.data"
									}
								},
								{
									"id": 1172,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Joins the specified array of data with the selected elements, returning a new selection that represents\nthe update selection: the elements successfully bound to data. Also defines the enter and exit selections on\nthe returned selection, which can be used to add or remove elements to correspond to the new data.",
										"text": "The data is specified for each group in the selection. If the selection has multiple groups\n(such as d3.selectAll followed by selection.selectAll), then data should typically be specified as a function.\n\nIf a key function is not specified, then the first datum in data is assigned to the first selected element,\nthe second datum to the second selected element, and so on.\nA key function may be specified to control which datum is assigned to which element, replacing the default join-by-index,\nby computing a string identifier for each datum and element.\n\nThe update and enter selections are returned in data order, while the exit selection preserves the selection\norder prior to the join. If a key function is specified, the order of elements in the selection may not match\ntheir order in the document; use selection.order or selection.sort as needed.\n\nThis method cannot be used to clear bound data; use selection.datum instead.\n\nFor details see: {@link https://github.com/d3/d3-selection#joining-data }\n\nThe generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 1173,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1174,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The specified data is an array of arbitrary values (e.g., numbers or objects)."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "NewDatum"
												}
											}
										},
										{
											"id": 1175,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional key function which is evaluated for each selected element, in order, being passed the\ncurrent datum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]); the returned string is the element’s key.\nThe key function is then also evaluated for each new datum in data, being passed the current datum (d),\nthe current index (i), and the group’s new data, with this as the group’s parent DOM element (nodes[i]); the returned string is the datum’s key.\nThe datum for a given key is assigned to the element with the matching key. If multiple elements have the same key,\nthe duplicate elements are put into the exit selection; if multiple data have the same key, the duplicate data are put into the enter selection.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "SVGCircleElement"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "typeParameter",
																"name": "NewDatum"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.data"
									}
								},
								{
									"id": 1176,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Joins the data returned by the specified value function with the selected elements, returning a new selection that it represents\nthe update selection: the elements successfully bound to data. Also defines the enter and exit selections on\nthe returned selection, which can be used to add or remove elements to correspond to the new data.",
										"text": "The data is specified for each group in the selection.\n\nIf a key function is not specified, then the first datum in data is assigned to the first selected element,\nthe second datum to the second selected element, and so on.\nA key function may be specified to control which datum is assigned to which element, replacing the default join-by-index,\nby computing a string identifier for each datum and element.\n\nThe update and enter selections are returned in data order, while the exit selection preserves the selection\norder prior to the join. If a key function is specified, the order of elements in the selection may not match\ntheir order in the document; use selection.order or selection.sort as needed.\n\nThis method cannot be used to clear bound data; use selection.datum instead.\n\nFor details see: {@link https://github.com/d3/d3-selection#joining-data }\n\nThe generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 1177,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1178,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which will be evaluated for each group in order, being passed the group’s parent datum\n(d, which may be undefined), the group index (i), and the selection’s parent nodes (nodes),\nwith this as the group’s parent element. The function returns an array of values for each group."
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaseType"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "NewDatum"
														}
													}
												]
											}
										},
										{
											"id": 1179,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional key function which is evaluated for each selected element, in order, being passed the\ncurrent datum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]); the returned string is the element’s key.\nThe key function is then also evaluated for each new datum in data, being passed the current datum (d),\nthe current index (i), and the group’s new data, with this as the group’s parent DOM element (nodes[i]); the returned string is the datum’s key.\nThe datum for a given key is assigned to the element with the matching key. If multiple elements have the same key,\nthe duplicate elements are put into the exit selection; if multiple data have the same key, the duplicate data are put into the enter selection.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "SVGCircleElement"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "typeParameter",
																"name": "NewDatum"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.data"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 718,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 750,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 783,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.data"
							}
						},
						{
							"id": 1160,
							"name": "datum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1161,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the bound datum for the first (non-null) element in the selection.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								},
								{
									"id": 1162,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the bound data for each element in the selection."
									},
									"parameters": [
										{
											"id": 1163,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								},
								{
									"id": 1164,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the element’s bound data using the specified value function on all selected elements.\nUnlike selection.data, this method does not compute a join and does not affect\nindexes or the enter and exit selections.",
										"text": "The generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 1165,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1166,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order,\nbeing passed the current datum (d), the current index (i), and the current group (nodes),\nwith this as the current DOM element (nodes[i]). The function is then used to set each element’s new data.\nA null value will delete the bound data.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "NewDatum"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								},
								{
									"id": 1167,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the element’s bound data to the specified value on all selected elements.\nUnlike selection.data, this method does not compute a join and does not affect\nindexes or the enter and exit selections.",
										"text": "The generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 1168,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1169,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value object to be used as the datum for each element.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "NewDatum"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 686,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 690,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 703,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 713,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.datum"
							}
						},
						{
							"id": 1235,
							"name": "dispatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1236,
									"name": "dispatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispatches a custom event of the specified type to each selected element, in order.\nAn optional parameters map may be specified to set additional properties of the event."
									},
									"parameters": [
										{
											"id": 1237,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of event to dispatch"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1238,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional value map with custom event parameters\n"
											},
											"type": {
												"type": "reference",
												"name": "CustomEventParameters"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.dispatch"
									}
								},
								{
									"id": 1239,
									"name": "dispatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispatches a custom event of the specified type to each selected element, in order.\nAn optional value function returning a parameters map for each element in the selection may be specified to set additional properties of the event."
									},
									"parameters": [
										{
											"id": 1240,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of event to dispatch"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1241,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order,\nbeing passed the current datum (d), the current index (i), and the current group (nodes),\nwith this as the current DOM element (nodes[i]). It must return the parameters map for the current element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "CustomEventParameters"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.dispatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 888,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 898,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.dispatch"
							}
						},
						{
							"id": 1242,
							"name": "each",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1243,
									"name": "each",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Invoke the specified function for each selected element, passing in the current datum (d),\nthe current index (i), and the current group (nodes), with this of the current DOM element (nodes[i]).\nThis method can be used to invoke arbitrary code for each selected element, and is useful for creating a context to access parent and child data simultaneously."
									},
									"parameters": [
										{
											"id": 1244,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A function which is invoked for each selected element,\n            being passed the current datum (d), the current index (i), and the current group (nodes), with this of the current DOM element (nodes[i]).\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.each"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 910,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.each"
							}
						},
						{
							"id": 1253,
							"name": "empty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1254,
									"name": "empty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return true if this selection contains no (non-null) elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.empty"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 924,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.empty"
							}
						},
						{
							"id": 1220,
							"name": "enter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1221,
									"name": "enter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the enter selection: placeholder nodes for each datum that had no corresponding DOM element\nin the selection. (The enter selection is empty for selections not returned by selection.data.)"
									},
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EnterElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.enter"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 823,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.enter"
							}
						},
						{
							"id": 1222,
							"name": "exit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1223,
									"name": "exit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the exit selection: existing DOM elements in the selection for which no new datum was found.\n(The exit selection is empty for selections not returned by selection.data.)",
										"text": "IMPORTANT: The generic refers to the type of the old datum associated with the exit selection elements.\nEnsure you set the generic to the correct type, if you need to access the data on the exit selection in\nfollow-up steps, e.g. to set styles as part of an exit transition before removing them.\n"
									},
									"typeParameter": [
										{
											"id": 1224,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "typeParameter",
												"name": "OldDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.exit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 833,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.exit"
							}
						},
						{
							"id": 1136,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1137,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filters the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n"
									},
									"parameters": [
										{
											"id": 1138,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A CSS selector string to match when filtering.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								},
								{
									"id": 1139,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filters the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n\nThe generic refers to the type of element which will be selected after applying the filter, i.e. if the element types\ncontained in a pre-filter selection are narrowed to a subset as part of the filtering.\n"
									},
									"typeParameter": [
										{
											"id": 1140,
											"name": "FilteredElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1141,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A CSS selector string to match when filtering.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "FilteredElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								},
								{
									"id": 1142,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filter the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n"
									},
									"parameters": [
										{
											"id": 1143,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return true\nfor an element to be included, and false otherwise.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								},
								{
									"id": 1144,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filter the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n"
									},
									"typeParameter": [
										{
											"id": 1145,
											"name": "FilteredElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1146,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return true\nfor an element to be included, and false otherwise.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "FilteredElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 611,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 624,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 636,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 648,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.filter"
							}
						},
						{
							"id": 1101,
							"name": "html",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1102,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the inner HTML for the first (non-null) element in the selection.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								},
								{
									"id": 1103,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the html content of the selected elements and return the selection."
									},
									"parameters": [
										{
											"id": 1104,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								},
								{
									"id": 1105,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the inner HTML to the specified value on all selected elements, replacing any existing child elements.\nAll elements are given the same inner HTML"
									},
									"parameters": [
										{
											"id": 1106,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "String representation of inner HTML.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								},
								{
									"id": 1107,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the inner HTML to the specified value on all selected elements, replacing any existing child elements.\nThe inner HTML is determined for each individual element using a value function."
									},
									"parameters": [
										{
											"id": 1108,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current\ndatum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nThe function’s return value is then used to set each element’s inner HTML. A null value will clear the content.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 446,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 450,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 457,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 466,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.html"
							}
						},
						{
							"id": 1119,
							"name": "insert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1120,
									"name": "insert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts a new element of the specified type (tag name) before the first element matching the specified\nbefore selector for each selected element. For example, a before selector :first-child will prepend nodes before the first child.\nIf before is not specified, it defaults to null. (To append elements in an order consistent with bound data, use selection.append.)",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 1121,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ElementTagNameMap"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1122,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing the tag name for the element type to be inserted."
											},
											"type": {
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"name": "ElementTagNameMap"
													}
												}
											}
										},
										{
											"id": 1123,
											"name": "before",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "One of:\n  * A CSS selector string for the element before which the insertion should occur.\n  * A child selector function which is evaluated for each selected element, in order, being passed the current datum (d),\n    the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return the child element\n    before which the element should be inserted.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ValueFn",
														"id": 577,
														"typeArguments": [
															{
																"type": "reference",
																"name": "SVGCircleElement"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ElementTagNameMap[K]"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.insert"
									}
								},
								{
									"id": 1124,
									"name": "insert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts a new element of the specified type (tag name) before the first element matching the specified\nbefore selector for each selected element. For example, a before selector :first-child will prepend nodes before the first child.\nIf before is not specified, it defaults to null. (To append elements in an order consistent with bound data, use selection.append.)",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 1125,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1126,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "One of:\n  * A string representing the tag name for the element type to be inserted. The specified name may have a namespace prefix,\n    such as svg:text to specify a text attribute in the SVG namespace. If no namespace is specified, the namespace will be inherited\n    from the parent element; or, if the name is one of the known prefixes, the corresponding namespace will be used\n    (for example, svg implies svg:svg)\n  * A creator function which is evaluated for each selected element, in order, being passed the current datum (d),\n    the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return\n    an element to be inserted. (The function typically creates a new element, but it may instead return an existing element.)"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ValueFn",
														"id": 577,
														"typeArguments": [
															{
																"type": "reference",
																"name": "SVGCircleElement"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "typeParameter",
																"name": "ChildElement",
																"constraint": {
																	"type": "reference",
																	"name": "BaseType"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1127,
											"name": "before",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "One of:\n  * A CSS selector string for the element before which the insertion should occur.\n  * A child selector function which is evaluated for each selected element, in order, being passed the current datum (d),\n    the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return the child element\n    before which the element should be inserted.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ValueFn",
														"id": 577,
														"typeArguments": [
															{
																"type": "reference",
																"name": "SVGCircleElement"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ChildElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.insert"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 535,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 563,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.insert"
							}
						},
						{
							"id": 1261,
							"name": "interrupt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1262,
									"name": "interrupt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Interrupts the active transition of the specified name on the selected elements, and cancels any pending transitions with the specified name, if any.\nIf a name is not specified, null is used.",
										"text": "IMPORTANT: Interrupting a transition on an element has no effect on any transitions on any descendant elements.\nFor example, an axis transition consists of multiple independent, synchronized transitions on the descendants of the axis G element\n(the tick lines, the tick labels, the domain path, etc.). To interrupt the axis transition, you must therefore interrupt the descendants.\n"
									},
									"parameters": [
										{
											"id": 1263,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Name of the transition.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transition",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.interrupt"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-transition/index.d.ts",
									"line": 34,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.interrupt"
							}
						},
						{
							"id": 1180,
							"name": "join",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1181,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends, removes and reorders elements as necessary to match the data that was previously bound by `selection.data`, returning the merged enter and update selection.\nThis method is a convenient alternative to the more explicit `selection.enter`, `selection.exit`, `selection.append` and `selection.remove`.",
										"text": "The \"matching\" logic is determined by the key function passed to `selection.data`.\n"
									},
									"typeParameter": [
										{
											"id": 1182,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ElementTagNameMap"
												}
											}
										},
										{
											"id": 1183,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1184,
											"name": "enter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"name": "ElementTagNameMap"
													}
												}
											}
										},
										{
											"id": 1185,
											"name": "update",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1186,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1187,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1188,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 793,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 1189,
											"name": "exit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1190,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1191,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1192,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "typeParameter",
																				"name": "OldDatum"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 794,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "unknown",
														"name": "ElementTagNameMap[K]"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.join"
									}
								},
								{
									"id": 1193,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends, removes and reorders elements as necessary to match the data that was previously bound by `selection.data`, returning the merged enter and update selection.\nThis method is a convenient alternative to the more explicit `selection.enter`, `selection.exit`, `selection.append` and `selection.remove`.",
										"text": "The \"matching\" logic is determined by the key function passed to `selection.data`.\n"
									},
									"typeParameter": [
										{
											"id": 1194,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 1195,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1196,
											"name": "enter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1197,
											"name": "update",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1198,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1199,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1200,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 804,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 1201,
											"name": "exit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1202,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1203,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1204,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "typeParameter",
																				"name": "OldDatum"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 805,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "ChildElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													},
													{
														"type": "reference",
														"name": "SVGCircleElement"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.join"
									}
								},
								{
									"id": 1205,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends, removes and reorders elements as necessary to match the data that was previously bound by `selection.data`, returning the merged enter and update selection.\nThis method is a convenient alternative to the more explicit `selection.enter`, `selection.exit`, `selection.append` and `selection.remove`.",
										"text": "The \"matching\" logic is determined by the key function passed to `selection.data`.\n"
									},
									"typeParameter": [
										{
											"id": 1206,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 1207,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1208,
											"name": "enter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1209,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1210,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1211,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "EnterElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Selection",
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "ChildElement",
																		"constraint": {
																			"type": "reference",
																			"name": "BaseType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reference",
																		"name": "BaseType"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 814,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 1212,
											"name": "update",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1213,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1214,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1215,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 815,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 1216,
											"name": "exit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1217,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1218,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1219,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGCircleElement"
																			},
																			{
																				"type": "typeParameter",
																				"name": "OldDatum"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 816,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "ChildElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													},
													{
														"type": "reference",
														"name": "SVGCircleElement"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.join"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 791,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 802,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 813,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.join"
							}
						},
						{
							"id": 1158,
							"name": "lower",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1159,
									"name": "lower",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-insert each selected element, in order, as the first child of its parent."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.lower"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 678,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.lower"
							}
						},
						{
							"id": 1133,
							"name": "merge",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1134,
									"name": "merge",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new selection merging this selection with the specified other selection.\nThe returned selection has the same number of groups and the same parents as this selection.\nAny missing (null) elements in this selection are filled with the corresponding element,\nif present (not null), from the specified selection. (If the other selection has additional groups or parents,\nthey are ignored.)",
										"text": "This method is commonly used to merge the enter and update selections after a data-join.\nAfter modifying the entering and updating elements separately, you can merge the two selections and\nperform operations on both without duplicate code.\n\nThis method is not intended for concatenating arbitrary selections, however: if both this selection\nand the specified other selection have (non-null) elements at the same index, this selection’s element\nis returned in the merge and the other selection’s element is ignored.\n"
									},
									"parameters": [
										{
											"id": 1135,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Selection to be merged.\n"
											},
											"type": {
												"type": "reference",
												"name": "Selection",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "BaseType"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.merge"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 600,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.merge"
							}
						},
						{
							"id": 1255,
							"name": "node",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1256,
									"name": "node",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the first (non-null) element in this selection. If the selection is empty, returns null."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.node"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 929,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.node"
							}
						},
						{
							"id": 1257,
							"name": "nodes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1258,
									"name": "nodes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return an array of all (non-null) elements in this selection."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "SVGCircleElement"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.nodes"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 934,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.nodes"
							}
						},
						{
							"id": 1225,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1226,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the currently-assigned listener for the specified event typename on the first (non-null) selected element,\nif any, If multiple typenames are specified, the first matching listener is returned."
									},
									"parameters": [
										{
											"id": 1227,
											"name": "typenames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The typenames is a string event type, such as click, mouseover, or submit; any DOM event type supported by your browser may be used.\nThe type may be optionally followed by a period (.) and a name; the optional name allows multiple callbacks to be registered\nto receive events of the same type, such as click.foo and click.bar. To specify multiple typenames, separate typenames with spaces,\nsuch as \"input change\"\" or \"click.foo click.bar\".\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.on"
									}
								},
								{
									"id": 1228,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove a listener for the specified event type names. To remove all listeners for a given name,\npass null as the listener and \".foo\" as the typename, where foo is the name; to remove all listeners with no name, specify \".\" as the typename."
									},
									"parameters": [
										{
											"id": 1229,
											"name": "typenames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The typenames is a string event type, such as click, mouseover, or submit; any DOM event type supported by your browser may be used.\nThe type may be optionally followed by a period (.) and a name; the optional name allows multiple callbacks to be registered\nto receive events of the same type, such as click.foo and click.bar. To specify multiple typenames, separate typenames with spaces,\nsuch as \"input change\"\" or \"click.foo click.bar\"."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1230,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null to indicate removal of listener\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.on"
									}
								},
								{
									"id": 1231,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an event listener for the specified event type names. If an event listener was previously registered for the same typename\non a selected element, the old listener is removed before the new listener is added.",
										"text": "When a specified event is dispatched on a selected node, the specified listener will be evaluated for each selected element.\n\nAn optional capture flag may be specified which corresponds to the W3C useCapture flag:\n\"After initiating capture, all events of the specified type will be dispatched to the registered EventListener before being\ndispatched to any EventTargets beneath them in the tree. Events which are bubbling upward through the tree will not\ntrigger an EventListener designated to use capture.\"\n"
									},
									"parameters": [
										{
											"id": 1232,
											"name": "typenames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The typenames is a string event type, such as click, mouseover, or submit; any DOM event type supported by your browser may be used.\nThe type may be optionally followed by a period (.) and a name; the optional name allows multiple callbacks to be registered\nto receive events of the same type, such as click.foo and click.bar. To specify multiple typenames, separate typenames with spaces,\nsuch as \"input change\"\" or \"click.foo click.bar\"."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1233,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A listener function which will be evaluated for each selected element, being passed the current datum (d), the current index (i),\nand the current group (nodes), with this as the current DOM element (nodes[i]). Listeners always see the latest datum for their element,\nbut the index is a property of the selection and is fixed when the listener is assigned; to update the index, re-assign the listener.\nTo access the current event within a listener, use d3.event."
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										},
										{
											"id": 1234,
											"name": "capture",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional capture flag which corresponds to the W3C useCapture flag.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.on"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 846,
									"character": 6
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 857,
									"character": 6
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 879,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.on"
							}
						},
						{
							"id": 1154,
							"name": "order",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1155,
									"name": "order",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-insert elements into the document such that the document order of each group matches the selection order.\nThis is equivalent to calling selection.sort if the data is already sorted, but much faster."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.order"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 668,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.order"
							}
						},
						{
							"id": 1070,
							"name": "property",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1071,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the current value of the specified property for the first (non-null) element in the selection.\nThis is generally useful only if you know that the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 1072,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 1073,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Look up a local variable on the first node of this selection. Note that this is not equivalent to `local.get(selection.node())` in that it will not look up locals set on the parent node(s)."
									},
									"typeParameter": [
										{
											"id": 1074,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1075,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The `d3.local` variable to look up.\n"
											},
											"type": {
												"type": "reference",
												"name": "Local",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 1076,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the property with the specified name for the selected elements and returns this selection.\nThe value for the individual selected elements is determined by the value function.",
										"text": "Some HTML elements have special properties that are not addressable using attributes or styles,\nsuch as a form field’s text value and a checkbox’s checked boolean. Use this method to get or set these properties.\n"
									},
									"parameters": [
										{
											"id": 1077,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1078,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).  A null value will clear the property.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 1079,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears the property with the specified name for the selected elements and returns this selection."
									},
									"parameters": [
										{
											"id": 1080,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1081,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null,to clear the property\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 1082,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the property with the specified name for the selected elements and returns this selection.\nAll elements are given the same property value."
									},
									"parameters": [
										{
											"id": 1083,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1084,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Constant value for the property\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 1085,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Store a value in a `d3.local` variable.\nThis is equivalent to `selection.each(function (d, i, g) { name.set(this, value.call(this, d, i, g)); })` but more concise."
									},
									"typeParameter": [
										{
											"id": 1086,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1087,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `d3.local` variable"
											},
											"type": {
												"type": "reference",
												"name": "Local",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 1088,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A callback that returns the value to store\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 1089,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Store a value in a `d3.local` variable for each node in the selection.\nThis is equivalent to `selection.each(function () { name.set(this, value); })` but more concise."
									},
									"typeParameter": [
										{
											"id": 1090,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1091,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `d3.local` variable"
											},
											"type": {
												"type": "reference",
												"name": "Local",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 1092,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A callback that returns the value to store\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 365,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 371,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 383,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 390,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 398,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 406,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 414,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.property"
							}
						},
						{
							"id": 1156,
							"name": "raise",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1157,
									"name": "raise",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-insert each selected element, in order, as the last child of its parent."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.raise"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 673,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.raise"
							}
						},
						{
							"id": 1128,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1129,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the selected elements from the document.\nReturns this selection (the removed elements) which are now detached from the DOM."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.remove"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 572,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.remove"
							}
						},
						{
							"id": 1011,
							"name": "select",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1012,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, select the first descendant element that matches the specified selector string.\nIf no element matches the specified selector for the current element, the element at the current index will\nbe null in the returned selection. If multiple elements match the selector, only the first matching element\nin document order is selected. Selection.select does not affect grouping: it preserves the existing group\nstructure and indexes, and propagates data (if any) to selected children.",
										"text": "If the current element has associated data, this data is propagated to the\ncorresponding selected element.\n\nThe generic represents the type of the descendant element to be selected.\n"
									},
									"typeParameter": [
										{
											"id": 1013,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1014,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "CSS selector string\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.select"
									}
								},
								{
									"id": 1015,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.select does not affect grouping: it preserves the existing group\nstructure and indexes."
									},
									"typeParameter": [
										{
											"id": 1016,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1017,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.select"
									}
								},
								{
									"id": 1018,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, select the descendant element returned by the selector function.\nIf no element is returned by the selector function for the current element, the element at the\ncurrent index will be null in the returned selection. Selection.select does not affect grouping:\nit preserves the existing group structure and indexes, and propagates data (if any) to selected children.",
										"text": "If the current element has associated data, this data is propagated to the\ncorresponding selected element.\n\nThe generic represents the type of the descendant element to be selected.\n"
									},
									"typeParameter": [
										{
											"id": 1019,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 1020,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A selector function, which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nIt must return an element, or null if there is no matching element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "DescElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.select"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 191,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 196,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 212,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.select"
							}
						},
						{
							"id": 1021,
							"name": "selectAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1022,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.selectAll does affect grouping: The elements in the returned\nselection are grouped by their corresponding parent node in this selection, the group at the current index will be empty."
									},
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 1023,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.selectAll does affect grouping: The elements in the returned\nselection are grouped by their corresponding parent node in this selection, the group at the current index will be empty."
									},
									"parameters": [
										{
											"id": 1024,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 1025,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.selectAll does affect grouping: The elements in the returned\nselection are grouped by their corresponding parent node in this selection, the group at the current index will be empty."
									},
									"parameters": [
										{
											"id": 1026,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 1027,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, selects the descendant elements that match the specified selector string. The elements in the returned\nselection are grouped by their corresponding parent node in this selection. If no element matches the specified selector\nfor the current element, the group at the current index will be empty. Selection.selectAll does affect grouping: each selected descendant\nis grouped by the parent element in the originating selection.",
										"text": "The selected elements do not inherit data from this selection; use selection.data to propagate data to children.\n\nThe first generic \"DescElement\" refers to the type of descendant element to be selected. The second generic \"OldDatum\" refers to the type of the\ndatum, of a selected element. This is useful when re-selecting elements with a previously set, know datum type.\n"
									},
									"typeParameter": [
										{
											"id": 1028,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 1029,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1030,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "CSS selector string\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "typeParameter",
												"name": "OldDatum"
											},
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 1031,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, selects the descendant elements returned by the selector function. The elements in the returned\nselection are grouped by their corresponding parent node in this selection. If no element matches the specified selector\nfor the current element, the group at the current index will be empty. Selection.selectAll does affect grouping: each selected descendant\nis grouped by the parent element in the originating selection.",
										"text": "The selected elements do not inherit data from this selection; use selection.data to propagate data to children.\n\nThe first generic \"DescElement\" refers to the type of descendant element to be selected. The second generic \"OldDatum\" refers to the type of the\ndatum, of a selected element. This is useful when re-selecting elements with a previously set, know datum type.\n"
									},
									"typeParameter": [
										{
											"id": 1032,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 1033,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1034,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A selector function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). It must return an array of elements\n(or a pseudo-array, such as a NodeList), or the empty array if there are no matching elements.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "typeParameter",
																	"name": "DescElement",
																	"constraint": {
																		"type": "reference",
																		"name": "BaseType"
																	}
																}
															},
															{
																"type": "reference",
																"name": "ArrayLike",
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "DescElement",
																		"constraint": {
																			"type": "reference",
																			"name": "BaseType"
																		}
																	}
																]
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "typeParameter",
												"name": "OldDatum"
											},
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 218,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 223,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 228,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 242,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 259,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.selectAll"
							}
						},
						{
							"id": 1259,
							"name": "size",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1260,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the total number of elements in this selection."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.size"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 939,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.size"
							}
						},
						{
							"id": 1147,
							"name": "sort",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1148,
									"name": "sort",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return a new selection that contains a copy of each group in this selection sorted according\nto the compare function. After sorting, re-inserts elements to match the resulting order (per selection.order).",
										"text": "Note that sorting is not guaranteed to be stable; however, it is guaranteed to have the same\nbehavior as your browser’s built-in sort method on arrays.\n"
									},
									"parameters": [
										{
											"id": 1149,
											"name": "comparator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional comparator function, which defaults to \"ascending\". The function is passed\ntwo elements’ data a and b to compare. It should return either a negative, positive, or zero value.\nIf negative, then a should be before b; if positive, then a should be after b; otherwise, a and b are\nconsidered equal and the order is arbitrary.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1150,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1151,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1152,
																	"name": "a",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1153,
																	"name": "b",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 662,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.sort"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 662,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.sort"
							}
						},
						{
							"id": 1056,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1057,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the current value of the specified style property for the first (non-null) element in the selection.\nThe current value is defined as the element’s inline value, if present, and otherwise its computed value.\nAccessing the current style value is generally useful only if you know the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 1058,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								},
								{
									"id": 1059,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the style with the specified name for the selected elements and returns this selection."
									},
									"parameters": [
										{
											"id": 1060,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1061,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null,to clear the style\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								},
								{
									"id": 1062,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the style with the specified name for the selected elements and returns this selection.\nAll elements are given the same style value."
									},
									"parameters": [
										{
											"id": 1063,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1064,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Constant value for the style"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 1065,
											"name": "priority",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional priority flag, either null or the string important (without the exclamation point)\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "stringLiteral",
														"value": "important"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								},
								{
									"id": 1066,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the style with the specified name for the selected elements and returns this selection.\nThe value for the individual selected elements is determined by the value function."
									},
									"parameters": [
										{
											"id": 1067,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1068,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).  A null value will clear the style."
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										},
										{
											"id": 1069,
											"name": "priority",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional priority flag, either null or the string important (without the exclamation point)\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "stringLiteral",
														"value": "important"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 331,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 338,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 347,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 357,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.style"
							}
						},
						{
							"id": 1093,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1094,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the text content for the first (non-null) element in the selection.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								},
								{
									"id": 1095,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the text content of the selected elements and return the selection."
									},
									"parameters": [
										{
											"id": 1096,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								},
								{
									"id": 1097,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the text content to the specified value on all selected elements, replacing any existing child elements.\nAll elements are given the same text content."
									},
									"parameters": [
										{
											"id": 1098,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Text content value for the elements.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								},
								{
									"id": 1099,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the text content to the specified value on all selected elements, replacing any existing child elements.\nAll elements are given the same text content."
									},
									"parameters": [
										{
											"id": 1100,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value unction which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nThe function’s return value is then used to set each element’s text content. A null value will clear the content.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 420,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 424,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 431,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 440,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.text"
							}
						},
						{
							"id": 1264,
							"name": "transition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1265,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new transition on the given selection with the specified name. If a name is not specified, null is used.\nThe new transition is only exclusive with other transitions of the same name."
									},
									"parameters": [
										{
											"id": 1266,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Name of the transition.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transition",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.transition"
									}
								},
								{
									"id": 1267,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new transition on the given selection.",
										"text": "When using a transition instance, the returned transition has the same id and name as the specified transition.\nIf a transition with the same id already exists on a selected element, the existing transition is returned for that element.\nOtherwise, the timing of the returned transition is inherited from the existing transition of the same id on the nearest ancestor of each selected element.\nThus, this method can be used to synchronize a transition across multiple selections,\nor to re-select a transition for specific elements and modify its configuration.\n\nIf the specified transition is not found on a selected node or its ancestors (such as if the transition already ended),\nthe default timing parameters are used; however, in a future release, this will likely be changed to throw an error.\n"
									},
									"parameters": [
										{
											"id": 1268,
											"name": "transition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A transition instance.\n"
											},
											"type": {
												"type": "reference",
												"name": "Transition",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaseType"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transition",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGCircleElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.transition"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-transition/index.d.ts",
									"line": 41,
									"character": 18
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-transition/index.d.ts",
									"line": 56,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.transition"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1109,
								1035,
								1245,
								1047,
								1130,
								1170,
								1160,
								1235,
								1242,
								1253,
								1220,
								1222,
								1136,
								1101,
								1119,
								1261,
								1180,
								1158,
								1133,
								1255,
								1257,
								1225,
								1154,
								1070,
								1156,
								1128,
								1011,
								1021,
								1259,
								1147,
								1056,
								1093,
								1264
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 23,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Selection",
							"typeArguments": [
								{
									"type": "reference",
									"name": "SVGCircleElement"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"name": "BaseType"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							]
						}
					]
				},
				{
					"id": 751,
					"name": "SVGLineSelection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 850,
							"name": "append",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 851,
									"name": "append",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends a new element of this type (tag name) as the last child of each selected element,\nor before the next following sibling in the update selection if this is an enter selection.\nThe latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data;\nhowever, note that selection.order may still be required if updating elements change order\n(i.e., if the order of new data is inconsistent with old data).",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n"
									},
									"typeParameter": [
										{
											"id": 852,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ElementTagNameMap"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 853,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing the tag name.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"name": "ElementTagNameMap"
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ElementTagNameMap[K]"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.append"
									}
								},
								{
									"id": 854,
									"name": "append",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends a new element of this type (tag name) as the last child of each selected element,\nor before the next following sibling in the update selection if this is an enter selection.\nThe latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data;\nhowever, note that selection.order may still be required if updating elements change order\n(i.e., if the order of new data is inconsistent with old data).",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 855,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 856,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing the tag name. The specified name may have a namespace prefix, such as svg:text\nto specify a text attribute in the SVG namespace. If no namespace is specified, the namespace will be inherited\nfrom the parent element; or, if the name is one of the known prefixes, the corresponding namespace will be used\n(for example, svg implies svg:svg)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ChildElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.append"
									}
								},
								{
									"id": 857,
									"name": "append",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends a new element of the type provided by the element creator function as the last child of each selected element,\nor before the next following sibling in the update selection if this is an enter selection.\nThe latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data;\nhowever, note that selection.order may still be required if updating elements change order\n(i.e., if the order of new data is inconsistent with old data).",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 858,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 859,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A creator function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return\nan element to be appended. (The function typically creates a new element, but it may instead return an existing element.)\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "ChildElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ChildElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.append"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 480,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 498,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 516,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.append"
							}
						},
						{
							"id": 776,
							"name": "attr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 777,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the current value of the specified attribute for the first (non-null) element in the selection.\nThis is generally useful only if you know that the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 778,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								},
								{
									"id": 779,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the attribute with the specified name for the selected elements and returns this selection."
									},
									"parameters": [
										{
											"id": 780,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 781,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null,to clear the attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								},
								{
									"id": 782,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the attribute with the specified name for the selected elements and returns this selection.\nAll elements are given the same attribute value."
									},
									"parameters": [
										{
											"id": 783,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 784,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Constant value for the attribute\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								},
								{
									"id": 785,
									"name": "attr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the attribute with the specified name for the selected elements and returns this selection.\nThe value for the individual selected elements is determined by the value function."
									},
									"parameters": [
										{
											"id": 786,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 787,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).  A null value will clear the attribute.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.attr"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 269,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 276,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 284,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 293,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.attr"
							}
						},
						{
							"id": 986,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 987,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Invoke the specified function exactly once, passing in this selection along with any optional arguments.\nReturns this selection."
									},
									"parameters": [
										{
											"id": 988,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A function which is passed this selection as the first argument along with any optional arguments."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 989,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 990,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 991,
																	"name": "selection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																},
																{
																	"id": 992,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 919,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 993,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "List of optional arguments to be passed to the callback function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.call"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 919,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.call"
							}
						},
						{
							"id": 788,
							"name": "classed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 789,
									"name": "classed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if and only if the first (non-null) selected element has the specified classes.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 790,
											"name": "names",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.classed"
									}
								},
								{
									"id": 791,
									"name": "classed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Assigns or unassigns the specified CSS class names on the selected elements by setting\nthe class attribute or modifying the classList property and returns this selection.\nIf the constant value is truthy, then all elements are assigned the specified classes; otherwise, the classes are unassigned."
									},
									"parameters": [
										{
											"id": 792,
											"name": "names",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string of space-separated class names."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 793,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A boolean flag (true = assign / false = unassign)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.classed"
									}
								},
								{
									"id": 794,
									"name": "classed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Assigns or unassigns the specified CSS class names on the selected elements by setting\nthe class attribute or modifying the classList property and returns this selection.\nThe assign/unassign status for the individual selected elements is determined by the boolean return\nvalue of the value function."
									},
									"parameters": [
										{
											"id": 795,
											"name": "names",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string of space-separated class names."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 796,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order,\nbeing passed the current datum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nThe function’s return value is then used to assign or unassign classes on each element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.classed"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 301,
									"character": 11
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 310,
									"character": 11
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 322,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.classed"
							}
						},
						{
							"id": 871,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 872,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts clones of the selected elements immediately following the selected elements and returns a selection of the newly\nadded clones. If deep is true, the descendant nodes of the selected elements will be cloned as well. Otherwise, only the elements\nthemselves will be cloned."
									},
									"parameters": [
										{
											"id": 873,
											"name": "deep",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Perform deep cloning if this flag is set to true.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.clone"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 581,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.clone"
							}
						},
						{
							"id": 911,
							"name": "data",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 912,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the array of data for the selected elements."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.data"
									}
								},
								{
									"id": 913,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Joins the specified array of data with the selected elements, returning a new selection that represents\nthe update selection: the elements successfully bound to data. Also defines the enter and exit selections on\nthe returned selection, which can be used to add or remove elements to correspond to the new data.",
										"text": "The data is specified for each group in the selection. If the selection has multiple groups\n(such as d3.selectAll followed by selection.selectAll), then data should typically be specified as a function.\n\nIf a key function is not specified, then the first datum in data is assigned to the first selected element,\nthe second datum to the second selected element, and so on.\nA key function may be specified to control which datum is assigned to which element, replacing the default join-by-index,\nby computing a string identifier for each datum and element.\n\nThe update and enter selections are returned in data order, while the exit selection preserves the selection\norder prior to the join. If a key function is specified, the order of elements in the selection may not match\ntheir order in the document; use selection.order or selection.sort as needed.\n\nThis method cannot be used to clear bound data; use selection.datum instead.\n\nFor details see: {@link https://github.com/d3/d3-selection#joining-data }\n\nThe generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 914,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 915,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The specified data is an array of arbitrary values (e.g., numbers or objects)."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "NewDatum"
												}
											}
										},
										{
											"id": 916,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional key function which is evaluated for each selected element, in order, being passed the\ncurrent datum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]); the returned string is the element’s key.\nThe key function is then also evaluated for each new datum in data, being passed the current datum (d),\nthe current index (i), and the group’s new data, with this as the group’s parent DOM element (nodes[i]); the returned string is the datum’s key.\nThe datum for a given key is assigned to the element with the matching key. If multiple elements have the same key,\nthe duplicate elements are put into the exit selection; if multiple data have the same key, the duplicate data are put into the enter selection.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "SVGLineElement"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "typeParameter",
																"name": "NewDatum"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.data"
									}
								},
								{
									"id": 917,
									"name": "data",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Joins the data returned by the specified value function with the selected elements, returning a new selection that it represents\nthe update selection: the elements successfully bound to data. Also defines the enter and exit selections on\nthe returned selection, which can be used to add or remove elements to correspond to the new data.",
										"text": "The data is specified for each group in the selection.\n\nIf a key function is not specified, then the first datum in data is assigned to the first selected element,\nthe second datum to the second selected element, and so on.\nA key function may be specified to control which datum is assigned to which element, replacing the default join-by-index,\nby computing a string identifier for each datum and element.\n\nThe update and enter selections are returned in data order, while the exit selection preserves the selection\norder prior to the join. If a key function is specified, the order of elements in the selection may not match\ntheir order in the document; use selection.order or selection.sort as needed.\n\nThis method cannot be used to clear bound data; use selection.datum instead.\n\nFor details see: {@link https://github.com/d3/d3-selection#joining-data }\n\nThe generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 918,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 919,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which will be evaluated for each group in order, being passed the group’s parent datum\n(d, which may be undefined), the group index (i), and the selection’s parent nodes (nodes),\nwith this as the group’s parent element. The function returns an array of values for each group."
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaseType"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "NewDatum"
														}
													}
												]
											}
										},
										{
											"id": 920,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional key function which is evaluated for each selected element, in order, being passed the\ncurrent datum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]); the returned string is the element’s key.\nThe key function is then also evaluated for each new datum in data, being passed the current datum (d),\nthe current index (i), and the group’s new data, with this as the group’s parent DOM element (nodes[i]); the returned string is the datum’s key.\nThe datum for a given key is assigned to the element with the matching key. If multiple elements have the same key,\nthe duplicate elements are put into the exit selection; if multiple data have the same key, the duplicate data are put into the enter selection.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "SVGLineElement"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "typeParameter",
																"name": "NewDatum"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.data"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 718,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 750,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 783,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.data"
							}
						},
						{
							"id": 901,
							"name": "datum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 902,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the bound datum for the first (non-null) element in the selection.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								},
								{
									"id": 903,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the bound data for each element in the selection."
									},
									"parameters": [
										{
											"id": 904,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								},
								{
									"id": 905,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the element’s bound data using the specified value function on all selected elements.\nUnlike selection.data, this method does not compute a join and does not affect\nindexes or the enter and exit selections.",
										"text": "The generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 906,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 907,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order,\nbeing passed the current datum (d), the current index (i), and the current group (nodes),\nwith this as the current DOM element (nodes[i]). The function is then used to set each element’s new data.\nA null value will delete the bound data.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "NewDatum"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								},
								{
									"id": 908,
									"name": "datum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the element’s bound data to the specified value on all selected elements.\nUnlike selection.data, this method does not compute a join and does not affect\nindexes or the enter and exit selections.",
										"text": "The generic refers to the type of the new datum to be used for the selected elements.\n"
									},
									"typeParameter": [
										{
											"id": 909,
											"name": "NewDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 910,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value object to be used as the datum for each element.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "NewDatum"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "typeParameter",
												"name": "NewDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.datum"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 686,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 690,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 703,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 713,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.datum"
							}
						},
						{
							"id": 976,
							"name": "dispatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 977,
									"name": "dispatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispatches a custom event of the specified type to each selected element, in order.\nAn optional parameters map may be specified to set additional properties of the event."
									},
									"parameters": [
										{
											"id": 978,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of event to dispatch"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 979,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional value map with custom event parameters\n"
											},
											"type": {
												"type": "reference",
												"name": "CustomEventParameters"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.dispatch"
									}
								},
								{
									"id": 980,
									"name": "dispatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispatches a custom event of the specified type to each selected element, in order.\nAn optional value function returning a parameters map for each element in the selection may be specified to set additional properties of the event."
									},
									"parameters": [
										{
											"id": 981,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of event to dispatch"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 982,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order,\nbeing passed the current datum (d), the current index (i), and the current group (nodes),\nwith this as the current DOM element (nodes[i]). It must return the parameters map for the current element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "CustomEventParameters"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.dispatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 888,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 898,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.dispatch"
							}
						},
						{
							"id": 983,
							"name": "each",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 984,
									"name": "each",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Invoke the specified function for each selected element, passing in the current datum (d),\nthe current index (i), and the current group (nodes), with this of the current DOM element (nodes[i]).\nThis method can be used to invoke arbitrary code for each selected element, and is useful for creating a context to access parent and child data simultaneously."
									},
									"parameters": [
										{
											"id": 985,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A function which is invoked for each selected element,\n            being passed the current datum (d), the current index (i), and the current group (nodes), with this of the current DOM element (nodes[i]).\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.each"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 910,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.each"
							}
						},
						{
							"id": 994,
							"name": "empty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 995,
									"name": "empty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return true if this selection contains no (non-null) elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.empty"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 924,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.empty"
							}
						},
						{
							"id": 961,
							"name": "enter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 962,
									"name": "enter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the enter selection: placeholder nodes for each datum that had no corresponding DOM element\nin the selection. (The enter selection is empty for selections not returned by selection.data.)"
									},
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EnterElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.enter"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 823,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.enter"
							}
						},
						{
							"id": 963,
							"name": "exit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 964,
									"name": "exit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the exit selection: existing DOM elements in the selection for which no new datum was found.\n(The exit selection is empty for selections not returned by selection.data.)",
										"text": "IMPORTANT: The generic refers to the type of the old datum associated with the exit selection elements.\nEnsure you set the generic to the correct type, if you need to access the data on the exit selection in\nfollow-up steps, e.g. to set styles as part of an exit transition before removing them.\n"
									},
									"typeParameter": [
										{
											"id": 965,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "typeParameter",
												"name": "OldDatum"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.exit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 833,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.exit"
							}
						},
						{
							"id": 877,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 878,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filters the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n"
									},
									"parameters": [
										{
											"id": 879,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A CSS selector string to match when filtering.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								},
								{
									"id": 880,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filters the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n\nThe generic refers to the type of element which will be selected after applying the filter, i.e. if the element types\ncontained in a pre-filter selection are narrowed to a subset as part of the filtering.\n"
									},
									"typeParameter": [
										{
											"id": 881,
											"name": "FilteredElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 882,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A CSS selector string to match when filtering.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "FilteredElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								},
								{
									"id": 883,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filter the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n"
									},
									"parameters": [
										{
											"id": 884,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return true\nfor an element to be included, and false otherwise.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								},
								{
									"id": 885,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filter the selection, returning a new selection that contains only the elements for\nwhich the specified filter is true.",
										"text": "The returned filtered selection preserves the parents of this selection, but like array.filter,\nit does not preserve indexes as some elements may be removed; use selection.select to preserve the index, if needed.\n"
									},
									"typeParameter": [
										{
											"id": 886,
											"name": "FilteredElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 887,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return true\nfor an element to be included, and false otherwise.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "FilteredElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.filter"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 611,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 624,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 636,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 648,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.filter"
							}
						},
						{
							"id": 842,
							"name": "html",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 843,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the inner HTML for the first (non-null) element in the selection.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								},
								{
									"id": 844,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the html content of the selected elements and return the selection."
									},
									"parameters": [
										{
											"id": 845,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								},
								{
									"id": 846,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the inner HTML to the specified value on all selected elements, replacing any existing child elements.\nAll elements are given the same inner HTML"
									},
									"parameters": [
										{
											"id": 847,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "String representation of inner HTML.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								},
								{
									"id": 848,
									"name": "html",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the inner HTML to the specified value on all selected elements, replacing any existing child elements.\nThe inner HTML is determined for each individual element using a value function."
									},
									"parameters": [
										{
											"id": 849,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current\ndatum (d), the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nThe function’s return value is then used to set each element’s inner HTML. A null value will clear the content.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.html"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 446,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 450,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 457,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 466,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.html"
							}
						},
						{
							"id": 860,
							"name": "insert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 861,
									"name": "insert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts a new element of the specified type (tag name) before the first element matching the specified\nbefore selector for each selected element. For example, a before selector :first-child will prepend nodes before the first child.\nIf before is not specified, it defaults to null. (To append elements in an order consistent with bound data, use selection.append.)",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 862,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ElementTagNameMap"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 863,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing the tag name for the element type to be inserted."
											},
											"type": {
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"name": "ElementTagNameMap"
													}
												}
											}
										},
										{
											"id": 864,
											"name": "before",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "One of:\n  * A CSS selector string for the element before which the insertion should occur.\n  * A child selector function which is evaluated for each selected element, in order, being passed the current datum (d),\n    the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return the child element\n    before which the element should be inserted.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ValueFn",
														"id": 577,
														"typeArguments": [
															{
																"type": "reference",
																"name": "SVGLineElement"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ElementTagNameMap[K]"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.insert"
									}
								},
								{
									"id": 865,
									"name": "insert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts a new element of the specified type (tag name) before the first element matching the specified\nbefore selector for each selected element. For example, a before selector :first-child will prepend nodes before the first child.\nIf before is not specified, it defaults to null. (To append elements in an order consistent with bound data, use selection.append.)",
										"text": "This method returns a new selection containing the appended elements.\nEach new element inherits the data of the current elements, if any.\n\nThe generic refers to the type of the child element to be appended.\n"
									},
									"typeParameter": [
										{
											"id": 866,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 867,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "One of:\n  * A string representing the tag name for the element type to be inserted. The specified name may have a namespace prefix,\n    such as svg:text to specify a text attribute in the SVG namespace. If no namespace is specified, the namespace will be inherited\n    from the parent element; or, if the name is one of the known prefixes, the corresponding namespace will be used\n    (for example, svg implies svg:svg)\n  * A creator function which is evaluated for each selected element, in order, being passed the current datum (d),\n    the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return\n    an element to be inserted. (The function typically creates a new element, but it may instead return an existing element.)"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ValueFn",
														"id": 577,
														"typeArguments": [
															{
																"type": "reference",
																"name": "SVGLineElement"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "typeParameter",
																"name": "ChildElement",
																"constraint": {
																	"type": "reference",
																	"name": "BaseType"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 868,
											"name": "before",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "One of:\n  * A CSS selector string for the element before which the insertion should occur.\n  * A child selector function which is evaluated for each selected element, in order, being passed the current datum (d),\n    the current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). This function should return the child element\n    before which the element should be inserted.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ValueFn",
														"id": 577,
														"typeArguments": [
															{
																"type": "reference",
																"name": "SVGLineElement"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"name": "BaseType"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ChildElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.insert"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 535,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 563,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.insert"
							}
						},
						{
							"id": 1002,
							"name": "interrupt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1003,
									"name": "interrupt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Interrupts the active transition of the specified name on the selected elements, and cancels any pending transitions with the specified name, if any.\nIf a name is not specified, null is used.",
										"text": "IMPORTANT: Interrupting a transition on an element has no effect on any transitions on any descendant elements.\nFor example, an axis transition consists of multiple independent, synchronized transitions on the descendants of the axis G element\n(the tick lines, the tick labels, the domain path, etc.). To interrupt the axis transition, you must therefore interrupt the descendants.\n"
									},
									"parameters": [
										{
											"id": 1004,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Name of the transition.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transition",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.interrupt"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-transition/index.d.ts",
									"line": 34,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.interrupt"
							}
						},
						{
							"id": 921,
							"name": "join",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 922,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends, removes and reorders elements as necessary to match the data that was previously bound by `selection.data`, returning the merged enter and update selection.\nThis method is a convenient alternative to the more explicit `selection.enter`, `selection.exit`, `selection.append` and `selection.remove`.",
										"text": "The \"matching\" logic is determined by the key function passed to `selection.data`.\n"
									},
									"typeParameter": [
										{
											"id": 923,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ElementTagNameMap"
												}
											}
										},
										{
											"id": 924,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 925,
											"name": "enter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"name": "ElementTagNameMap"
													}
												}
											}
										},
										{
											"id": 926,
											"name": "update",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 927,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 928,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 929,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 793,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 930,
											"name": "exit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 931,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 932,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 933,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "typeParameter",
																				"name": "OldDatum"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 794,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "unknown",
														"name": "ElementTagNameMap[K]"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.join"
									}
								},
								{
									"id": 934,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends, removes and reorders elements as necessary to match the data that was previously bound by `selection.data`, returning the merged enter and update selection.\nThis method is a convenient alternative to the more explicit `selection.enter`, `selection.exit`, `selection.append` and `selection.remove`.",
										"text": "The \"matching\" logic is determined by the key function passed to `selection.data`.\n"
									},
									"typeParameter": [
										{
											"id": 935,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 936,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 937,
											"name": "enter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 938,
											"name": "update",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 939,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 940,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 941,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 804,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 942,
											"name": "exit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 943,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 944,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 945,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "typeParameter",
																				"name": "OldDatum"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 805,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "ChildElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													},
													{
														"type": "reference",
														"name": "SVGLineElement"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.join"
									}
								},
								{
									"id": 946,
									"name": "join",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends, removes and reorders elements as necessary to match the data that was previously bound by `selection.data`, returning the merged enter and update selection.\nThis method is a convenient alternative to the more explicit `selection.enter`, `selection.exit`, `selection.append` and `selection.remove`.",
										"text": "The \"matching\" logic is determined by the key function passed to `selection.data`.\n"
									},
									"typeParameter": [
										{
											"id": 947,
											"name": "ChildElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 948,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 949,
											"name": "enter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 950,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 951,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 952,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "EnterElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Selection",
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "ChildElement",
																		"constraint": {
																			"type": "reference",
																			"name": "BaseType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reference",
																		"name": "BaseType"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 814,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 953,
											"name": "update",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 954,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 955,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 956,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 815,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 957,
											"name": "exit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 958,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 959,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 960,
																	"name": "elem",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Selection",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "SVGLineElement"
																			},
																			{
																				"type": "typeParameter",
																				"name": "OldDatum"
																			},
																			{
																				"type": "reference",
																				"name": "BaseType"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 816,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "ChildElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													},
													{
														"type": "reference",
														"name": "SVGLineElement"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.join"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 791,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 802,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 813,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.join"
							}
						},
						{
							"id": 899,
							"name": "lower",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 900,
									"name": "lower",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-insert each selected element, in order, as the first child of its parent."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.lower"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 678,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.lower"
							}
						},
						{
							"id": 874,
							"name": "merge",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 875,
									"name": "merge",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new selection merging this selection with the specified other selection.\nThe returned selection has the same number of groups and the same parents as this selection.\nAny missing (null) elements in this selection are filled with the corresponding element,\nif present (not null), from the specified selection. (If the other selection has additional groups or parents,\nthey are ignored.)",
										"text": "This method is commonly used to merge the enter and update selections after a data-join.\nAfter modifying the entering and updating elements separately, you can merge the two selections and\nperform operations on both without duplicate code.\n\nThis method is not intended for concatenating arbitrary selections, however: if both this selection\nand the specified other selection have (non-null) elements at the same index, this selection’s element\nis returned in the merge and the other selection’s element is ignored.\n"
									},
									"parameters": [
										{
											"id": 876,
											"name": "other",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Selection to be merged.\n"
											},
											"type": {
												"type": "reference",
												"name": "Selection",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "BaseType"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.merge"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 600,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.merge"
							}
						},
						{
							"id": 996,
							"name": "node",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 997,
									"name": "node",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the first (non-null) element in this selection. If the selection is empty, returns null."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.node"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 929,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.node"
							}
						},
						{
							"id": 998,
							"name": "nodes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 999,
									"name": "nodes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return an array of all (non-null) elements in this selection."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "SVGLineElement"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.nodes"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 934,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.nodes"
							}
						},
						{
							"id": 966,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 967,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the currently-assigned listener for the specified event typename on the first (non-null) selected element,\nif any, If multiple typenames are specified, the first matching listener is returned."
									},
									"parameters": [
										{
											"id": 968,
											"name": "typenames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The typenames is a string event type, such as click, mouseover, or submit; any DOM event type supported by your browser may be used.\nThe type may be optionally followed by a period (.) and a name; the optional name allows multiple callbacks to be registered\nto receive events of the same type, such as click.foo and click.bar. To specify multiple typenames, separate typenames with spaces,\nsuch as \"input change\"\" or \"click.foo click.bar\".\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.on"
									}
								},
								{
									"id": 969,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove a listener for the specified event type names. To remove all listeners for a given name,\npass null as the listener and \".foo\" as the typename, where foo is the name; to remove all listeners with no name, specify \".\" as the typename."
									},
									"parameters": [
										{
											"id": 970,
											"name": "typenames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The typenames is a string event type, such as click, mouseover, or submit; any DOM event type supported by your browser may be used.\nThe type may be optionally followed by a period (.) and a name; the optional name allows multiple callbacks to be registered\nto receive events of the same type, such as click.foo and click.bar. To specify multiple typenames, separate typenames with spaces,\nsuch as \"input change\"\" or \"click.foo click.bar\"."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 971,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null to indicate removal of listener\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.on"
									}
								},
								{
									"id": 972,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an event listener for the specified event type names. If an event listener was previously registered for the same typename\non a selected element, the old listener is removed before the new listener is added.",
										"text": "When a specified event is dispatched on a selected node, the specified listener will be evaluated for each selected element.\n\nAn optional capture flag may be specified which corresponds to the W3C useCapture flag:\n\"After initiating capture, all events of the specified type will be dispatched to the registered EventListener before being\ndispatched to any EventTargets beneath them in the tree. Events which are bubbling upward through the tree will not\ntrigger an EventListener designated to use capture.\"\n"
									},
									"parameters": [
										{
											"id": 973,
											"name": "typenames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The typenames is a string event type, such as click, mouseover, or submit; any DOM event type supported by your browser may be used.\nThe type may be optionally followed by a period (.) and a name; the optional name allows multiple callbacks to be registered\nto receive events of the same type, such as click.foo and click.bar. To specify multiple typenames, separate typenames with spaces,\nsuch as \"input change\"\" or \"click.foo click.bar\"."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 974,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A listener function which will be evaluated for each selected element, being passed the current datum (d), the current index (i),\nand the current group (nodes), with this as the current DOM element (nodes[i]). Listeners always see the latest datum for their element,\nbut the index is a property of the selection and is fixed when the listener is assigned; to update the index, re-assign the listener.\nTo access the current event within a listener, use d3.event."
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										},
										{
											"id": 975,
											"name": "capture",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional capture flag which corresponds to the W3C useCapture flag.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.on"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 846,
									"character": 6
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 857,
									"character": 6
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 879,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.on"
							}
						},
						{
							"id": 895,
							"name": "order",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 896,
									"name": "order",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-insert elements into the document such that the document order of each group matches the selection order.\nThis is equivalent to calling selection.sort if the data is already sorted, but much faster."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.order"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 668,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.order"
							}
						},
						{
							"id": 811,
							"name": "property",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 812,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the current value of the specified property for the first (non-null) element in the selection.\nThis is generally useful only if you know that the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 813,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 814,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Look up a local variable on the first node of this selection. Note that this is not equivalent to `local.get(selection.node())` in that it will not look up locals set on the parent node(s)."
									},
									"typeParameter": [
										{
											"id": 815,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 816,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The `d3.local` variable to look up.\n"
											},
											"type": {
												"type": "reference",
												"name": "Local",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 817,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the property with the specified name for the selected elements and returns this selection.\nThe value for the individual selected elements is determined by the value function.",
										"text": "Some HTML elements have special properties that are not addressable using attributes or styles,\nsuch as a form field’s text value and a checkbox’s checked boolean. Use this method to get or set these properties.\n"
									},
									"parameters": [
										{
											"id": 818,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 819,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).  A null value will clear the property.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 820,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears the property with the specified name for the selected elements and returns this selection."
									},
									"parameters": [
										{
											"id": 821,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 822,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null,to clear the property\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 823,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the property with the specified name for the selected elements and returns this selection.\nAll elements are given the same property value."
									},
									"parameters": [
										{
											"id": 824,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the property"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 825,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Constant value for the property\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 826,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Store a value in a `d3.local` variable.\nThis is equivalent to `selection.each(function (d, i, g) { name.set(this, value.call(this, d, i, g)); })` but more concise."
									},
									"typeParameter": [
										{
											"id": 827,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 828,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `d3.local` variable"
											},
											"type": {
												"type": "reference",
												"name": "Local",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 829,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A callback that returns the value to store\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								},
								{
									"id": 830,
									"name": "property",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Store a value in a `d3.local` variable for each node in the selection.\nThis is equivalent to `selection.each(function () { name.set(this, value); })` but more concise."
									},
									"typeParameter": [
										{
											"id": 831,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 832,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A `d3.local` variable"
											},
											"type": {
												"type": "reference",
												"name": "Local",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 833,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A callback that returns the value to store\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.property"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 365,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 371,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 383,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 390,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 398,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 406,
									"character": 12
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 414,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.property"
							}
						},
						{
							"id": 897,
							"name": "raise",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 898,
									"name": "raise",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-insert each selected element, in order, as the last child of its parent."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.raise"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 673,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.raise"
							}
						},
						{
							"id": 869,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 870,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the selected elements from the document.\nReturns this selection (the removed elements) which are now detached from the DOM."
									},
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.remove"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 572,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.remove"
							}
						},
						{
							"id": 752,
							"name": "select",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 753,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, select the first descendant element that matches the specified selector string.\nIf no element matches the specified selector for the current element, the element at the current index will\nbe null in the returned selection. If multiple elements match the selector, only the first matching element\nin document order is selected. Selection.select does not affect grouping: it preserves the existing group\nstructure and indexes, and propagates data (if any) to selected children.",
										"text": "If the current element has associated data, this data is propagated to the\ncorresponding selected element.\n\nThe generic represents the type of the descendant element to be selected.\n"
									},
									"typeParameter": [
										{
											"id": 754,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 755,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "CSS selector string\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.select"
									}
								},
								{
									"id": 756,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.select does not affect grouping: it preserves the existing group\nstructure and indexes."
									},
									"typeParameter": [
										{
											"id": 757,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 758,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.select"
									}
								},
								{
									"id": 759,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, select the descendant element returned by the selector function.\nIf no element is returned by the selector function for the current element, the element at the\ncurrent index will be null in the returned selection. Selection.select does not affect grouping:\nit preserves the existing group structure and indexes, and propagates data (if any) to selected children.",
										"text": "If the current element has associated data, this data is propagated to the\ncorresponding selected element.\n\nThe generic represents the type of the descendant element to be selected.\n"
									},
									"typeParameter": [
										{
											"id": 760,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										}
									],
									"parameters": [
										{
											"id": 761,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A selector function, which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nIt must return an element, or null if there is no matching element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeParameter",
														"name": "DescElement",
														"constraint": {
															"type": "reference",
															"name": "BaseType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.select"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 191,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 196,
									"character": 10
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 212,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.select"
							}
						},
						{
							"id": 762,
							"name": "selectAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 763,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.selectAll does affect grouping: The elements in the returned\nselection are grouped by their corresponding parent node in this selection, the group at the current index will be empty."
									},
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 764,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.selectAll does affect grouping: The elements in the returned\nselection are grouped by their corresponding parent node in this selection, the group at the current index will be empty."
									},
									"parameters": [
										{
											"id": 765,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 766,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an empty sub-selection. Selection.selectAll does affect grouping: The elements in the returned\nselection are grouped by their corresponding parent node in this selection, the group at the current index will be empty."
									},
									"parameters": [
										{
											"id": 767,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 768,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, selects the descendant elements that match the specified selector string. The elements in the returned\nselection are grouped by their corresponding parent node in this selection. If no element matches the specified selector\nfor the current element, the group at the current index will be empty. Selection.selectAll does affect grouping: each selected descendant\nis grouped by the parent element in the originating selection.",
										"text": "The selected elements do not inherit data from this selection; use selection.data to propagate data to children.\n\nThe first generic \"DescElement\" refers to the type of descendant element to be selected. The second generic \"OldDatum\" refers to the type of the\ndatum, of a selected element. This is useful when re-selecting elements with a previously set, know datum type.\n"
									},
									"typeParameter": [
										{
											"id": 769,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 770,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 771,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "CSS selector string\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "typeParameter",
												"name": "OldDatum"
											},
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								},
								{
									"id": 772,
									"name": "selectAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each selected element, selects the descendant elements returned by the selector function. The elements in the returned\nselection are grouped by their corresponding parent node in this selection. If no element matches the specified selector\nfor the current element, the group at the current index will be empty. Selection.selectAll does affect grouping: each selected descendant\nis grouped by the parent element in the originating selection.",
										"text": "The selected elements do not inherit data from this selection; use selection.data to propagate data to children.\n\nThe first generic \"DescElement\" refers to the type of descendant element to be selected. The second generic \"OldDatum\" refers to the type of the\ndatum, of a selected element. This is useful when re-selecting elements with a previously set, know datum type.\n"
									},
									"typeParameter": [
										{
											"id": 773,
											"name": "DescElement",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseType"
											}
										},
										{
											"id": 774,
											"name": "OldDatum",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 775,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A selector function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]). It must return an array of elements\n(or a pseudo-array, such as a NodeList), or the empty array if there are no matching elements.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "typeParameter",
																	"name": "DescElement",
																	"constraint": {
																		"type": "reference",
																		"name": "BaseType"
																	}
																}
															},
															{
																"type": "reference",
																"name": "ArrayLike",
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "DescElement",
																		"constraint": {
																			"type": "reference",
																			"name": "BaseType"
																		}
																	}
																]
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Selection",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "DescElement",
												"constraint": {
													"type": "reference",
													"name": "BaseType"
												}
											},
											{
												"type": "typeParameter",
												"name": "OldDatum"
											},
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.selectAll"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 218,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 223,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 228,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 242,
									"character": 13
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 259,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.selectAll"
							}
						},
						{
							"id": 1000,
							"name": "size",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1001,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the total number of elements in this selection."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.size"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 939,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.size"
							}
						},
						{
							"id": 888,
							"name": "sort",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 889,
									"name": "sort",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return a new selection that contains a copy of each group in this selection sorted according\nto the compare function. After sorting, re-inserts elements to match the resulting order (per selection.order).",
										"text": "Note that sorting is not guaranteed to be stable; however, it is guaranteed to have the same\nbehavior as your browser’s built-in sort method on arrays.\n"
									},
									"parameters": [
										{
											"id": 890,
											"name": "comparator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional comparator function, which defaults to \"ascending\". The function is passed\ntwo elements’ data a and b to compare. It should return either a negative, positive, or zero value.\nIf negative, then a should be before b; if positive, then a should be after b; otherwise, a and b are\nconsidered equal and the order is arbitrary.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 891,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 892,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 893,
																	"name": "a",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 894,
																	"name": "b",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
															"line": 662,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.sort"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 662,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.sort"
							}
						},
						{
							"id": 797,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 798,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the current value of the specified style property for the first (non-null) element in the selection.\nThe current value is defined as the element’s inline value, if present, and otherwise its computed value.\nAccessing the current style value is generally useful only if you know the selection contains exactly one element."
									},
									"parameters": [
										{
											"id": 799,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								},
								{
									"id": 800,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the style with the specified name for the selected elements and returns this selection."
									},
									"parameters": [
										{
											"id": 801,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 802,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "null,to clear the style\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								},
								{
									"id": 803,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the style with the specified name for the selected elements and returns this selection.\nAll elements are given the same style value."
									},
									"parameters": [
										{
											"id": 804,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 805,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Constant value for the style"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 806,
											"name": "priority",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional priority flag, either null or the string important (without the exclamation point)\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "stringLiteral",
														"value": "important"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								},
								{
									"id": 807,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the style with the specified name for the selected elements and returns this selection.\nThe value for the individual selected elements is determined by the value function."
									},
									"parameters": [
										{
											"id": 808,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the style"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 809,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value function which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).  A null value will clear the style."
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										},
										{
											"id": 810,
											"name": "priority",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional priority flag, either null or the string important (without the exclamation point)\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "stringLiteral",
														"value": "important"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.style"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 331,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 338,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 347,
									"character": 9
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 357,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.style"
							}
						},
						{
							"id": 834,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 835,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the text content for the first (non-null) element in the selection.\nThis is generally useful only if you know the selection contains exactly one element."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								},
								{
									"id": 836,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clear the text content of the selected elements and return the selection."
									},
									"parameters": [
										{
											"id": 837,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "null"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								},
								{
									"id": 838,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the text content to the specified value on all selected elements, replacing any existing child elements.\nAll elements are given the same text content."
									},
									"parameters": [
										{
											"id": 839,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Text content value for the elements.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								},
								{
									"id": 840,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the text content to the specified value on all selected elements, replacing any existing child elements.\nAll elements are given the same text content."
									},
									"parameters": [
										{
											"id": 841,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A value unction which is evaluated for each selected element, in order, being passed the current datum (d),\nthe current index (i), and the current group (nodes), with this as the current DOM element (nodes[i]).\nThe function’s return value is then used to set each element’s text content. A null value will clear the content.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueFn",
												"id": 577,
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGLineElement"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.text"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 420,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 424,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 431,
									"character": 8
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-selection/index.d.ts",
									"line": 440,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.text"
							}
						},
						{
							"id": 1005,
							"name": "transition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1006,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new transition on the given selection with the specified name. If a name is not specified, null is used.\nThe new transition is only exclusive with other transitions of the same name."
									},
									"parameters": [
										{
											"id": 1007,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Name of the transition.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transition",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.transition"
									}
								},
								{
									"id": 1008,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new transition on the given selection.",
										"text": "When using a transition instance, the returned transition has the same id and name as the specified transition.\nIf a transition with the same id already exists on a selected element, the existing transition is returned for that element.\nOtherwise, the timing of the returned transition is inherited from the existing transition of the same id on the nearest ancestor of each selected element.\nThus, this method can be used to synchronize a transition across multiple selections,\nor to re-select a transition for specific elements and modify its configuration.\n\nIf the specified transition is not found on a selected node or its ancestors (such as if the transition already ended),\nthe default timing parameters are used; however, in a future release, this will likely be changed to throw an error.\n"
									},
									"parameters": [
										{
											"id": 1009,
											"name": "transition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A transition instance.\n"
											},
											"type": {
												"type": "reference",
												"name": "Transition",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaseType"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Transition",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGLineElement"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "BaseType"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Selection.transition"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-transition/index.d.ts",
									"line": 41,
									"character": 18
								},
								{
									"fileName": "/Users/Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-transition/index.d.ts",
									"line": 56,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Selection.transition"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								850,
								776,
								986,
								788,
								871,
								911,
								901,
								976,
								983,
								994,
								961,
								963,
								877,
								842,
								860,
								1002,
								921,
								899,
								874,
								996,
								998,
								966,
								895,
								811,
								897,
								869,
								752,
								762,
								1000,
								888,
								797,
								834,
								1005
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 22,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Selection",
							"typeArguments": [
								{
									"type": "reference",
									"name": "SVGLineElement"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"name": "BaseType"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							]
						}
					]
				},
				{
					"id": 1287,
					"name": "Text",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1290,
							"name": "font",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 104,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1291,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1292,
											"name": "family",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 105,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1293,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 106,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "UnitVp",
												"id": 42
											}
										},
										{
											"id": 1294,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 107,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1295,
											"name": "weight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 108,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1292,
												1293,
												1294,
												1295
											]
										}
									],
									"sources": [
										{
											"fileName": "Settings.ts",
											"line": 104,
											"character": 9
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextStyle.font",
								"id": 24
							}
						},
						{
							"id": 1288,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 102,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Rendered.rendered",
								"id": 1270
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextStyle.rendered",
								"id": 22
							}
						},
						{
							"id": 1289,
							"name": "stroke",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 103,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextStyle.stroke",
								"id": 23
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1290,
								1288,
								1289
							]
						}
					],
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 31,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TextStyle",
							"id": 21
						},
						{
							"type": "reference",
							"name": "Rendered",
							"id": 1269
						}
					]
				},
				{
					"id": 1369,
					"name": "pixel",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "GraphComponent.ts",
							"line": 33,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1321,
						1343
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1277,
						1318,
						1296,
						1271,
						1281,
						1269,
						1010,
						751,
						1287
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1369
					]
				}
			],
			"sources": [
				{
					"fileName": "GraphComponent.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 487,
			"name": "\"Grid\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Grid.ts",
			"comment": {
				"shortText": "# Grid class",
				"text": "### Grids Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.grids.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log\n             .inspect(new hsGraphD3.GraphCartesian(svgRoot[0]).defaults.grids, null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 488,
					"name": "MajorMinor",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 489,
							"name": "major",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 43,
									"character": 9
								}
							],
							"defaultValue": "\"major\""
						},
						{
							"id": 490,
							"name": "minor",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 44,
									"character": 9
								}
							],
							"defaultValue": "\"minor\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								489,
								490
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 42,
							"character": 22
						}
					]
				},
				{
					"id": 532,
					"name": "Grid",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 535,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 539,
									"name": "new Grid",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 540,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 541,
											"name": "dir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Direction",
												"id": 1371
											}
										},
										{
											"id": 542,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MajorMinor",
												"id": 488
											},
											"defaultValue": "MajorMinor.major"
										}
									],
									"type": {
										"type": "reference",
										"name": "Grid",
										"id": 532
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 111,
									"character": 24
								}
							]
						},
						{
							"id": 536,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 113,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							}
						},
						{
							"id": 537,
							"name": "dir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 113,
									"character": 53
								}
							],
							"type": {
								"type": "reference",
								"name": "Direction",
								"id": 1371
							}
						},
						{
							"id": 533,
							"name": "hor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 110,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 534,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 111,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						},
						{
							"id": 538,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 113,
									"character": 79
								}
							],
							"type": {
								"type": "reference",
								"name": "MajorMinor",
								"id": 488
							}
						},
						{
							"id": 543,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 544,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 119,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								535
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								536,
								537,
								533,
								534,
								538
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								543
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 109,
							"character": 17
						}
					]
				},
				{
					"id": 503,
					"name": "Grids",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 512,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 513,
									"name": "new Grids",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 514,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Grids",
										"id": 503
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.__constructor",
										"id": 1345
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 65,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.__constructor",
								"id": 1345
							}
						},
						{
							"id": 531,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 530,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphComponent.svg",
								"id": 1344
							}
						},
						{
							"id": 504,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 60,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"grids\""
						},
						{
							"id": 515,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 516,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.componentType",
										"id": 1349
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 70,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.componentType",
								"id": 1349
							}
						},
						{
							"id": 517,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 518,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GridDefaults",
										"id": 491
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 72,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 519,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 520,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GridDefaults",
										"id": 491
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 74,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 521,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 522,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 523,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 88,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 528,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 529,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 106,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 524,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 525,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 95,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 526,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 527,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 97,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						},
						{
							"id": 505,
							"name": "grids",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"children": [
								{
									"id": 506,
									"name": "hor",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 507,
											"name": "major",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 63,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "Grid",
												"id": 532
											},
											"defaultValue": " <Grid>undefined"
										},
										{
											"id": 508,
											"name": "minor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 63,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"name": "Grid",
												"id": 532
											},
											"defaultValue": " <Grid>undefined"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												507,
												508
											]
										}
									],
									"sources": [
										{
											"fileName": "Grid.ts",
											"line": 63,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 509,
									"name": "ver",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 510,
											"name": "major",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 64,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "Grid",
												"id": 532
											},
											"defaultValue": " <Grid>undefined"
										},
										{
											"id": 511,
											"name": "minor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 64,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"name": "Grid",
												"id": 532
											},
											"defaultValue": " <Grid>undefined"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												510,
												511
											]
										}
									],
									"sources": [
										{
											"fileName": "Grid.ts",
											"line": 64,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										506,
										509
									]
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 62,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								512
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								531,
								530,
								504
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								515,
								517
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								519,
								521,
								528,
								524,
								526
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								505
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 59,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 491,
					"name": "GridDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 501,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 502,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 493,
							"name": "hor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 494,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 495,
											"name": "major",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 50,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "Line",
												"id": 1271
											}
										},
										{
											"id": 496,
											"name": "minor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 51,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "Line",
												"id": 1271
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												495,
												496
											]
										}
									],
									"sources": [
										{
											"fileName": "Grid.ts",
											"line": 49,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 492,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 48,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 497,
							"name": "ver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 53,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 498,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 499,
											"name": "major",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 54,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "Line",
												"id": 1271
											}
										},
										{
											"id": 500,
											"name": "minor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Grid.ts",
													"line": 55,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "Line",
												"id": 1271
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												499,
												500
											]
										}
									],
									"sources": [
										{
											"fileName": "Grid.ts",
											"line": 53,
											"character": 8
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								493,
								492,
								497
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 47,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				},
				{
					"id": 545,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 30,
							"character": 54
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Grid')"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						488
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						532,
						503
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						491
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						545
					]
				}
			],
			"sources": [
				{
					"fileName": "Grid.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 249,
			"name": "\"Scale\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Scale.ts",
			"comment": {
				"shortText": "# Scale",
				"text": "### Example\nUse of a logarithmic scale:\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\nconst data = {\n   colNames:['time', 'costs'],\n   rows:[[0,   0.2], [0.2, 0.7], [0.4, 0.1],\n         [0.6, 0.5], [0.8, 0.3], [1,   0.2]]\n};\n\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('line', {x:'time', y:'costs'});\ngraph.series.add('line', {x:'time', y:()=>0.5});\ngraph.scales.defaults.dims.ver.type = 'log';\ngraph.render(data);\n\n</file>\n</example>\n\n### Scales Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.scales.defaults.dims.ver.type = 'log';\n     return graph.scales.defaults;\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.scales.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 372,
					"name": "BandScale",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 373,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 377,
									"name": "new BandScale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 378,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 379,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 380,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BandScale",
										"id": 372
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.__constructor",
										"id": 352
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 265,
									"character": 35
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.__constructor",
								"id": 352
							}
						},
						{
							"id": 389,
							"name": "d3Scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.d3Scale",
								"id": 353
							}
						},
						{
							"id": 375,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 266,
									"character": 67
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.domain",
								"id": 355
							}
						},
						{
							"id": 376,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 266,
									"character": 91
								}
							],
							"type": {
								"type": "reference",
								"name": "Range",
								"id": 474
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.range",
								"id": 356
							}
						},
						{
							"id": 374,
							"name": "scaleDef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 266,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.scaleDef",
								"id": 354
							}
						},
						{
							"id": 387,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 388,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Domain",
										"id": 744
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getDomain",
										"id": 368
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 286,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getDomain",
								"id": 368
							}
						},
						{
							"id": 390,
							"name": "getRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 391,
									"name": "getRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getRange",
										"id": 370
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 256,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getRange",
								"id": 370
							}
						},
						{
							"id": 383,
							"name": "getScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 384,
									"name": "getScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getScale",
										"id": 362
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 272,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getScale",
								"id": 362
							}
						},
						{
							"id": 385,
							"name": "getTicks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 386,
									"name": "getTicks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getTicks",
										"id": 366
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 282,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getTicks",
								"id": 366
							}
						},
						{
							"id": 381,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 382,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getType",
										"id": 364
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 270,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getType",
								"id": 364
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								373
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								389,
								375,
								376,
								374
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								387,
								390,
								383,
								385,
								381
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 265,
							"character": 15
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseScale",
							"id": 351
						}
					]
				},
				{
					"id": 351,
					"name": "BaseScale",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"children": [
						{
							"id": 352,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 357,
									"name": "new BaseScale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 358,
											"name": "d3Scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 359,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 360,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 361,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BaseScale",
										"id": 351
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 207,
									"character": 26
								}
							]
						},
						{
							"id": 353,
							"name": "d3Scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 355,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 90
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							}
						},
						{
							"id": 356,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 114
								}
							],
							"type": {
								"type": "reference",
								"name": "Range",
								"id": 474
							}
						},
						{
							"id": 354,
							"name": "scaleDef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 57
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							}
						},
						{
							"id": 368,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 369,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Domain",
										"id": 744
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 254,
									"character": 23
								}
							]
						},
						{
							"id": 370,
							"name": "getRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 371,
									"name": "getRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 256,
									"character": 12
								}
							]
						},
						{
							"id": 362,
							"name": "getScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 363,
									"name": "getScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 210,
									"character": 12
								}
							]
						},
						{
							"id": 366,
							"name": "getTicks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 367,
									"name": "getTicks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 252,
									"character": 22
								}
							]
						},
						{
							"id": 364,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 365,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 250,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								352
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								353,
								355,
								356,
								354
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								368,
								370,
								362,
								366,
								364
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 207,
							"character": 24
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "BandScale",
							"id": 372
						},
						{
							"type": "reference",
							"name": "TimeScale",
							"id": 392
						},
						{
							"type": "reference",
							"name": "NumberScale",
							"id": 412
						}
					]
				},
				{
					"id": 433,
					"name": "LinearScale",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 434,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 435,
									"name": "new LinearScale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 436,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 437,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 438,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LinearScale",
										"id": 433
									},
									"overwrites": {
										"type": "reference",
										"name": "NumberScale.__constructor",
										"id": 413
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 324,
									"character": 39
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumberScale.__constructor",
								"id": 413
							}
						},
						{
							"id": 439,
							"name": "d3Scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.d3Scale",
								"id": 353
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.d3Scale",
								"id": 414
							}
						},
						{
							"id": 441,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 90
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.domain",
								"id": 355
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.domain",
								"id": 416
							}
						},
						{
							"id": 446,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 114
								}
							],
							"type": {
								"type": "reference",
								"name": "Range",
								"id": 474
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.range",
								"id": 356
							}
						},
						{
							"id": 440,
							"name": "scaleDef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 57
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.scaleDef",
								"id": 354
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.scaleDef",
								"id": 415
							}
						},
						{
							"id": 444,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 445,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getDomain",
										"id": 368
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberScale.getDomain",
										"id": 424
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 315,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getDomain",
								"id": 368
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.getDomain",
								"id": 424
							}
						},
						{
							"id": 451,
							"name": "getRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 452,
									"name": "getRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getRange",
										"id": 370
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 256,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getRange",
								"id": 370
							}
						},
						{
							"id": 447,
							"name": "getScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 448,
									"name": "getScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getScale",
										"id": 362
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 210,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getScale",
								"id": 362
							}
						},
						{
							"id": 449,
							"name": "getTicks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 450,
									"name": "getTicks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getTicks",
										"id": 366
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 252,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getTicks",
								"id": 366
							}
						},
						{
							"id": 442,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 443,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getType",
										"id": 364
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberScale.getType",
										"id": 422
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 313,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getType",
								"id": 364
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.getType",
								"id": 422
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								434
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								439,
								441,
								446,
								440
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								444,
								451,
								447,
								449,
								442
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 324,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumberScale",
							"id": 412
						}
					]
				},
				{
					"id": 453,
					"name": "LogScale",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 454,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 455,
									"name": "new LogScale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 456,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 457,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 458,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LogScale",
										"id": 453
									},
									"overwrites": {
										"type": "reference",
										"name": "NumberScale.__constructor",
										"id": 413
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 328,
									"character": 36
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumberScale.__constructor",
								"id": 413
							}
						},
						{
							"id": 459,
							"name": "d3Scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.d3Scale",
								"id": 353
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.d3Scale",
								"id": 414
							}
						},
						{
							"id": 461,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 90
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.domain",
								"id": 355
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.domain",
								"id": 416
							}
						},
						{
							"id": 466,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 114
								}
							],
							"type": {
								"type": "reference",
								"name": "Range",
								"id": 474
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.range",
								"id": 356
							}
						},
						{
							"id": 460,
							"name": "scaleDef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 57
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.scaleDef",
								"id": 354
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.scaleDef",
								"id": 415
							}
						},
						{
							"id": 464,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 465,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getDomain",
										"id": 368
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberScale.getDomain",
										"id": 424
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 315,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getDomain",
								"id": 368
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.getDomain",
								"id": 424
							}
						},
						{
							"id": 471,
							"name": "getRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 472,
									"name": "getRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getRange",
										"id": 370
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 256,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getRange",
								"id": 370
							}
						},
						{
							"id": 467,
							"name": "getScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 468,
									"name": "getScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getScale",
										"id": 362
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 210,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getScale",
								"id": 362
							}
						},
						{
							"id": 469,
							"name": "getTicks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 470,
									"name": "getTicks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getTicks",
										"id": 366
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 252,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getTicks",
								"id": 366
							}
						},
						{
							"id": 462,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 463,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getType",
										"id": 364
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberScale.getType",
										"id": 422
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 313,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getType",
								"id": 364
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumberScale.getType",
								"id": 422
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								454
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								459,
								461,
								466,
								460
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								464,
								471,
								467,
								469,
								462
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 328,
							"character": 14
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumberScale",
							"id": 412
						}
					]
				},
				{
					"id": 412,
					"name": "NumberScale",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 413,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 417,
									"name": "new NumberScale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 418,
											"name": "d3Scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 419,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 420,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 421,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberScale",
										"id": 412
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.__constructor",
										"id": 352
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 308,
									"character": 37
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.__constructor",
								"id": 352
							}
						},
						{
							"id": 414,
							"name": "d3Scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.d3Scale",
								"id": 353
							}
						},
						{
							"id": 416,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 90
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.domain",
								"id": 355
							}
						},
						{
							"id": 426,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 114
								}
							],
							"type": {
								"type": "reference",
								"name": "Range",
								"id": 474
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.range",
								"id": 356
							}
						},
						{
							"id": 415,
							"name": "scaleDef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 309,
									"character": 57
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.scaleDef",
								"id": 354
							}
						},
						{
							"id": 424,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 425,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getDomain",
										"id": 368
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 315,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getDomain",
								"id": 368
							}
						},
						{
							"id": 431,
							"name": "getRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 432,
									"name": "getRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getRange",
										"id": 370
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 256,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getRange",
								"id": 370
							}
						},
						{
							"id": 427,
							"name": "getScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 428,
									"name": "getScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getScale",
										"id": 362
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 210,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getScale",
								"id": 362
							}
						},
						{
							"id": 429,
							"name": "getTicks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 430,
									"name": "getTicks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getTicks",
										"id": 366
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 252,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getTicks",
								"id": 366
							}
						},
						{
							"id": 422,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 423,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getType",
										"id": 364
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 313,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getType",
								"id": 364
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								413
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								414,
								416,
								426,
								415
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								424,
								431,
								427,
								429,
								422
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 308,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseScale",
							"id": 351
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "LinearScale",
							"id": 433
						},
						{
							"type": "reference",
							"name": "LogScale",
							"id": 453
						}
					]
				},
				{
					"id": 325,
					"name": "Scales",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Manages the embedding of scales into the graph (margins, etc.) and provides\na configuration for each scales used in the graph."
					},
					"children": [
						{
							"id": 327,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 328,
									"name": "new Scales",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 329,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Scales",
										"id": 325
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.__constructor",
										"id": 1345
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 161,
									"character": 27
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.__constructor",
								"id": 1345
							}
						},
						{
							"id": 350,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 349,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphComponent.svg",
								"id": 1344
							}
						},
						{
							"id": 326,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 161,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"scales\""
						},
						{
							"id": 330,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 331,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.componentType",
										"id": 1349
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 165,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.componentType",
								"id": 1349
							}
						},
						{
							"id": 332,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 333,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ScalesDefaults",
										"id": 315
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 166,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 342,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 343,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates a default entry for the component type in `Defaults`"
									},
									"type": {
										"type": "reference",
										"name": "ScalesDefaults",
										"id": 315
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 174,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 334,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 335,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 168,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 340,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 341,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 171,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 336,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 337,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 169,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 338,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 339,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 170,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						},
						{
							"id": 344,
							"name": "createScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 345,
									"name": "createScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates a d3 scale object based on the provided settings."
									},
									"parameters": [
										{
											"id": 346,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "scale defaults, possibly modified by the application"
											},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 347,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the data domain to scale for"
											},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 348,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the viewport range to scale for\n"
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 187,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								327
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								350,
								349,
								326
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								330,
								332
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								342,
								334,
								340,
								336,
								338,
								344
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 160,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 392,
					"name": "TimeScale",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 393,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 395,
									"name": "new TimeScale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 396,
											"name": "scaleDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleDefaults",
												"id": 300
											}
										},
										{
											"id": 397,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										},
										{
											"id": 398,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeScale",
										"id": 392
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.__constructor",
										"id": 352
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 292,
									"character": 35
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.__constructor",
								"id": 352
							}
						},
						{
							"id": 403,
							"name": "d3Scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.d3Scale",
								"id": 353
							}
						},
						{
							"id": 394,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 293,
									"character": 57
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain",
								"id": 744
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.domain",
								"id": 355
							}
						},
						{
							"id": 405,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 114
								}
							],
							"type": {
								"type": "reference",
								"name": "Range",
								"id": 474
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.range",
								"id": 356
							}
						},
						{
							"id": 404,
							"name": "scaleDef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 208,
									"character": 57
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.scaleDef",
								"id": 354
							}
						},
						{
							"id": 401,
							"name": "getDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 402,
									"name": "getDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeDomain",
										"id": 746
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getDomain",
										"id": 368
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 299,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getDomain",
								"id": 368
							}
						},
						{
							"id": 410,
							"name": "getRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 411,
									"name": "getRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getRange",
										"id": 370
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 256,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getRange",
								"id": 370
							}
						},
						{
							"id": 406,
							"name": "getScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 407,
									"name": "getScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getScale",
										"id": 362
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 210,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getScale",
								"id": 362
							}
						},
						{
							"id": 408,
							"name": "getTicks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 409,
									"name": "getTicks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "(Anonymous function)"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseScale.getTicks",
										"id": 366
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 252,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseScale.getTicks",
								"id": 366
							}
						},
						{
							"id": 399,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"signatures": [
								{
									"id": 400,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaseScale.getType",
										"id": 364
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 297,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaseScale.getType",
								"id": 364
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								393
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								403,
								394,
								405,
								404
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								401,
								410,
								406,
								408,
								399
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 292,
							"character": 15
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseScale",
							"id": 351
						}
					]
				},
				{
					"id": 297,
					"name": "RangeDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 299,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 112,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "TimeString",
										"id": 476
									},
									{
										"type": "stringLiteral",
										"value": "auto"
									}
								]
							}
						},
						{
							"id": 298,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 111,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "TimeString",
										"id": 476
									},
									{
										"type": "stringLiteral",
										"value": "auto"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								299,
								298
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 110,
							"character": 30
						}
					]
				},
				{
					"id": 253,
					"name": "Scale",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 292,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 293,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DataVal",
										"id": 741
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 275,
							"name": "tickCountMajor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 83,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 276,
							"name": "tickCountMinor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 84,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 265,
							"name": "axis",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 266,
									"name": "axis",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 267,
											"name": "loc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Axis",
										"typeArguments": [
											{
												"type": "reference",
												"name": "d3.AxisDomain"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 79,
									"character": 8
								}
							]
						},
						{
							"id": 277,
							"name": "bandwidth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 278,
									"name": "bandwidth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 86,
									"character": 13
								}
							]
						},
						{
							"id": 254,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 255,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 74,
									"character": 8
								}
							]
						},
						{
							"id": 268,
							"name": "domain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 269,
									"name": "domain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Domain",
										"id": 744
									}
								},
								{
									"id": 270,
									"name": "domain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 271,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domain",
												"id": 744
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 80,
									"character": 10
								},
								{
									"fileName": "Scale.ts",
									"line": 81,
									"character": 10
								}
							]
						},
						{
							"id": 262,
							"name": "interpolate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 263,
									"name": "interpolate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 264,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 78,
									"character": 15
								}
							]
						},
						{
							"id": 282,
							"name": "padding",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 283,
									"name": "padding",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 284,
											"name": "padding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 88,
									"character": 11
								}
							]
						},
						{
							"id": 279,
							"name": "paddingInner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "paddingInner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 281,
											"name": "padding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 87,
									"character": 16
								}
							]
						},
						{
							"id": 285,
							"name": "paddingOuter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 286,
									"name": "paddingOuter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 287,
											"name": "padding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 89,
									"character": 16
								}
							]
						},
						{
							"id": 256,
							"name": "range",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 257,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Range",
										"id": 474
									}
								},
								{
									"id": 258,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Range",
												"id": 474
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 75,
									"character": 9
								},
								{
									"fileName": "Scale.ts",
									"line": 76,
									"character": 9
								}
							]
						},
						{
							"id": 260,
							"name": "rangeBand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 261,
									"name": "rangeBand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 77,
									"character": 13
								}
							]
						},
						{
							"id": 288,
							"name": "step",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 289,
									"name": "step",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 90,
									"character": 8
								}
							]
						},
						{
							"id": 272,
							"name": "ticks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 273,
									"name": "ticks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 274,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 82,
									"character": 9
								}
							]
						},
						{
							"id": 290,
							"name": "type",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 291,
									"name": "type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 91,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								275,
								276
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								265,
								277,
								254,
								268,
								262,
								282,
								279,
								285,
								256,
								260,
								288,
								272,
								290
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 73,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ScaleFn",
							"id": 250
						}
					]
				},
				{
					"id": 300,
					"name": "ScaleDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Specisifes the defaults of a specific scale."
					},
					"children": [
						{
							"id": 302,
							"name": "aggregateOverTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 122,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 303,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 123,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "RangeDefaults",
										"id": 297
									},
									{
										"type": "reference",
										"name": "CategoricalDefaults",
										"id": 477
									}
								]
							}
						},
						{
							"id": 308,
							"name": "ordinal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 125,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 309,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 310,
											"name": "gap",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 125,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 311,
											"name": "overlap",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 125,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												310,
												311
											]
										}
									],
									"sources": [
										{
											"fileName": "Scale.ts",
											"line": 125,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 304,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 124,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 305,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 307,
											"name": "max",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 124,
													"character": 37
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "UnitVp",
														"id": 42
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										},
										{
											"id": 306,
											"name": "min",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 124,
													"character": 17
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "UnitVp",
														"id": 42
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												307,
												306
											]
										}
									],
									"sources": [
										{
											"fileName": "Scale.ts",
											"line": 124,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 301,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 121,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleType",
								"id": 475
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								302,
								303,
								308,
								304,
								301
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 120,
							"character": 30
						}
					]
				},
				{
					"id": 312,
					"name": "ScaleDefaultsDims",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"indexSignature": [
						{
							"id": 313,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 314,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 131,
							"character": 34
						}
					]
				},
				{
					"id": 294,
					"name": "ScaleDims",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"indexSignature": [
						{
							"id": 295,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 296,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 253
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 97,
							"character": 26
						}
					]
				},
				{
					"id": 250,
					"name": "ScaleFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 251,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 252,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DataVal",
										"id": 741
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 66,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Scale",
							"id": 253
						}
					]
				},
				{
					"id": 315,
					"name": "ScalesDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Specifies the defaults of the Scales Component"
					},
					"indexSignature": [
						{
							"id": 323,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Specifies the defaults of the Scales Component"
							},
							"parameters": [
								{
									"id": 324,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 322,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 140,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaultsDims",
								"id": 312
							}
						},
						{
							"id": 316,
							"name": "margin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 139,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 317,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 321,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 139,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 318,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 139,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 320,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 139,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 319,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Scale.ts",
													"line": 139,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												321,
												318,
												320,
												319
											]
										}
									],
									"sources": [
										{
											"fileName": "Scale.ts",
											"line": 139,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								322,
								316
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 138,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				},
				{
					"id": 477,
					"name": "CategoricalDefaults",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 115,
							"character": 31
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 474,
					"name": "Range",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 71,
							"character": 17
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							},
							{
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						]
					}
				},
				{
					"id": 475,
					"name": "ScaleType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of scale. For now, only 'number', 'date', and 'category' exist."
					},
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 106,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "linear"
							},
							{
								"type": "stringLiteral",
								"value": "log"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							},
							{
								"type": "stringLiteral",
								"value": "ordinal"
							}
						]
					}
				},
				{
					"id": 476,
					"name": "TimeString",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 108,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 473,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 54,
							"character": 56
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " _log('Scale')"
				},
				{
					"id": 478,
					"name": "scaleDefault",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 479,
							"name": "scaleDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 480,
									"name": "minRange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "UnitVp",
										"id": 42
									}
								},
								{
									"id": 481,
									"name": "maxRange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "UnitVp",
										"id": 42
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleDefaults",
								"id": 300
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 143,
							"character": 25
						}
					]
				},
				{
					"id": 482,
					"name": "axes",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 484,
							"name": "bottom",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "axisBottom"
							},
							"defaultValue": " d3.axisBottom"
						},
						{
							"id": 485,
							"name": "left",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 202,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "axisLeft"
							},
							"defaultValue": "   d3.axisLeft"
						},
						{
							"id": 486,
							"name": "right",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 203,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "axisRight"
							},
							"defaultValue": "  d3.axisRight"
						},
						{
							"id": 483,
							"name": "top",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 200,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "axisTop"
							},
							"defaultValue": "    d3.axisTop"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								484,
								485,
								486,
								483
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 199,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						372,
						351,
						433,
						453,
						412,
						325,
						392
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						297,
						253,
						300,
						312,
						294,
						250,
						315
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						477,
						474,
						475,
						476
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						473
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						478
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						482
					]
				}
			],
			"sources": [
				{
					"fileName": "Scale.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189,
			"name": "\"Series\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Series.ts",
			"comment": {
				"shortText": "# Series\nA `GraphComponent` responsible for plotting all added series.",
				"text": "## Available plot types:\n<example libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet types;\n\nfunction getTypes(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     return graph.seriesTypes.map(t => m('li', t));\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#fff;'}, [\n     m('ul', types),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !types) {\n         types = getTypes(svgRoot[0]);\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 197,
					"name": "Series",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A class, instantiated as a primary `Graph` component and proxy for all added series.\n`Seires` manages available series types, as well as the specific series added to a `Graph`,\nincluding their render lifecycle and auto-domaining."
					},
					"children": [
						{
							"id": 210,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 211,
									"name": "new Series",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 212,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Series",
										"id": 197
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.__constructor",
										"id": 1345
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 90,
									"character": 37
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.__constructor",
								"id": 1345
							}
						},
						{
							"id": 241,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 209,
							"name": "series",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 90,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SeriesPlot",
									"id": 108
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 240,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphComponent.svg",
								"id": 1344
							}
						},
						{
							"id": 199,
							"name": "seriesCreatorMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a map of plot types to corresponding plot functions. New plot types are added via a call to `register`."
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 74,
									"character": 37
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 200,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 201,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 202,
													"name": "plotKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "PlotFactory",
												"id": 243
											}
										}
									],
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 74,
											"character": 38
										}
									]
								}
							}
						},
						{
							"id": 198,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 70,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"series\""
						},
						{
							"id": 213,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "returns the component type as a string name"
							},
							"getSignature": [
								{
									"id": 214,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "returns the component type as a string name"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.componentType",
										"id": 1349
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 97,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.componentType",
								"id": 1349
							}
						},
						{
							"id": 215,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 216,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesDefaults",
										"id": 194
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 99,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 207,
							"name": "types",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 208,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 87,
									"character": 27
								}
							]
						},
						{
							"id": 236,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 237,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "adds a series to the plot, for example\n```\ngraph.series.add('area', {x:'time', y:'costs', r:5})\n```\nThe object literal `dims` specifies the data to use for each\nsemantic dimension the plot uses. For details on the dimensions\nsee {@link Series.SeriesDimensions `SeriesDimensions`}"
									},
									"parameters": [
										{
											"id": 238,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "type of plot to use, e.g. 'bubble' or 'scatter', See {@link Series `Series`} for available plots to use."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 239,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an object literal specifying the {@link Series.SeriesDimensions `SeriesDimensions`} to use.\n"
											},
											"type": {
												"type": "reference",
												"name": "SeriesDimensions",
												"id": 190
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SeriesPlot",
										"id": 108
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 176,
									"character": 7
								}
							]
						},
						{
							"id": 230,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 231,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "creates a default entry for the component type in `Defaults`"
									},
									"type": {
										"type": "reference",
										"name": "SeriesDefaults",
										"id": 194
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 133,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 232,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 233,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called during preRendering, prior to all component preRender calls.\nReturns the data domains by data columns across all added series.",
										"returns": "an array of [min, max] domains ranges, indexed by data column\n"
									},
									"parameters": [
										{
											"id": 234,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the data to calculate domains on"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 235,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the current data domains will be accumulated to the\nprovided one under the same data column index. In addition, if domains for the\nnumeric indices `0`, `1`, ... exist, they will be used to merge and initialize\nall series' data columns in the corresponding index. This way, if series use different\ndata columns to be plotted on the same axis, they all share the same domain accumulation."
											},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Domains",
										"id": 594
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 148,
									"character": 17
								}
							]
						},
						{
							"id": 217,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 218,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 219,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 102,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 227,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 228,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 229,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 126,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 220,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 221,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 222,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										},
										{
											"id": 223,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.preRender",
										"id": 630
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 109,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 224,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 225,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data.\nIf `data` is an array of `DataSets`, each data set will be used to plot a different registered series,\nin the order they were regeistered."
									},
									"parameters": [
										{
											"id": 226,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DataSet",
														"id": 585
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "DataSet",
															"id": 585
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.renderComponent",
										"id": 634
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 120,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						},
						{
							"id": 203,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 204,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "registers a new plot type with corresponding function."
									},
									"parameters": [
										{
											"id": 205,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 206,
											"name": "seriesCreator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PlotFactory",
												"id": 243
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 77,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								210
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								241,
								209,
								240,
								199,
								198
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								213,
								215,
								207
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								236,
								230,
								232,
								217,
								227,
								220,
								224,
								203
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 69,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 194,
					"name": "SeriesDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 195,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 196,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 60,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				},
				{
					"id": 190,
					"name": "SeriesDimensions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `SeriesDimensions` that specify the values to use for different\nsemantic dimension (e.g. 'x' for the x-axis) of\neach {@link SeriesPlot `SeriesPlot`}.\nFor each dimension, the value can be either\n- a string that identifies the column name in the data set to use\n- or a {@link Graph.ValueFn `ValueFn`} function that returns the data to use."
					},
					"indexSignature": [
						{
							"id": 191,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "The `SeriesDimensions` that specify the values to use for different\nsemantic dimension (e.g. 'x' for the x-axis) of\neach {@link SeriesPlot `SeriesPlot`}.\nFor each dimension, the value can be either\n- a string that identifies the column name in the data set to use\n- or a {@link Graph.ValueFn `ValueFn`} function that returns the data to use."
							},
							"parameters": [
								{
									"id": 192,
									"name": "dim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ValueDef",
								"id": 740
							}
						}
					],
					"children": [
						{
							"id": 193,
							"name": "stacked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								193
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 53,
							"character": 33
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CartSeriesDimensions",
							"id": 2495
						}
					]
				},
				{
					"id": 243,
					"name": "PlotFactory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 58,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 244,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 245,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 246,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 247,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 248,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDimensions",
												"id": 190
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SeriesPlot",
										"id": 108
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 58,
									"character": 18
								}
							]
						}
					}
				},
				{
					"id": 242,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 34,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Series')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						197
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						194,
						190
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						243
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						242
					]
				}
			],
			"sources": [
				{
					"fileName": "Series.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 103,
			"name": "\"SeriesPlot\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/SeriesPlot.ts",
			"comment": {
				"shortText": "# SeriesPlot",
				"text": "Abstract base class for all series plot types.\nTo create a series plot, add the desired plot type to the graph:\n```\ngraph.series.add(<type>, {x:<dataRef>, ...});\n```\nwhere `dataRef` is a data reference, either\n- the name of a column in the data set to use\n- or a function, returning the data to use. The function will be called at runtime once for each row\nin the data set supplied when calling `render`, and will receive as parameters the `dataRow`,\nthe `index` of the row, and the entire `rows` array.\nTo specify a constant of value 5, simply supply `()=>5`.\n"
			},
			"children": [
				{
					"id": 108,
					"name": "SeriesPlot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "The base class for all series plots. It manages\n- setting the series' defaults\n- expanding domains to values of this series\n- the rendering lifecycle for the series\n- maintaining a stack mechanism that allows series to be stacked on one another"
					},
					"children": [
						{
							"id": 113,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 114,
									"name": "new SeriesPlot",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 115,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 116,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 117,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDimensions",
												"id": 190
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SeriesPlot",
										"id": 108
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 31
								}
							]
						},
						{
							"id": 111,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							}
						},
						{
							"id": 109,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							}
						},
						{
							"id": 112,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 110,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						},
						{
							"id": 120,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 121,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GraphDimensions",
										"id": 591
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 101,
									"character": 34
								}
							]
						},
						{
							"id": 118,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 119,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							]
						},
						{
							"id": 169,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 170,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							]
						},
						{
							"id": 124,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 126,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 127,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							]
						},
						{
							"id": 128,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 129,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 130,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 131,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 132,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 133,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 134,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 135,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 136,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							]
						},
						{
							"id": 137,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 138,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 139,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 140,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 141,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 142,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 143,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 144,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 145,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							]
						},
						{
							"id": 122,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 123,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the defaults for the series. Called during `addSeries`."
									},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 106,
									"character": 22
								}
							]
						},
						{
							"id": 177,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 178,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 221,
									"character": 39
								}
							]
						},
						{
							"id": 155,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 156,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 157,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 158,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 174,
									"character": 21
								}
							]
						},
						{
							"id": 171,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 172,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 173,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							]
						},
						{
							"id": 166,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 167,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 168,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 183,
									"character": 21
								}
							]
						},
						{
							"id": 159,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 160,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 161,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 162,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 179,
									"character": 20
								}
							]
						},
						{
							"id": 163,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 165,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 181,
									"character": 26
								}
							]
						},
						{
							"id": 174,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 175,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 176,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							]
						},
						{
							"id": 146,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 147,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 148,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 149,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 150,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 151,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 152,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 153,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 154,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								113
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								111,
								109,
								112,
								110
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								120,
								118
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								169,
								124,
								128,
								137,
								122,
								177,
								155,
								171,
								166,
								159,
								163,
								174,
								146
							]
						}
					],
					"sources": [
						{
							"fileName": "SeriesPlot.ts",
							"line": 77,
							"character": 32
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CartSeriesPlot",
							"id": 2503
						}
					]
				},
				{
					"id": 104,
					"name": "SeriesPlotDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 105,
							"name": "area",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 41,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Area",
								"id": 1277
							}
						},
						{
							"id": 106,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Line",
								"id": 1271
							}
						},
						{
							"id": 107,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 43,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Marker",
								"id": 1281
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								106,
								107
							]
						}
					],
					"sources": [
						{
							"fileName": "SeriesPlot.ts",
							"line": 40,
							"character": 35
						}
					]
				},
				{
					"id": 180,
					"name": "d3Selection",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "SeriesPlot.ts",
							"line": 38,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "Selection",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BaseType"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"name": "BaseType"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						]
					}
				},
				{
					"id": 179,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "SeriesPlot.ts",
							"line": 18,
							"character": 54
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('SeriesPlot')"
				},
				{
					"id": 181,
					"name": "value",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 182,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an accessor function to access the numeric value in a data row.\nThe type of `v` determines how to access the value:\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If `v` is a number it will be returned as constant result.\n- If `v` is a string and contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.",
								"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
							},
							"parameters": [
								{
									"id": 183,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `ValueDef` specifying the value"
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									}
								},
								{
									"id": 184,
									"name": "colNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a list of names for the coluymns in the `DataSet`"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 185,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 186,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 187,
													"name": "row",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "DataRow",
														"id": 742
													}
												},
												{
													"id": 188,
													"name": "i",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "DataVal",
												"id": 741
											}
										}
									],
									"sources": [
										{
											"fileName": "SeriesPlot.ts",
											"line": 59,
											"character": 46
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "SeriesPlot.ts",
							"line": 59,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						108
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						104
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						180
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						179
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						181
					]
				}
			],
			"sources": [
				{
					"fileName": "SeriesPlot.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "\"Settings\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Settings.ts",
			"comment": {
				"shortText": "# Configuration Defaults",
				"text": "provides `type` aliases, `interfaces`, and support functions to generate default settings for {@link GraphComponent GraphComponents}.\n\nEach `graph` instance maintains its own copy of component settings.\nThe setting are initialized during construction and can be modified as needed.\n`graph` provides two paths to access and modify setting:\n- `graph.defaults.<component>.<subselector>` provides a central access to collection of\nall component settings via the `graph's` default getter. The table below lists all settings\navailable under `graph.defaults`.\n- Each `GraphComponent` provides access to the component's default settings via `<component>.defaults.<subselector>`.\nThese are also accessible via the `graph's` `defaults` getter.\n\nFor example, the `canvas` settings can be accessed via `graph.canvas.defaults` and\n`grpah.defaults.canvas`;\n\n### Accessible format setting and defaults (for a cartesian graph):\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('bubble', 'time', 'volume', 'costs');\n     graph.canvas.defaults.stroke.width = 7.8; // odd number, should appear on the left\n     return graph.defaults;\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace; font-size:12px'}, [\n     m('div', m.trust('graph.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 30,
					"name": "MarkerShape",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 35,
							"name": "circle",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 113,
									"character": 45
								}
							]
						},
						{
							"id": 32,
							"name": "diamond",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 113,
									"character": 19
								}
							]
						},
						{
							"id": 31,
							"name": "square",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 113,
									"character": 10
								}
							]
						},
						{
							"id": 34,
							"name": "tri_down",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 113,
									"character": 37
								}
							]
						},
						{
							"id": 33,
							"name": "tri_up",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 113,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								35,
								32,
								31,
								34,
								33
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 112,
							"character": 23
						}
					]
				},
				{
					"id": 8,
					"name": "Fill",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 9,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 83,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"id": 55
							}
						},
						{
							"id": 10,
							"name": "opacity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 84,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ZeroToOne",
								"id": 56
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								9,
								10
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 82,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Area",
							"id": 1277
						}
					]
				},
				{
					"id": 36,
					"name": "MarkerStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 39,
							"name": "fill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 119,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Fill",
								"id": 8
							}
						},
						{
							"id": 38,
							"name": "shape",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "MarkerShape",
								"id": 30
							}
						},
						{
							"id": 37,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 117,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						},
						{
							"id": 40,
							"name": "stroke",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								39,
								38,
								37,
								40
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 116,
							"character": 28
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Marker",
							"id": 1281
						}
					]
				},
				{
					"id": 3,
					"name": "RectDef",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 7,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 68,
									"character": 67
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						},
						{
							"id": 6,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 68,
									"character": 52
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						},
						{
							"id": 4,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 68,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						},
						{
							"id": 5,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 68,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								7,
								6,
								4,
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 68,
							"character": 24
						}
					]
				},
				{
					"id": 16,
					"name": "RectStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 19,
							"name": "fill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 97,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Fill",
								"id": 8
							}
						},
						{
							"id": 17,
							"name": "rx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 95,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						},
						{
							"id": 18,
							"name": "ry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 96,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						},
						{
							"id": 20,
							"name": "stroke",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 98,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								19,
								17,
								18,
								20
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 94,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CanvasDefaults",
							"id": 547
						}
					]
				},
				{
					"id": 11,
					"name": "Stroke",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 13,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 89,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"id": 55
							}
						},
						{
							"id": 15,
							"name": "dashed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 91,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 14,
							"name": "opacity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 90,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ZeroToOne",
								"id": 56
							}
						},
						{
							"id": 12,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitVp",
								"id": 42
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								13,
								15,
								14,
								12
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 87,
							"character": 23
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Line",
							"id": 1271
						}
					]
				},
				{
					"id": 21,
					"name": "TextStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 24,
							"name": "font",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 104,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 25,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 26,
											"name": "family",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 105,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 106,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "UnitVp",
												"id": 42
											}
										},
										{
											"id": 28,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 107,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29,
											"name": "weight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 108,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												26,
												27,
												28,
												29
											]
										}
									],
									"sources": [
										{
											"fileName": "Settings.ts",
											"line": 104,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 22,
							"name": "rendered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 102,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23,
							"name": "stroke",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 103,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								24,
								22,
								23
							]
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 101,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Text",
							"id": 1287
						}
					]
				},
				{
					"id": 55,
					"name": "Color",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 75,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 51,
					"name": "DefaultsAccess",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 74,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 52,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 53,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 54,
											"name": "compName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									}
								}
							],
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 74,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 47,
					"name": "DefaultsType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 72,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 48,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 49,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 50,
											"name": "compName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentDefaults",
										"id": 1318
									}
								}
							],
							"sources": [
								{
									"fileName": "Settings.ts",
									"line": 72,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 57,
					"name": "Index",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 77,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 45,
					"name": "Unit",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "CSS general units"
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 66,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "UnitPx",
								"id": 43
							}
						]
					}
				},
				{
					"id": 44,
					"name": "UnitPercent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "percent units"
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 63,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43,
					"name": "UnitPx",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "CSS px units"
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 60,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42,
					"name": "UnitVp",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "viewport units"
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 57,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 56,
					"name": "ZeroToOne",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 76,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 46,
					"name": "d3Base",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 70,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Selection",
						"typeArguments": [
							{
								"type": "reference",
								"name": "d3.BaseType"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"name": "d3.BaseType"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				},
				{
					"id": 41,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 51,
							"character": 56
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " _log('Defaults')"
				},
				{
					"id": 66,
					"name": "defaultFill",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 67,
							"name": "defaultFill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 68,
									"name": "areaFill",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Color",
										"id": 55
									},
									"defaultValue": "\"currentColor\""
								},
								{
									"id": 69,
									"name": "opacity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0.5"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 70,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 71,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 144,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " areaFill"
										},
										{
											"id": 72,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Settings.ts",
													"line": 145,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " opacity"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												71,
												72
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 142,
							"character": 24
						}
					]
				},
				{
					"id": 62,
					"name": "defaultLine",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 63,
							"name": "defaultLine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 64,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "UnitVp",
										"id": 42
									}
								},
								{
									"id": 65,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Color",
										"id": 55
									},
									"defaultValue": "\"currentColor\""
								}
							],
							"type": {
								"type": "reference",
								"name": "Line",
								"id": 1271
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 136,
							"character": 24
						}
					]
				},
				{
					"id": 81,
					"name": "defaultMarker",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 82,
							"name": "defaultMarker",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 83,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"currentColor\""
								},
								{
									"id": 84,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MarkerShape",
										"id": 30
									},
									"defaultValue": "MarkerShape.circle"
								},
								{
									"id": 85,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "10"
								}
							],
							"type": {
								"type": "reference",
								"name": "MarkerStyle",
								"id": 36
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 177,
							"character": 26
						}
					]
				},
				{
					"id": 73,
					"name": "defaultRect",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "convenience function to create a default `RectStyle` object with configurable fill color and border."
					},
					"signatures": [
						{
							"id": 74,
							"name": "defaultRect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "convenience function to create a default `RectStyle` object with configurable fill color and border."
							},
							"parameters": [
								{
									"id": 75,
									"name": "areaFill",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Color",
										"id": 55
									}
								},
								{
									"id": 76,
									"name": "borderWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the border width in pixel"
									},
									"type": {
										"type": "reference",
										"name": "UnitVp",
										"id": 42
									},
									"defaultValue": "0"
								},
								{
									"id": 77,
									"name": "borderColor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the border color\n"
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"id": 55
									},
									"defaultValue": "\"currentColor\""
								}
							],
							"type": {
								"type": "reference",
								"name": "RectStyle",
								"id": 16
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 155,
							"character": 24
						}
					]
				},
				{
					"id": 58,
					"name": "defaultStroke",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 59,
							"name": "defaultStroke",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 60,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "UnitVp",
										"id": 42
									}
								},
								{
									"id": 61,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Color",
										"id": 55
									},
									"defaultValue": "\"currentColor\""
								}
							],
							"type": {
								"type": "reference",
								"name": "Stroke",
								"id": 11
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 127,
							"character": 26
						}
					]
				},
				{
					"id": 78,
					"name": "defaultText",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 79,
							"name": "defaultText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 80,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "16"
								}
							],
							"type": {
								"type": "reference",
								"name": "TextStyle",
								"id": 21
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 164,
							"character": 24
						}
					]
				},
				{
					"id": 90,
					"name": "setFill",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 91,
							"name": "setFill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 92,
									"name": "svg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "d3Base",
										"id": 46
									}
								},
								{
									"id": 93,
									"name": "settings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Fill",
										"id": 8
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 199,
							"character": 23
						}
					]
				},
				{
					"id": 94,
					"name": "setRect",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 95,
							"name": "setRect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 96,
									"name": "svg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "d3Base",
										"id": 46
									}
								},
								{
									"id": 97,
									"name": "settings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RectStyle",
										"id": 16
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 205,
							"character": 23
						}
					]
				},
				{
					"id": 86,
					"name": "setStroke",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 87,
							"name": "setStroke",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 88,
									"name": "svg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "d3Base",
										"id": 46
									}
								},
								{
									"id": 89,
									"name": "settings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Stroke",
										"id": 11
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 191,
							"character": 25
						}
					]
				},
				{
					"id": 98,
					"name": "setText",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 99,
							"name": "setText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 100,
									"name": "svg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "d3Base",
										"id": 46
									}
								},
								{
									"id": 101,
									"name": "settings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TextStyle",
										"id": 21
									}
								},
								{
									"id": 102,
									"name": "transition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Settings.ts",
							"line": 213,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						30
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						8,
						36,
						3,
						16,
						11,
						21
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						55,
						51,
						47,
						57,
						45,
						44,
						43,
						42,
						56,
						46
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						41
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						66,
						62,
						81,
						73,
						58,
						78,
						90,
						94,
						86,
						98
					]
				}
			],
			"sources": [
				{
					"fileName": "Settings.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2599,
			"name": "\"Title\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/Title.ts",
			"comment": {
				"shortText": "# Title component\nrenders the `Graph's` Title.",
				"text": "### Title Default Settings:\n<example height=300px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.canvas.defaults = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log\n             .inspect(new hsGraphD3.GraphCartesian(svgRoot[0]).defaults.title, null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 2605,
					"name": "Title",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2607,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2608,
									"name": "new Title",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2609,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Title",
										"id": 2605
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.__constructor",
										"id": 1345
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 46,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.__constructor",
								"id": 1345
							}
						},
						{
							"id": 2626,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 80,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphBase.cfg",
								"id": 1322
							}
						},
						{
							"id": 2625,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "GraphComponent.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "GraphComponent.svg",
								"id": 1344
							}
						},
						{
							"id": 2606,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"title\""
						},
						{
							"id": 2610,
							"name": "componentType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2611,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphComponent.componentType",
										"id": 1349
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 52,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphComponent.componentType",
								"id": 1349
							}
						},
						{
							"id": 2612,
							"name": "defaults",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2613,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TitleDefaults",
										"id": 2600
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.defaults",
										"id": 1328
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 54,
									"character": 23
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.defaults",
								"id": 1328
							}
						},
						{
							"id": 2614,
							"name": "createDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2615,
									"name": "createDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TitleDefaults",
										"id": 2600
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.createDefaults",
										"id": 1326
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 56,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.createDefaults",
								"id": 1326
							}
						},
						{
							"id": 2616,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2617,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2618,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.initialize",
										"id": 1330
									},
									"implementationOf": {
										"type": "reference",
										"name": "LifecycleCalls.initialize",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 63,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.initialize",
								"id": 1330
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.initialize",
								"id": 626
							}
						},
						{
							"id": 2623,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2624,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.postRender",
										"id": 1340
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 77,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.postRender",
								"id": 1340
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.postRender",
								"id": 636
							}
						},
						{
							"id": 2619,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2620,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.preRender",
										"id": 1333
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 67,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.preRender",
								"id": 1333
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.preRender",
								"id": 629
							}
						},
						{
							"id": 2621,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2622,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the Graph's background canvas"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "GraphBase.renderComponent",
										"id": 1337
									}
								}
							],
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 73,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "GraphBase.renderComponent",
								"id": 1337
							},
							"implementationOf": {
								"type": "reference",
								"name": "LifecycleCalls.renderComponent",
								"id": 633
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2607
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2626,
								2625,
								2606
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2610,
								2612
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2614,
								2616,
								2623,
								2619,
								2621
							]
						}
					],
					"sources": [
						{
							"fileName": "Title.ts",
							"line": 45,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphComponent",
							"id": 1343
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LifecycleCalls",
							"id": 625
						}
					]
				},
				{
					"id": 2600,
					"name": "TitleDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 2603,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 2604,
									"name": "filed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 2601,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 40,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitPercent",
								"id": 44
							}
						},
						{
							"id": 2602,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Title.ts",
									"line": 41,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UnitPercent",
								"id": 44
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2601,
								2602
							]
						}
					],
					"sources": [
						{
							"fileName": "Title.ts",
							"line": 39,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentDefaults",
							"id": 1318
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2605
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2600
					]
				}
			],
			"sources": [
				{
					"fileName": "Title.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2596,
			"name": "\"examples\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/examples.ts",
			"comment": {
				"shortText": "#Examples",
				"text": "<example height=2000px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst content = [\n     graph => {  // simple 'line' graph\n         graph.series.add('line', {x:'time', y:'Joe'});\n         graph.series.add('line', {x:'time', y:'Mary'});\n         graph.render(data);\n     },\n\n\n     graph => {  // 'line' graph with dynamic updates\n         graph.series.add('line', {x:'time', y:'Joe'});\n         graph.series.add('line', {x:'time', y:'Mary'});\n         graph.render(data).update(2000, update);\n     },\n\n     graph => {  // simple 'area' graph\n         graph.series.add('area', {x:'time', y:'Joe'});\n         graph.series.add('area', {x:'time', y:'Mary'});\n         graph.render(data).update(2000);\n     },\n\n\n     graph => {  // raised 'area' graph\n         graph.series.add('area', {x:'time', y:'Joe'});\n         graph.series.add('area', {x:'time', y:'Mary', y0:()=>1});\n         graph.render(data).update(2000);\n     },\n\n\n     graph => {  // opposed 'area' graph\n         graph.series.add('area', {x:'time', y:'Joe', y0:()=>1});\n         graph.series.add('area', {x:'time', y:'Mary', y0:()=>1});\n         graph.render(data).update(2000);\n     },\n\n\n     graph => {  // 'line' graph with area and markers for first series\n         graph.series.add('line', {x:'time', y:'Joe'});\n         graph.series.add('line', {x:'time', y:'Mary'});\n         graph.series.defaults.series0.area.rendered = true;\n         graph.series.defaults.series0.marker.rendered = true;\n         graph.render(data).update(2000);\n     },\n\n     graph => {  // 'bubble' graph\n         graph.series.add('bubble', {x:'time', y:'Joe'});\n         graph.series.add('bubble', {x:'time', y:'Mary', r:'Joe'});\n         graph.render(data).update(2000);\n     },\n\n     graph => {  // 'time series'\n         graph.series.add('timeseries', {x:'time', y:'Joe'});\n         graph.series.add('timeseries', {x:'time', y:'Mary'});\n         graph.render(dataTS).update(2000, updateTS);\n     },\n\n     graph => {  // 'column' graph\n         graph.series.add('column', {x:'item', y:'Joe'});\n         graph.series.add('column', {x:'item', y:'Mary'});\n         graph.render(data).update(2000);\n     },\n\n     graph => {  // stacked 'column' graph\n         graph.series.add('column', {x:'item', y:'Joe', stacked:'myGroup'});\n         graph.series.add('column', {x:'item', y:'Mary', stacked:'myGroup'});\n         graph.render(data).update(2000);\n     },\n\n     graph => {  // 'bar' graph\n         graph.series.add('bar', {x:'Joe', y:'item'});\n         graph.series.add('bar', {x:'Mary', y:'item'});\n         graph.render(data).update(2000);\n     },\n\n     graph => {  // stacked 'bar' graph\n         graph.series.add('bar', {x:'Joe', y:'item', stacked:'myGroup'});\n         graph.series.add('bar', {x:'Mary', y:'item', stacked:'myGroup'});\n         graph.render(data).update(2000);\n     },\n\n];\n\nfunction nodeGraph(configure) {\n     // create a random class and ID.\n     const cls = 'a'+parseInt(''+Math.random()*100000);\n\n     // return a mithril node\n     return {\n         view:() => m(`div.${cls}#${cls}`),\n         oncreate:() => {\n             const graphRoot = root.getElementsByClassName(cls)[0];\n             if (graphRoot) {\n                 const graph = new hsGraphD3.GraphCartesian(graphRoot);\n                 configure(graph);\n             }\n         }\n     }\n}\n\nconst update = (data) => {\n     const Joe = data.colNames.indexOf('Joe');\n     const Mary = data.colNames.indexOf('Mary');\n     data.rows.forEach(row => {\n         row[Joe]  = Math.random();\n         row[Mary] = Math.random() + 1;\n     });\n     // continue updating\n}\n\nconst data = {\n   colNames:['item', 'time', 'Joe', 'Mary'],\n   rows:[   ['a',    0.0,    0.2,    1.3],\n            ['b',    0.2,    0.7,    1.2],\n            ['c',    0.4,    0.1,    1.9],\n            ['d',    0.6,    0.2,    1.1],\n            ['e',    0.8,    0.3,    1.5],\n            ['f',    1,      0.2,    1.4]]\n}\n\nconst dataTS = {\n   colNames:['time', 'Joe', 'Mary'],\n   rows:[]\n}\n\nlet time = 0;\nwhile (time<11) {\n   val = Math.random();\n   dataTS.rows.push([(time++)/5, val, val-1]);\n}\n\nconst updateTS = (data) => {\n     dataTS.rows.push([(time++)/5, Math.random(), Math.random() + 1]);\n     if (dataTS.rows.length > 10) { dataTS.rows.shift(); }\n     // continue updating\n}\n\nm.mount(root, {\n  view:() => m(hsLayout.Layout, { rows: ['20px', '125px'], content:[\n     m('div.hs-layout', {style:'background-color:white;'}),\n     ...content.map(fn => m(nodeGraph(fn)))] }),\n});\n\n</file>\n</example>\n\n"
			},
			"sources": [
				{
					"fileName": "examples.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2597,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2598,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/overview.ts",
			"comment": {
				"shortText": "# hsGraphD3",
				"text": "Helpful Scripts Graph convenience wrapper for D3js.\n<a href=\"./data/src/hsGraphD3/coverage/\" target=\"_blank\">[Coverage Info]</a>\n\n[![npm version](https://badge.fury.io/js/hsgraphd3.svg)](https://badge.fury.io/js/hsgraphd3)\n[![GitHub](https://img.shields.io/badge/GitHub-hsGraphD3-blue.svg)](https://github.com/helpfulscripts/hsgraphd3)\n[![docs](https://img.shields.io/badge/hsDocs-hsGraphD3-blue.svg)](https://helpfulscripts.github.io/hsGraphD3/#!/api/hsGraphD3/0)\n[![Build Status](https://travis-ci.org/HelpfulScripts/hsGraphD3.svg?branch=master)](https://travis-ci.org/HelpfulScripts/hsGraphD3)\n[![Dependencies Status](https://david-dm.org/helpfulscripts/hsgraphd3.svg)](https://david-dm.org/helpfulscripts/hsgraphd3)\n[![Coverage Status](https://coveralls.io/repos/github/HelpfulScripts/hsGraphD3/badge.svg?branch=master)](https://coveralls.io/github/HelpfulScripts/hsGraphD3?branch=master)\n[![Known Vulnerabilities](https://snyk.io/test/github/HelpfulScripts/hsGraphD3/badge.svg?targetFile=package.json)](https://snyk.io/test/github/HelpfulScripts/hsGraphD3?targetFile=package.json)\n[![NPM License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://www.npmjs.com/package/hsgraphd3)\n\n___\n`hsGraphD3` provides convienent programmatic shortcuts to plotting data with [`D3js`](https://d3js.org/).\n\nSee {@link API API}.\n\n## Usage\n1. create a {@link Graph `Graph`} object with a root DOM element to attach to:\n`graph = new hsGraphD3.GraphCartesian(root);`\n2. add desired series configurations, specifying the type of series, as well as the data to use for the x- and y-axes,\nand other variables, depending on the series type:\n`graph.series.add('area', {x:'time', y:'volume', r:()=>5});`\n3. apply any desired formatting changes to the default:\n`graph.axes.defaults.color = '#88f';`\n4. render the graph for a given data set:\n`graph.render(data);`\n\nTo dynamically update the graph to new data, call the {@link Graph.RenderChain `update`} method.\nSee {@link examples examples}.\n\n## Data\nData is provided either in table form\n```\n[\n   colNames[],\n   <number|string|Date>[],\n   ...\n]\n```\nor in object-literal form\n```\n{\n   name?:  string;\n   colNames:  string[];\n   rows:   <number|string|Date>[][];\n}\n```\n\n## Example 1: {@link plots.Bubble `bubble`} chart\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames:['date', 'time', 'volume', 'costs'],\n   rows:[   ['1/1/14', -1,     0.2,    0.3],\n            ['1/1/16',  0.2,   0.7,    0.2],\n            ['9/1/16',  0.4,   0.1,    0.3],\n            ['5/1/17',  0.6,  -0.2,    0.1],\n            ['7/1/18',  0.8,   0.3,    0.5],\n            ['1/1/19',  1,     0.2,    0.4]]\n};\n\n// create the graph and define the series to plot:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('bubble', {x:'time', y:'volume', r:'costs'});\n\n// adjust some settings:\ngraph.axes.defaults.color = '#88f';  // both axes appear blue\nwith (graph.scales.defaults.dims.size.range) {\n     min = 10;                       // min marker size\n     max = 50;                       // max marker size\n}\n\n// trigger the update loop to plot the data\ngraph.render(data).update(2000, data => {\n     // modify the data in this round:\n     data.rows.map(row => {\n         row[2] = (Math.random()-0.1)*200;   // y-value\n         row[3] = Math.random();             // radius\n     });\n     return true;\n});\n</file>\n</example>\n\n## Example 2: {@link plots.Line `line`} vs. {@link plots.TimeSeries `timeseries`}\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames:['date', 'line', 'series'],\n   rows:[   [0,       0.2,     -0.2]],\n};\nlet index = 0;\nwhile (index<11) {\n   val = Math.random();\n   data.rows.push([index++, val, val-1]);\n}\n\n// create the graph and define the series to plot:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('line', {x:'date', y:'line', y0:()=>0});\ngraph.series.add('timeseries', {x:'date', y:'series', y0:()=>-1});\n\n//----- adjust some settings:\nwith (graph.defaults) {\n   scales.dims.hor.aggregateOverTime = false; // forget the past\n   series.series0.area.rendered = true;\n   series.series1.area.rendered = true;\n   axes.ver.tickLabel.rendered = false;  // hide vertical axis labels\n}\n\n// trigger the update loop to plot the data\ngraph.render(data).update(1000, cycle);\n\nfunction cycle(data) {\n     // add a row of data\n     val = Math.random();\n     data.rows.push([index++, val, val-1]);\n\n     // remove old row of data:\n     if (data.rows.length > 10) { data.rows.shift(); }\n\n     // continue update calls:\n     return true;\n};\n</file>\n</example>\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1771,
			"name": "\"plots/Area\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/Area.ts",
			"comment": {
				"shortText": "# Area Plot",
				"text": "plots a 2D area. Defers to {@link NumericSeriesPlot NumericSeriesPlot} to render plot elements and uses the\ndefault configuration to\n- hide the plot line\n- hide the plot markers\n- show the plot area\nEach of these can be modified via changing the {@link Settings default settings}.\n\n\n## Usage\n`graph.series.add('area', {x:<x-col>, y:<y-col>, y0:<y-lower-fill>=0, r?:<size-col>});`\n\n## Example\n- first series (top): an orange area-band between 'costs' and 'volume', not using markers\n- second series (bottom): a green area between 'volume' and the x-axis (y0=0), using markers sized by 'costs'\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('area', {x:'time', y:'costs', y0:'volume'});\ngraph.series.add('area', {x:'time', y:'volume', r:'costs'});\ngraph.render({\n   colNames:['time', 'volume', 'costs'],\n   rows:[    [-1,    0.2,      0.3],\n             [0.2,   0.4,      0.7],\n             [0.4,   0.1,      0.3],\n             [0.6,  -0.2,      0.1],\n             [0.8,   0.3,      0.5],\n             [1,     0.2,      0.4]]\n});\n\n</file>\n</example>\n\n### Area plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('area', {x:'time', y:'volume', r:'costs'});\n     return graph.series.defaults[0];\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.series.defaults[0] = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1772,
					"name": "Area",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1806,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1807,
									"name": "new Area",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1808,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1809,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1810,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Area",
										"id": 1772
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 1832,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 1830,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 1775,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the main data line"
							},
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.line",
								"id": 1448
							}
						},
						{
							"id": 1833,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 1831,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 1813,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 1814,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 1811,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 1812,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 1834,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1835,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 1867,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1868,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 1796,
							"name": "d3DrawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1797,
									"name": "d3DrawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1798,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1799,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericSeriesPlot",
												"id": 1447
											}
										},
										{
											"id": 1800,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3DrawMarker",
										"id": 1469
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3DrawMarker",
								"id": 1469
							}
						},
						{
							"id": 1792,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1793,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1794,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1795,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderFill",
										"id": 1465
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 107,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderFill",
								"id": 1465
							}
						},
						{
							"id": 1784,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1785,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1786,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1787,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderMarkers",
										"id": 1457
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 89,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderMarkers",
								"id": 1457
							}
						},
						{
							"id": 1788,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1789,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1790,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1791,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderPath",
										"id": 1461
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderPath",
								"id": 1461
							}
						},
						{
							"id": 1836,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1837,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1838,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1839,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 1840,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1841,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1842,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1843,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 1844,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1845,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1846,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1847,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1848,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 1849,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1850,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1851,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1852,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 1853,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1854,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1855,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1856,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1857,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 1773,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1774,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Area.ts",
									"line": 78,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 1801,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1802,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the path rendering for the main data line"
									},
									"parameters": [
										{
											"id": 1803,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NumericDataRow",
													"id": 743
												}
											}
										},
										{
											"id": 1804,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1805,
											"name": "yDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a constant (defaults to 0), or the data column to render from\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											},
											"defaultValue": " () => 0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.getLine",
										"id": 1474
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 138,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.getLine",
								"id": 1474
							}
						},
						{
							"id": 1826,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1827,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1828,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1829,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 1821,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1822,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 1776,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1777,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1778,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1779,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.initialize",
										"id": 1449
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 76,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.initialize",
								"id": 1449
							}
						},
						{
							"id": 1869,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1870,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 1871,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 1818,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1819,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1820,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 1780,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1781,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1782,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										},
										{
											"id": 1783,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.preRender",
										"id": 1453
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 80,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.preRender",
								"id": 1453
							}
						},
						{
							"id": 1815,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1816,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 1817,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 1823,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1824,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1825,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 1872,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1873,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 1874,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 1858,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1859,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 1860,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1861,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 1862,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1863,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1864,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1865,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 1866,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1806
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1832,
								1830,
								1775,
								1833,
								1831
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1813,
								1811,
								1834
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1867,
								1796,
								1792,
								1784,
								1788,
								1836,
								1840,
								1849,
								1773,
								1801,
								1826,
								1821,
								1776,
								1869,
								1818,
								1780,
								1815,
								1823,
								1872,
								1858
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/Area.ts",
							"line": 77,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumericSeriesPlot",
							"id": 1447
						}
					]
				},
				{
					"id": 1875,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/Area.ts",
							"line": 68,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Area')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1772
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1875
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/Area.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2319,
			"name": "\"plots/Bar\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/Bar.ts",
			"comment": {
				"shortText": "# Bar Plot",
				"text": "## Usage\n`graph.series.add('bar', {x:<x-col>, y:<y-col>, stacked?:<group-name>});`\n\n## Example\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames: ['State', 'volume', 'costs'],\n   rows:[    ['CA',     -0.1,     0.2],\n             ['MA',      0.2,     0.7],\n             ['FL',      0.4,     0.1],\n             ['SC',      0.6,    -0.2],\n             ['NV',      0.8,     0.3],\n             ['NC',      1,       0.2]]\n};\n\n// setup and plot the data:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('bar', {x:'costs', y:'State'});\ngraph.series.add('bar', {x:'volume', y:'State'});\ngraph.scales.defaults.dims.ver.ordinal.gap = 0.25;\ngraph.scales.defaults.dims.ver.ordinal.overlap = 0.75;\ngraph.series.defaults[0].line.rendered = true;\ngraph.series.defaults.series1.line.rendered = true;\ngraph.grids.defaults.hor.major.rendered = false;\ngraph.render(data).update(2000, data => {\n     data.rows.forEach(row => {\n         row[1] = 0.5*Math.random()-0.2;\n         row[2] = 0.5*Math.random()+0.3;\n     });\n     return true;\n});\n\n</file>\n</example>\n\n\n## Example for stacking\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames: ['State', 'volume', 'costs'],\n   rows:[    ['CA',     -0.1,     0.2],\n             ['MA',      0.2,     0.7],\n             ['FL',      0.4,     0.1],\n             ['SC',      0.6,    -0.2],\n             ['NV',      0.8,     0.3],\n             ['NC',      1,       0.2]]\n};\n\n// setup and plot the data:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('bar', {x:'costs', y:'State', stacked:'group1'});\ngraph.series.add('bar', {x:'volume', y:'State', stacked:'group1'});\ngraph.scales.defaults.dims.ver.ordinal.gap = 0.25;\ngraph.scales.defaults.dims.ver.ordinal.overlap = 0.75;\ngraph.series.defaults.series0.line.rendered = true;\ngraph.series.defaults.series1.line.rendered = true;\ngraph.grids.defaults.hor.major.rendered = false;\ngraph.render(data).update(2000, data => {\n     data.rows.forEach(row => {\n         row[1] = 1.0*Math.random();\n         row[2] = 1.0*Math.random();\n     });\n     return true;\n});\n\n</file>\n</example>\n\n\n### Bar plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('bar', {y:'state', x:'volume'});\n     return graph;\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust(defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         const graph = createGraph(svgRoot[0]);\n         defaults = `<b>graph.series.defaults = </b>\n             ${hsUtil.log.inspect(graph.series.defaults, null, '   ', colors).replace(/\\n/g, '<br>')}\n             <br><br><b>graph.scales.defaults.dims = </b>\n             ${hsUtil.log.inspect(graph.scales.defaults.dims, null, '   ', colors).replace(/\\n/g, '<br>')}`;\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 2320,
					"name": "Bar",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2373,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2374,
									"name": "new Bar",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2375,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 2376,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2377,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Bar",
										"id": 2320
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 2397,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 2395,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 2398,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 2396,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 2378,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 2379,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 2321,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2322,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "stringLiteral",
										"value": "ver"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Bar.ts",
									"line": 125,
									"character": 33
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 2399,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2400,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 2414,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2415,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 2363,
							"name": "d3DrawBar",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2364,
									"name": "d3DrawBar",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2365,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2366,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2367,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3DrawBar",
										"id": 2140
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 148,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3DrawBar",
								"id": 2140
							}
						},
						{
							"id": 2359,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2360,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2361,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2362,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3RenderFill",
										"id": 2132
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3RenderFill",
								"id": 2132
							}
						},
						{
							"id": 2351,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2352,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2353,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2354,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3RenderMarkers",
										"id": 2124
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 114,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3RenderMarkers",
								"id": 2124
							}
						},
						{
							"id": 2355,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2356,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2357,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2358,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3RenderPath",
										"id": 2128
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 117,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3RenderPath",
								"id": 2128
							}
						},
						{
							"id": 2401,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2402,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2403,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2404,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 2334,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2335,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "ensures that 0 is in the domain, since the columns extend down to 0."
									},
									"parameters": [
										{
											"id": 2336,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2337,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 2338,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2339,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2340,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2341,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2342,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "plots/OrdinalSeriesPlot.ts",
															"line": 91,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.expandNumDomain",
										"id": 2107
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 91,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.expandNumDomain",
								"id": 2107
							}
						},
						{
							"id": 2405,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2406,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2407,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2408,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 2409,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2410,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2411,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2412,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2413,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 2323,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2324,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.getDefaults",
										"id": 2096
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Bar.ts",
									"line": 127,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.getDefaults",
								"id": 2096
							}
						},
						{
							"id": 2368,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2369,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2370,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2371,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow",
													"id": 742
												}
											}
										},
										{
											"id": 2372,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.getLine",
										"id": 2145
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 177,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.getLine",
								"id": 2145
							}
						},
						{
							"id": 2391,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2392,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2393,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2394,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 2386,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2387,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 2343,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2344,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2345,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2346,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.initialize",
										"id": 2116
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 100,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.initialize",
								"id": 2116
							}
						},
						{
							"id": 2416,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2417,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 2418,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 2383,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2384,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2385,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 2347,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2348,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2349,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2350,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.preRender",
										"id": 2120
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 104,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.preRender",
								"id": 2120
							}
						},
						{
							"id": 2380,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2381,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 2382,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 2388,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2389,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2390,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 2419,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2420,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 2421,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 2325,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2326,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2327,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2328,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 2329,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2330,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2331,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2332,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 2333,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "plots/OrdinalSeriesPlot.ts",
													"line": 78,
													"character": 53
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.value",
										"id": 2098
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 78,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.value",
								"id": 2098
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2373
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2397,
								2395,
								2398,
								2396
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2378,
								2321,
								2399
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2414,
								2363,
								2359,
								2351,
								2355,
								2401,
								2334,
								2405,
								2323,
								2368,
								2391,
								2386,
								2343,
								2416,
								2383,
								2347,
								2380,
								2388,
								2419,
								2325
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/Bar.ts",
							"line": 124,
							"character": 16
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "OrdinalSeriesPlot",
							"id": 2095
						}
					]
				},
				{
					"id": 2422,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/Bar.ts",
							"line": 112,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Column')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2320
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2422
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/Bar.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1561,
			"name": "\"plots/Bubble\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/Bubble.ts",
			"comment": {
				"shortText": "# Bubble Plot",
				"text": "## Usage\n`graph.series.add('bubble', {x:<x-col>, y:<y-col>, r:<size-col>});`\n\n## Example\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames: ['date', 'time', 'volume', 'costs'],\n   rows:[    ['1/1/14', -1,     0.2,      0.3],\n             ['1/1/16', 0.2,    0.7,      0.2],\n             ['9/1/16', 0.4,    0.1,      0.3],\n             ['5/1/17', 0.6,   -0.2,      0.1],\n             ['7/1/18', 0.8,    0.3,      0.5],\n             ['1/1/19', 1,      0.2,      0.4]]\n};\n\n// setup and plot the data:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('bubble', {x:'time', y:'volume', r:'costs'});\ngraph.render(data);\n\n</file>\n</example>\n\n\n### Bubble plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('bubble', {x:'time', y:'volume', r:'costs'});\n     return graph.series.defaults[0];\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.series.defaults[0] = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1562,
					"name": "Bubble",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1596,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1597,
									"name": "new Bubble",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1598,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1599,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1600,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Bubble",
										"id": 1562
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 1622,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 1620,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 1565,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the main data line"
							},
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.line",
								"id": 1448
							}
						},
						{
							"id": 1623,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 1621,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 1603,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 1604,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 1601,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 1602,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 1624,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1625,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 1657,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1658,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 1586,
							"name": "d3DrawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1587,
									"name": "d3DrawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1588,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1589,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericSeriesPlot",
												"id": 1447
											}
										},
										{
											"id": 1590,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3DrawMarker",
										"id": 1469
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3DrawMarker",
								"id": 1469
							}
						},
						{
							"id": 1582,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1583,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1584,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1585,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderFill",
										"id": 1465
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 107,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderFill",
								"id": 1465
							}
						},
						{
							"id": 1574,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1575,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1576,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1577,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderMarkers",
										"id": 1457
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 89,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderMarkers",
								"id": 1457
							}
						},
						{
							"id": 1578,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1579,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1580,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1581,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderPath",
										"id": 1461
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderPath",
								"id": 1461
							}
						},
						{
							"id": 1626,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1627,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1628,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1629,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 1630,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1631,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1632,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1633,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 1634,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1635,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1636,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1637,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1638,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 1639,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1640,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1641,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1642,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 1643,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1644,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1645,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1646,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1647,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 1563,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1564,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Bubble.ts",
									"line": 73,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 1591,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1592,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the path rendering for the main data line"
									},
									"parameters": [
										{
											"id": 1593,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NumericDataRow",
													"id": 743
												}
											}
										},
										{
											"id": 1594,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1595,
											"name": "yDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a constant (defaults to 0), or the data column to render from\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											},
											"defaultValue": " () => 0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.getLine",
										"id": 1474
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 138,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.getLine",
								"id": 1474
							}
						},
						{
							"id": 1616,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1617,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1618,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1619,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 1611,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1612,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 1566,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1567,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1568,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1569,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.initialize",
										"id": 1449
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 76,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.initialize",
								"id": 1449
							}
						},
						{
							"id": 1659,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1660,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 1661,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 1608,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1609,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1610,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 1570,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1571,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1572,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										},
										{
											"id": 1573,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.preRender",
										"id": 1453
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 80,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.preRender",
								"id": 1453
							}
						},
						{
							"id": 1605,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1606,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 1607,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 1613,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1614,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1615,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 1662,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1663,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 1664,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 1648,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1649,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 1650,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1651,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 1652,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1653,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1654,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1655,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 1656,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1596
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1622,
								1620,
								1565,
								1623,
								1621
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1603,
								1601,
								1624
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1657,
								1586,
								1582,
								1574,
								1578,
								1626,
								1630,
								1639,
								1563,
								1591,
								1616,
								1611,
								1566,
								1659,
								1608,
								1570,
								1605,
								1613,
								1662,
								1648
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/Bubble.ts",
							"line": 72,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumericSeriesPlot",
							"id": 1447
						}
					]
				},
				{
					"id": 1665,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/Bubble.ts",
							"line": 62,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Bubble')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1562
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1665
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/Bubble.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2215,
			"name": "\"plots/Column\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/Column.ts",
			"comment": {
				"shortText": "# Columns Plot",
				"text": "## Usage\n`graph.series.add('column', {x:<x-col>, y:<y-col>, stacked?:<group-name>});`\n\n## Example\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames: ['State', 'volume', 'costs'],\n   rows:[    ['CA',     -0.1,     0.2],\n             ['MA',      0.2,     0.7],\n             ['FL',      0.4,     0.1],\n             ['SC',      0.6,    -0.2],\n             ['NV',      0.8,     0.3],\n             ['NC',      1,       0.2]]\n};\n\n// setup and plot the data:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('column', {x:'State', y:'costs'});\ngraph.series.add('column', {x:'State', y:'volume'});\ngraph.scales.defaults.dims.hor.ordinal.gap = 0.25;\ngraph.scales.defaults.dims.hor.ordinal.overlap = 0.75;\ngraph.series.defaults[0].line.rendered = true;\ngraph.series.defaults[1].line.rendered = true;\ngraph.grids.defaults.ver.major.rendered = false;\ngraph.render(data).update(2000, data => {\n     data.rows.forEach(row => {\n         row[1] = 0.5*Math.random()-0.2;\n         row[2] = 0.5*Math.random()+0.3;\n     });\n     return true;\n});\n\n</file>\n</example>\n\n## Example for stacking\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames: ['State', 'volume', 'costs'],\n   rows:[    ['CA',      0.0,     0.2],\n             ['MA',      0.2,     0.7],\n             ['FL',      0.4,     0.1],\n             ['SC',      0.6,     0.2],\n             ['NV',      0.8,     0.3],\n             ['NC',      1,       0.2]]\n};\n\n// setup and plot the data:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('column', {x:'State', y:'costs',  stacked:'group1'});\ngraph.series.add('column', {x:'State', y:'volume', stacked:'group1'});\ngraph.scales.defaults.dims.hor.ordinal.gap = 0.25;\ngraph.series.defaults[0].line.rendered = true;\ngraph.series.defaults[1].line.rendered = true;\ngraph.grids.defaults.ver.major.rendered = false;\ngraph.render(data).update(2000, data => {\n     data.rows.forEach(row => {\n         row[1] = 1.0*Math.random();\n         row[2] = 1.0*Math.random();\n     });\n     return true;\n});\n\n</file>\n</example>\n\n\n### Column plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('column', {x:'state', y:'volume'});\n     return graph;\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust(defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         const graph = createGraph(svgRoot[0]);\n         defaults = `<b>graph.series.defaults = </b>\n             ${hsUtil.log.inspect(graph.series.defaults, null, '   ', colors).replace(/\\n/g, '<br>')}\n             <br><br><b>graph.scales.defaults.dims = </b>\n             ${hsUtil.log.inspect(graph.scales.defaults.dims, null, '   ', colors).replace(/\\n/g, '<br>')}`;\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 2216,
					"name": "Column",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2269,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2270,
									"name": "new Column",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2271,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 2272,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2273,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Column",
										"id": 2216
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 2293,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 2291,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 2294,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 2292,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 2274,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 2275,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 2217,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2218,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "stringLiteral",
										"value": "hor"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Column.ts",
									"line": 122,
									"character": 33
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 2295,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2296,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 2310,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2311,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 2259,
							"name": "d3DrawBar",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2260,
									"name": "d3DrawBar",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2261,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2262,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2263,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3DrawBar",
										"id": 2140
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 148,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3DrawBar",
								"id": 2140
							}
						},
						{
							"id": 2255,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2256,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2257,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2258,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3RenderFill",
										"id": 2132
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3RenderFill",
								"id": 2132
							}
						},
						{
							"id": 2247,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2248,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2249,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2250,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3RenderMarkers",
										"id": 2124
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 114,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3RenderMarkers",
								"id": 2124
							}
						},
						{
							"id": 2251,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2252,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2253,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2254,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.d3RenderPath",
										"id": 2128
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 117,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.d3RenderPath",
								"id": 2128
							}
						},
						{
							"id": 2297,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2298,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2299,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2300,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 2230,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2231,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "ensures that 0 is in the domain, since the columns extend down to 0."
									},
									"parameters": [
										{
											"id": 2232,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2233,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 2234,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2235,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2236,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2237,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2238,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "plots/OrdinalSeriesPlot.ts",
															"line": 91,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.expandNumDomain",
										"id": 2107
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 91,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.expandNumDomain",
								"id": 2107
							}
						},
						{
							"id": 2301,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2302,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2303,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2304,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 2305,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2306,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2307,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2308,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2309,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 2219,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2220,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.getDefaults",
										"id": 2096
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Column.ts",
									"line": 124,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.getDefaults",
								"id": 2096
							}
						},
						{
							"id": 2264,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2265,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2266,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2267,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow",
													"id": 742
												}
											}
										},
										{
											"id": 2268,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.getLine",
										"id": 2145
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 177,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.getLine",
								"id": 2145
							}
						},
						{
							"id": 2287,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2288,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2289,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2290,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 2282,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2283,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 2239,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2240,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2241,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2242,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.initialize",
										"id": 2116
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 100,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.initialize",
								"id": 2116
							}
						},
						{
							"id": 2312,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2313,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 2314,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 2279,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2280,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2281,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 2243,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2244,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2245,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2246,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.preRender",
										"id": 2120
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 104,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.preRender",
								"id": 2120
							}
						},
						{
							"id": 2276,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2277,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 2278,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 2284,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2285,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2286,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 2315,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2316,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 2317,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 2221,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2222,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2223,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2224,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 2225,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2226,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2227,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2228,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 2229,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "plots/OrdinalSeriesPlot.ts",
													"line": 78,
													"character": 53
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OrdinalSeriesPlot.value",
										"id": 2098
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 78,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OrdinalSeriesPlot.value",
								"id": 2098
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2269
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2293,
								2291,
								2294,
								2292
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2274,
								2217,
								2295
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2310,
								2259,
								2255,
								2247,
								2251,
								2297,
								2230,
								2301,
								2219,
								2264,
								2287,
								2282,
								2239,
								2312,
								2279,
								2243,
								2276,
								2284,
								2315,
								2221
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/Column.ts",
							"line": 121,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "OrdinalSeriesPlot",
							"id": 2095
						}
					]
				},
				{
					"id": 2318,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/Column.ts",
							"line": 110,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Column')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2216
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2318
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/Column.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1666,
			"name": "\"plots/Line\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/Line.ts",
			"comment": {
				"shortText": "# Line Plot",
				"text": "plots a 2D line. Defers to {@link NumericSeriesPlot NumericSeriesPlot} to render plot elements and uses the\ndefault configuration to\n- show the plot line\n- hide the plot markers\n- hide the plot area\nEach of these can be modified via changing the {@link Settings default settings}.\n\n## Usage\n`graph.series.add('line', {x:<x-col>, y:<y-col>, y0?:<y-lower-fill>, r?:<size-col>});`\n\n## Example\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nconst data = {\n   colNames:['date', 'time', 'volume', 'costs'],\n   rows:[['1/1/14', -1,  0.2, 0.3], ['1/1/16', 0.2, 0.7, 0.2], ['9/1/16', 0.4, 0.1, 0.3],\n         ['5/1/17', 0.6, -0.2,   0.1], ['7/1/18', 0.8, 0.3, 0.5], ['1/1/19', 1,   0.2, 0.4]]\n};\n\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('line', {x:'time', y:'volume', r:'costs'});\ngraph.series.add('line', {x:'time', y:()=>0.5});\ngraph.render(data);\n\n</file>\n</example>\n\n### Line plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('line', {x:'time', y:'volume', r:'costs'});\n     return graph.series.defaults[0];\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.series.defaults[0] = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1667,
					"name": "Line",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1701,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1702,
									"name": "new Line",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1703,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1704,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1705,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Line",
										"id": 1667
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 1727,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 1725,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 1670,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the main data line"
							},
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.line",
								"id": 1448
							}
						},
						{
							"id": 1728,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 1726,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 1708,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 1709,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 1706,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 1707,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 1729,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1730,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 1762,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1763,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 1691,
							"name": "d3DrawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1692,
									"name": "d3DrawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1693,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1694,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericSeriesPlot",
												"id": 1447
											}
										},
										{
											"id": 1695,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3DrawMarker",
										"id": 1469
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3DrawMarker",
								"id": 1469
							}
						},
						{
							"id": 1687,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1688,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1689,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1690,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderFill",
										"id": 1465
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 107,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderFill",
								"id": 1465
							}
						},
						{
							"id": 1679,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1680,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1681,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1682,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderMarkers",
										"id": 1457
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 89,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderMarkers",
								"id": 1457
							}
						},
						{
							"id": 1683,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1684,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1685,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1686,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderPath",
										"id": 1461
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderPath",
								"id": 1461
							}
						},
						{
							"id": 1731,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1732,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1733,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1734,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 1735,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1736,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1737,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1738,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 1739,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1740,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1741,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1742,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1743,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 1744,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1745,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1746,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1747,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 1748,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1749,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1750,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1751,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1752,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 1668,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1669,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Line.ts",
									"line": 74,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 1696,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1697,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the path rendering for the main data line"
									},
									"parameters": [
										{
											"id": 1698,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NumericDataRow",
													"id": 743
												}
											}
										},
										{
											"id": 1699,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1700,
											"name": "yDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a constant (defaults to 0), or the data column to render from\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											},
											"defaultValue": " () => 0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.getLine",
										"id": 1474
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 138,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.getLine",
								"id": 1474
							}
						},
						{
							"id": 1721,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1722,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1723,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1724,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 1716,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1717,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 1671,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1672,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1673,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1674,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.initialize",
										"id": 1449
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 76,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.initialize",
								"id": 1449
							}
						},
						{
							"id": 1764,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1765,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 1766,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 1713,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1714,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1715,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 1675,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1676,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1677,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										},
										{
											"id": 1678,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.preRender",
										"id": 1453
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 80,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.preRender",
								"id": 1453
							}
						},
						{
							"id": 1710,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1711,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 1712,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 1718,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1719,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1720,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 1767,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1768,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 1769,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 1753,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1754,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 1755,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1756,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 1757,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1758,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1759,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1760,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 1761,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1701
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1727,
								1725,
								1670,
								1728,
								1726
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1708,
								1706,
								1729
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1762,
								1691,
								1687,
								1679,
								1683,
								1731,
								1735,
								1744,
								1668,
								1696,
								1721,
								1716,
								1671,
								1764,
								1713,
								1675,
								1710,
								1718,
								1767,
								1753
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/Line.ts",
							"line": 73,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumericSeriesPlot",
							"id": 1447
						}
					]
				},
				{
					"id": 1770,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/Line.ts",
							"line": 64,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Line')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1667
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1770
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/Line.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1446,
			"name": "\"plots/NumericSeriesPlot\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/NumericSeriesPlot.ts",
			"comment": {
				"shortText": "# NumericSeriesPlot",
				"text": "Abstract base class for all numeric series plot types.\nTo create a series plot, add the desired plot type to the graph:\n```\ngraph.series.add(<type>, {<dim>: <data-values>, ...});\n```\n- `<type>` is one of the registered types:\n    - &nbsp; {@link plots.Line `line`} a 2D line plot\n    - &nbsp; {@link plots.Bubble `bubble`} a 2D scatter plot with marker sizes driven by the data\n    - &nbsp; {@link plots.Area `area`} a 2D area plot filling to the x-axis\n    - &nbsp; {@link plots.TimeSeries `timeseries`} a 2D scatter plot with marker sizes driven by the data\n    - &nbsp; {@link plots.Voronoi `voronoi`} a voronoi diagrom with centroids and partition\n- `<dim>` is one of the semantic dimensions defined for the plot. `NumericSeriesPlots` define the\n  following dimensions:\n    - `x`: required; the value to plot along the x-axis\n    - `y`: required; the value to plot along the y-axis\n    - `y0`: optional; for areas, the lower bound of the area.\n      Specifying a value for `y0` will automatically enable area rendering\n    - `r`: optional; for markers, the value to use for the size\n      Specifying a value for `r` will automatically enable markers\n- `<data-values>` is the value to use for the {@link Series.SeriesDimensions semantic dimension}. Values may be specified\n    - by `string` to specify the column name of the data set to use\n    - by `number` to specify a constant value to use.\n"
			},
			"children": [
				{
					"id": 1447,
					"name": "NumericSeriesPlot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Abstract base class of a  cartesian series plot."
					},
					"children": [
						{
							"id": 1479,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1480,
									"name": "new NumericSeriesPlot",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1481,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1482,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1483,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumericSeriesPlot",
										"id": 1447
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 1507,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 1505,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 1448,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the main data line"
							},
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1508,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 1506,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 1486,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 1487,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 1484,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 1485,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 1509,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1510,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 1542,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1543,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 1469,
							"name": "d3DrawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1470,
									"name": "d3DrawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1471,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1472,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericSeriesPlot",
												"id": 1447
											}
										},
										{
											"id": 1473,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							]
						},
						{
							"id": 1465,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1466,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1467,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1468,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 107,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							}
						},
						{
							"id": 1457,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1458,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1459,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1460,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 89,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							}
						},
						{
							"id": 1461,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1462,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1463,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1464,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							}
						},
						{
							"id": 1511,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1512,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1513,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1514,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 1515,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1516,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1517,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1518,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 1519,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1520,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1521,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1522,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1523,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 1524,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1525,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1526,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1527,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 1528,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1529,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1530,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1531,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1532,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 1488,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1489,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the defaults for the series. Called during `addSeries`."
									},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getDefaults",
										"id": 122
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 65,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getDefaults",
								"id": 122
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 1474,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1475,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the path rendering for the main data line"
									},
									"parameters": [
										{
											"id": 1476,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NumericDataRow",
													"id": 743
												}
											}
										},
										{
											"id": 1477,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1478,
											"name": "yDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a constant (defaults to 0), or the data column to render from\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											},
											"defaultValue": " () => 0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 138,
									"character": 21
								}
							]
						},
						{
							"id": 1501,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1502,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1503,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1504,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 1496,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1497,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 1449,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1450,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1451,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1452,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 76,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							}
						},
						{
							"id": 1544,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1545,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 1546,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 1493,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1494,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1495,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 1453,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1454,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1455,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										},
										{
											"id": 1456,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 80,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							}
						},
						{
							"id": 1490,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1491,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 1492,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 1498,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1499,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1500,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 1547,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1548,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 1549,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 1533,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1534,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 1535,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1536,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 1537,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1538,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1539,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1540,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 1541,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1479
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1507,
								1505,
								1448,
								1508,
								1506
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1486,
								1484,
								1509
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1542,
								1469,
								1465,
								1457,
								1461,
								1511,
								1515,
								1524,
								1488,
								1474,
								1501,
								1496,
								1449,
								1544,
								1493,
								1453,
								1490,
								1498,
								1547,
								1533
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/NumericSeriesPlot.ts",
							"line": 70,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CartSeriesPlot",
							"id": 2503
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Bubble",
							"id": 1562
						},
						{
							"type": "reference",
							"name": "Line",
							"id": 1667
						},
						{
							"type": "reference",
							"name": "Area",
							"id": 1772
						},
						{
							"type": "reference",
							"name": "TimeSeries",
							"id": 1877
						},
						{
							"type": "reference",
							"name": "Voronoi",
							"id": 1982
						}
					]
				},
				{
					"id": 1550,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/NumericSeriesPlot.ts",
							"line": 29,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('NumericSeriesPlot')"
				},
				{
					"id": 1551,
					"name": "accessor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1552,
							"name": "accessor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a function to access the numeric value in a data row.\nThe numeric value is specified by the `ValueDef` `v`.\n- If `v` is a number, applies the `scale` to `v`, and returns the result.\n- If `v` is contained in `colNames`, uses the position of `v` in `colNames` to index the\nsupplied `row`, applies the `scale`, and returns the result.\n- Otherwise, if `v` ends with 'u', interprets `v` to be Viewport Units and\nreturns `v` without aplying `scale`. This allows for absolute positioning inside the\nviewport window."
							},
							"parameters": [
								{
									"id": 1553,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `ValueDef` specifying the value"
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									}
								},
								{
									"id": 1554,
									"name": "colNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a list of names for the coluymns in the `DataSet`"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1555,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a numeric scale to apply"
									},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 253
									}
								},
								{
									"id": 1556,
									"name": "def",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "defaults to `0`; the default to return if `v` is `undefined`.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1557,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1558,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1559,
													"name": "row",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 1560,
													"name": "i",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "plots/NumericSeriesPlot.ts",
											"line": 56,
											"character": 76
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "plots/NumericSeriesPlot.ts",
							"line": 56,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1447
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1550
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1551
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/NumericSeriesPlot.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2094,
			"name": "\"plots/OrdinalSeriesPlot\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/OrdinalSeriesPlot.ts",
			"comment": {
				"shortText": "# OrdinalSeriesPlot",
				"text": "Abstract base class for all ordinal series plot types.\nTo create a series plot, add the desired plot type to the graph:\n```\ngraph.series.add(<type>, {<dim>: <data-values>, ...});\n```\n- `<type>` is one of the registered types:\n    - &nbsp; {@link plots.Bar `bar`} a horizontal bar chart\n    - &nbsp; {@link plots.Column `column`} a vertical column chart\n- `<dim>` is one of the semantic dimensions defined for the plot. `NumericSeriesPlots` define the\n  following dimensions:\n    - `x`: required; the value to plot along the x-axis\n    - `y`: required; the value to plot along the y-axis\n    - `stacked`: optional, specifies a group name for which series values will be stacked.\n- `<data-values>` is the value to use for the {@link Series.SeriesDimensions semantic dimension}. Values may be specified\n    - by `string` to specify the column name of the data set to use\n    - by `number` to specify a constant value to use.\n"
			},
			"children": [
				{
					"id": 2095,
					"name": "OrdinalSeriesPlot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Abstract base class of a  cartesian series plot."
					},
					"children": [
						{
							"id": 2150,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2151,
									"name": "new OrdinalSeriesPlot",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2152,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 2153,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2154,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdinalSeriesPlot",
										"id": 2095
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 2176,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 2174,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 2177,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 2175,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 2157,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 2158,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 2155,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 2156,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 2178,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2179,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 2193,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2194,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 2140,
							"name": "d3DrawBar",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2141,
									"name": "d3DrawBar",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2142,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2143,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2144,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 148,
									"character": 23
								}
							]
						},
						{
							"id": 2132,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2133,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2134,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2135,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							}
						},
						{
							"id": 2124,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2125,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2126,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2127,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 114,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							}
						},
						{
							"id": 2128,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2129,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2130,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2131,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderPath",
										"id": 2538
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 117,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderPath",
								"id": 2538
							}
						},
						{
							"id": 2180,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2181,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2182,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2183,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 2107,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2108,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "ensures that 0 is in the domain, since the columns extend down to 0."
									},
									"parameters": [
										{
											"id": 2109,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2110,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 2111,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2112,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2113,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2114,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2115,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "plots/OrdinalSeriesPlot.ts",
															"line": 91,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 91,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 2184,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2185,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2186,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2187,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 2188,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2189,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2190,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2191,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2192,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 2096,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2097,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 65,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 2145,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2146,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2147,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2148,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow",
													"id": 742
												}
											}
										},
										{
											"id": 2149,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 177,
									"character": 21
								}
							]
						},
						{
							"id": 2136,
							"name": "getParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2137,
									"name": "getParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2138,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdinalSeriesPlot",
												"id": 2095
											}
										},
										{
											"id": 2139,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 135,
									"character": 21
								}
							]
						},
						{
							"id": 2170,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2171,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2172,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2173,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 2165,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2166,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 2116,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2117,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2118,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2119,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 100,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							}
						},
						{
							"id": 2195,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2196,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 2197,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 2162,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2163,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2164,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 2120,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2121,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2122,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2123,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 104,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							}
						},
						{
							"id": 2159,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2160,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 2161,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 2167,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2168,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2169,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 2198,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2199,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 2200,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 2098,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2099,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2100,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2101,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 2102,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2103,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2104,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2105,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 2106,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "plots/OrdinalSeriesPlot.ts",
													"line": 78,
													"character": 53
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/OrdinalSeriesPlot.ts",
									"line": 78,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2150
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2176,
								2174,
								2177,
								2175
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2157,
								2155,
								2178
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2193,
								2140,
								2132,
								2124,
								2128,
								2180,
								2107,
								2184,
								2096,
								2145,
								2136,
								2170,
								2165,
								2116,
								2195,
								2162,
								2120,
								2159,
								2167,
								2198,
								2098
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/OrdinalSeriesPlot.ts",
							"line": 64,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CartSeriesPlot",
							"id": 2503
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Column",
							"id": 2216
						},
						{
							"type": "reference",
							"name": "Bar",
							"id": 2320
						}
					]
				},
				{
					"id": 2201,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/OrdinalSeriesPlot.ts",
							"line": 23,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('OrdinalSeriesPlot')"
				},
				{
					"id": 2202,
					"name": "accessor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2203,
							"name": "accessor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a function to access the numeric value in a data row.\nThe numeric value is specified by the `ValueDef` `v`.\n- If `v` is a number, returns `v` as the result.\n- If `v` is contained in `colNames`, uses the position of `v` in `colNames` to index the\nsupplied `row`, applies the `scale`, and returns the result.\n- Otherwise, if `v` ends with 'u', interprets `v` to be Viewport Units and\nreturns `v` without aplying `scale`. This allows for absolute positioning inside the\nviewport window."
							},
							"parameters": [
								{
									"id": 2204,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `ValueDef` specifying the value"
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									}
								},
								{
									"id": 2205,
									"name": "colNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a list of names for the coluymns in the `DataSet`"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2206,
									"name": "def",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "defaults to `0`; the default to return if `v` is `undefined`.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2207,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2208,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2209,
													"name": "row",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 2210,
													"name": "i",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "DataVal",
												"id": 741
											}
										}
									],
									"sources": [
										{
											"fileName": "plots/OrdinalSeriesPlot.ts",
											"line": 52,
											"character": 63
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "plots/OrdinalSeriesPlot.ts",
							"line": 52,
							"character": 24
						}
					]
				},
				{
					"id": 2211,
					"name": "stepLine",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2212,
							"name": "stepLine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2213,
									"name": "step",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2214,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "accessors"
							}
						}
					],
					"sources": [
						{
							"fileName": "plots/OrdinalSeriesPlot.ts",
							"line": 197,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2095
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2201
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2202,
						2211
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/OrdinalSeriesPlot.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1876,
			"name": "\"plots/TimeSeries\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/TimeSeries.ts",
			"comment": {
				"shortText": "# Time Series Plot",
				"text": "plots a 2D line with markers and smooth x-axis tranisitions.\n\n## Usage\n`graph.series.add('timeseries', {x:<x-col>, y:<y-col>, y0?:<y-lower-fill>, r?:<size-col>});`\n\n\n## Example\n- top row: plot and update a random time series with area fill against '1'\n- bottom row: plot and update a random time series as a line with markers of random size\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n// create data set:\nlet index = 0;\nconst data = {\n   colNames:['date', 'time', 'volume'],\n   rows:[],\n};\nwhile (index<11) { data.rows.push([index++, Math.random()+1, Math.random()])}\n\n// create the graph and define the series to plot:\nconst graph = new hsGraphD3.GraphCartesian(root);\ngraph.series.add('timeseries', {x:'date', y:'time', y0:()=>1});\ngraph.series.add('timeseries', {x:'date', y:'volume', r:'time'});\n\n// adjust some settings:\ngraph.series.defaults.series0.marker.size = 15;\n\n// trigger the update loop to plot the data\ngraph.render(data).update(1000, data => {\n     // add new sample\n     data.rows.push([index++, Math.random()+1, Math.random()]);\n     // remove old sample\n     if (data.rows.length > 10) { data.rows.shift(); }\n     return true;\n});\n</file>\n</example>\n\n### TimeSeries plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(svgRoot);\n     graph.series.add('timeseries', {x:'date', y:'volume', r:'time'});\n     return graph.series.defaults[0];\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.series.defaults[0] = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1877,
					"name": "TimeSeries",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1878,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "plot constructor"
							},
							"signatures": [
								{
									"id": 1879,
									"name": "new TimeSeries",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "plot constructor"
									},
									"parameters": [
										{
											"id": 1880,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 1881,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1882,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeSeries",
										"id": 1877
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 88,
									"character": 51
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 1937,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 1935,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 1909,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the main data line"
							},
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.line",
								"id": 1448
							}
						},
						{
							"id": 1938,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 1936,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 1922,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 1923,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 1920,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 1921,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 1939,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1940,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 1972,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1973,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 1910,
							"name": "d3DrawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1911,
									"name": "d3DrawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1912,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1913,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericSeriesPlot",
												"id": 1447
											}
										},
										{
											"id": 1914,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3DrawMarker",
										"id": 1469
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3DrawMarker",
								"id": 1469
							}
						},
						{
							"id": 1905,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1906,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1907,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1908,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderFill",
										"id": 1465
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 152,
									"character": 16
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderFill",
								"id": 1465
							}
						},
						{
							"id": 1893,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1894,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1895,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1896,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderMarkers",
										"id": 1457
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 121,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderMarkers",
								"id": 1457
							}
						},
						{
							"id": 1901,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1902,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1903,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1904,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderPath",
										"id": 1461
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 143,
									"character": 16
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderPath",
								"id": 1461
							}
						},
						{
							"id": 1941,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1942,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1943,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1944,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 1945,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1946,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1947,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1948,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 1949,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1950,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1951,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1952,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1953,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 1954,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1955,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1956,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 1957,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 1958,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1959,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1960,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1961,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 1962,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 1883,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1884,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 99,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 1915,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1916,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the path rendering for the main data line"
									},
									"parameters": [
										{
											"id": 1917,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NumericDataRow",
													"id": 743
												}
											}
										},
										{
											"id": 1918,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1919,
											"name": "yDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a constant (defaults to 0), or the data column to render from\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											},
											"defaultValue": " () => 0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.getLine",
										"id": 1474
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 138,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.getLine",
								"id": 1474
							}
						},
						{
							"id": 1897,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1898,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1899,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1900,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 139,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 1930,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1931,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 1885,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1886,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1887,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1888,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NumericSeriesPlot.initialize",
										"id": 1449
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 105,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumericSeriesPlot.initialize",
								"id": 1449
							}
						},
						{
							"id": 1974,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1975,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 1976,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 1927,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1928,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1929,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 1889,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1890,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1891,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										},
										{
											"id": 1892,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NumericSeriesPlot.preRender",
										"id": 1453
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/TimeSeries.ts",
									"line": 109,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumericSeriesPlot.preRender",
								"id": 1453
							}
						},
						{
							"id": 1924,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1925,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "renders the component for the given data"
									},
									"parameters": [
										{
											"id": 1926,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.renderComponent",
										"id": 163
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 102,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.renderComponent",
								"id": 163
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 1932,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1933,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1934,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 1977,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1978,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 1979,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 1963,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1964,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 1965,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1966,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 1967,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1968,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1969,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1970,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 1971,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1878
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1937,
								1935,
								1909,
								1938,
								1936
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1922,
								1920,
								1939
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1972,
								1910,
								1905,
								1893,
								1901,
								1941,
								1945,
								1954,
								1883,
								1915,
								1897,
								1930,
								1885,
								1974,
								1927,
								1889,
								1924,
								1932,
								1977,
								1963
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/TimeSeries.ts",
							"line": 88,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumericSeriesPlot",
							"id": 1447
						}
					]
				},
				{
					"id": 1980,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/TimeSeries.ts",
							"line": 74,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('TimeSeries')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1877
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1980
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/TimeSeries.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1981,
			"name": "\"plots/Voronoi\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/d3/hsGraphD3/src/plots/Voronoi.ts",
			"comment": {
				"shortText": "# Voronoi Plot",
				"text": "plots a 2D Voronoi Partition.\n\n## Usage\n`graph.series.add('voronoi', {x:<x-col>, y:<y-col>, r?:<size-col>});`\nInvoke a `line` series by adding a new series to the graph\n\n## Example\n- Generate 1000 samples per frame.\n- for each frame:\n    - calculate the centroids\n    - plot centroids and voronoi diagram\n    - split any centroid that has observed more than 10k samples\n<example height=200px libs={hsGraphD3:'hsGraphD3'}>\n<file name='script.js'>\n\nconst centroids = {\n    colNames: ['x', 'y', 'count'],\n    rows: [[0.5, 0.5, 0]]\n}\nconst samples = {\n    colNames: ['x', 'y', 'nearest'],\n    rows: [[0.5, 0.5, 0]]\n}\nlet w = 20;\nconst numSamples = 1000;\n\nconst graph = new hsGraphD3.GraphCartesian(root);\n\ngraph.series.add('voronoi', {x:'x', y:'y', r:'count'});\ngraph.series.add('bubble', {x:'x', y:'y'});\n\nwith (graph.defaults) {\n    axes.rendered = false;\n    series.series0.line.width = 1;\n    series.series0.marker.size = 3;\n    series.series0.marker.stroke.width = 0;\n    series.series1.marker.size = 1;\n    series.series1.marker.stroke.width = 0;\n    series.series1.marker.fill.color = '#000';\n    grids.rendered = false;\n    scales.margin.bottom = 0;\n    scales.margin.left = 0;\n    scales.margin.rigth = 0;\n}\n\nconst getRnd = () => (Math.random() + Math.random() + Math.random()) / 3;\n\ngraph.render([centroids, samples]).update(200, data => {\n    data[1].rows = Array.from({length: numSamples}, v => [getRnd(), getRnd(), 0]);\n    data[1].rows.map(r => r[2] = hsGraphD3.Voronoi.nearest(r, data[0].rows));\n    data[0].rows.map((row, i) => {\n        const smp = data[1].rows.filter(r => r[2]===i);\n        const cnt = smp.length;\n        const w = row[2];\n        const norm = 1 / (cnt+w);\n        const c = hsGraphD3.Voronoi.centroid(smp);\n        row[0] = (w*row[0] + cnt*c[0])*norm;\n        row[1] = (w*row[1] + cnt*c[1])*norm;\n        row[2] += cnt/2;\n    });\n    // split if enough count\n    data[0].rows.filter(row => row[2] > 10000)\n        .map((row, i) => {\n            const dx = Math.random()/10000;\n            const dy = Math.random()/10000;\n            row[0] += dx;   row[1] += dy;\n            row[2] = 500;\n            data[0].rows.push([row[0]-dx, row[1]-dy, row[2]]);\n         })\n});\n\n</file>\n</example>\n\n### Voronoi plot Default Settings:\n<example height=600px libs={hsGraphD3:'hsGraphD3', hsUtil:'hsUtil'}>\n<file name='script.js'>\nconst log = hsUtil.log('');\nlet defaults;\n\nfunction createGraph(svgRoot) {\n     const graph = new hsGraphD3.GraphCartesian(root);\n     graph.series.add('voronoi', {x:'x', y:'y', r:'count'});\n     return graph.series.defaults[0];\n}\n\nm.mount(root, {\n  view:() => m('div', {style:'background-color:#eee; font-family:Monospace'}, [\n     m('div', m.trust('graph.series.defaults[0] = ' + defaults)),\n     m('div.myGraph', '')\n  ]),\n  oncreate: () => {\n     const svgRoot = root.getElementsByClassName('myGraph');\n     if (svgRoot && svgRoot.length && !defaults) {\n         const colors = ['#800', '#080', '#008'];\n         defaults = hsUtil.log.inspect(createGraph(svgRoot[0]), null, '   ', colors)\n             .replace(/\\n/g, '<br>')\n     }\n  }\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1982,
					"name": "Voronoi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2027,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2028,
									"name": "new Voronoi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2029,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "GraphCfg",
												"id": 1296
											}
										},
										{
											"id": 2030,
											"name": "seriesName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2031,
											"name": "dims",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CartSeriesDimensions",
												"id": 2495
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Voronoi",
										"id": 1982
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.__constructor",
										"id": 113
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.__constructor",
										"id": 2504
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 45,
									"character": 57
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.__constructor",
								"id": 113
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.__constructor",
								"id": 2504
							}
						},
						{
							"id": 2050,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the render tree configuration"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 88,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphCfg",
								"id": 1296
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.cfg",
								"id": 111
							}
						},
						{
							"id": 2048,
							"name": "dims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "a list of data column names used,\nreflecting the list of column names provided during construction."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesDimensions",
								"id": 190
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.dims",
								"id": 109
							}
						},
						{
							"id": 2000,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the main data line"
							},
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.line",
								"id": 1448
							}
						},
						{
							"id": 2051,
							"name": "seriesKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the unique series key assigned during cinstruction, used to index the series settings."
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 91,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.seriesKey",
								"id": 112
							}
						},
						{
							"id": 2049,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the base svg element to render the component into"
							},
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Base",
								"id": 46
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.svg",
								"id": 110
							}
						},
						{
							"id": 1983,
							"name": "voronoi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "plots/Voronoi.ts",
									"line": 125,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "d3Voronoi",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2034,
							"name": "dimensions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "return the list of Series dimesions for each Graph Dimension"
							},
							"getSignature": [
								{
									"id": 2035,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the list of Series dimesions for each Graph Dimension"
									},
									"type": {
										"type": "reference",
										"name": "CartDimensions",
										"id": 2424
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.dimensions",
										"id": 120
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.dimensions",
										"id": 2511
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 54,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.dimensions",
								"id": 120
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.dimensions",
								"id": 2511
							}
						},
						{
							"id": 2032,
							"name": "independentAxis",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "return the GraphDimension of the independent axis"
							},
							"getSignature": [
								{
									"id": 2033,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "return the GraphDimension of the independent axis"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "hor"
											},
											{
												"type": "stringLiteral",
												"value": "ver"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.independentAxis",
										"id": 2509
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 51,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.independentAxis",
								"id": 2509
							}
						},
						{
							"id": 2052,
							"name": "key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 2053,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.key",
										"id": 118
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 99,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.key",
								"id": 118
							}
						},
						{
							"id": 2085,
							"name": "clearStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2086,
									"name": "clearStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "clears the stack for this cycle before any series rendering happens."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.clearStack",
										"id": 169
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 190,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.clearStack",
								"id": 169
							}
						},
						{
							"id": 2017,
							"name": "d3DrawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2018,
									"name": "d3DrawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2019,
											"name": "markers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2020,
											"name": "plot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericSeriesPlot",
												"id": 1447
											}
										},
										{
											"id": 2021,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3DrawMarker",
										"id": 1469
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 122,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3DrawMarker",
								"id": 1469
							}
						},
						{
							"id": 2013,
							"name": "d3RenderFill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2014,
									"name": "d3RenderFill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2015,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2016,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderFill",
										"id": 2542
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderFill",
										"id": 1465
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 107,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderFill",
								"id": 2542
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderFill",
								"id": 1465
							}
						},
						{
							"id": 2009,
							"name": "d3RenderMarkers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2010,
									"name": "d3RenderMarkers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2011,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2012,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.d3RenderMarkers",
										"id": 2534
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderMarkers",
										"id": 1457
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 89,
									"character": 29
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.d3RenderMarkers",
								"id": 2534
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderMarkers",
								"id": 1457
							}
						},
						{
							"id": 1989,
							"name": "d3RenderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1990,
									"name": "d3RenderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1991,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 1992,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NumericSeriesPlot.d3RenderPath",
										"id": 1461
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Voronoi.ts",
									"line": 148,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NumericSeriesPlot.d3RenderPath",
								"id": 1461
							}
						},
						{
							"id": 2054,
							"name": "expandDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2055,
									"name": "expandDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2056,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2057,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandDomains",
										"id": 124
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 118,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandDomains",
								"id": 124
							}
						},
						{
							"id": 2058,
							"name": "expandNumDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2059,
									"name": "expandNumDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2060,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2061,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumDomain",
												"id": 745
											}
										},
										{
											"id": 2062,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2063,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2064,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2065,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2066,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 136,
															"character": 68
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumDomain",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandNumDomain",
										"id": 128
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 136,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandNumDomain",
								"id": 128
							}
						},
						{
							"id": 2067,
							"name": "expandOrdinalDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2068,
									"name": "expandOrdinalDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2069,
											"name": "dataSet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										},
										{
											"id": 2070,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrdDomain",
												"id": 747
											}
										},
										{
											"id": 2071,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2072,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2073,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2074,
																	"name": "row",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "DataRow",
																		"id": 742
																	}
																},
																{
																	"id": 2075,
																	"name": "i",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataVal",
																"id": 741
															}
														}
													],
													"sources": [
														{
															"fileName": "SeriesPlot.ts",
															"line": 145,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrdDomain",
										"id": 747
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.expandOrdinalDomain",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 145,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.expandOrdinalDomain",
								"id": 137
							}
						},
						{
							"id": 1984,
							"name": "getDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1985,
									"name": "getDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SeriesPlotDefaults",
										"id": 104
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.getDefaults",
										"id": 2513
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Voronoi.ts",
									"line": 127,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.getDefaults",
								"id": 2513
							}
						},
						{
							"id": 2022,
							"name": "getLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2023,
									"name": "getLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the path rendering for the main data line"
									},
									"parameters": [
										{
											"id": 2024,
											"name": "rows",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NumericDataRow",
													"id": 743
												}
											}
										},
										{
											"id": 2025,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2026,
											"name": "yDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a constant (defaults to 0), or the data column to render from\n"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											},
											"defaultValue": " () => 0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.getLine",
										"id": 1474
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 138,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.getLine",
								"id": 1474
							}
						},
						{
							"id": 2044,
							"name": "getPathElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2045,
									"name": "getPathElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2046,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2047,
											"name": "cls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getPathElement",
										"id": 2546
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 135,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getPathElement",
								"id": 2546
							}
						},
						{
							"id": 2039,
							"name": "getStackValueDef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2040,
									"name": "getStackValueDef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the `ValueDef`, i.e. column name or `ValueFn`, for which to stack series."
									},
									"type": {
										"type": "reference",
										"name": "ValueDef",
										"id": 740
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.getStackValueDef",
										"id": 177
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.getStackValueDef",
										"id": 2529
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 118,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.getStackValueDef",
								"id": 177
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.getStackValueDef",
								"id": 2529
							}
						},
						{
							"id": 2001,
							"name": "initialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2002,
									"name": "initialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2003,
											"name": "svg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "d3Base",
												"id": 46
											}
										},
										{
											"id": 2004,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.initialize",
										"id": 2515
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.initialize",
										"id": 1449
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 76,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.initialize",
								"id": 2515
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.initialize",
								"id": 1449
							}
						},
						{
							"id": 2087,
							"name": "intializeStackGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2088,
									"name": "intializeStackGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If the required stack group has not been initialized,\nset it to all zeros before rendering this series"
									},
									"parameters": [
										{
											"id": 2089,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.intializeStackGroup",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 200,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.intializeStackGroup",
								"id": 171
							}
						},
						{
							"id": 2036,
							"name": "postRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2037,
									"name": "postRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2038,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "SeriesPlot.postRender",
										"id": 166
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.postRender",
										"id": 2526
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 109,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "SeriesPlot.postRender",
								"id": 166
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.postRender",
								"id": 2526
							}
						},
						{
							"id": 2005,
							"name": "preRender",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2006,
									"name": "preRender",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2007,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										},
										{
											"id": 2008,
											"name": "domains",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Domains",
												"id": 594
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.preRender",
										"id": 2519
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericSeriesPlot.preRender",
										"id": 1453
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/NumericSeriesPlot.ts",
									"line": 80,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.preRender",
								"id": 2519
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NumericSeriesPlot.preRender",
								"id": 1453
							}
						},
						{
							"id": 1986,
							"name": "renderComponent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1987,
									"name": "renderComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1988,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumericDataSet",
												"id": 588
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "CartSeriesPlot.renderComponent",
										"id": 2523
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Voronoi.ts",
									"line": 133,
									"character": 26
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CartSeriesPlot.renderComponent",
								"id": 2523
							}
						},
						{
							"id": 2041,
							"name": "renderElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2042,
									"name": "renderElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2043,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CartSeriesPlot.renderElements",
										"id": 2531
									}
								}
							],
							"sources": [
								{
									"fileName": "CartSeriesPlot.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CartSeriesPlot.renderElements",
								"id": 2531
							}
						},
						{
							"id": 2090,
							"name": "updateStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2091,
									"name": "updateStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "update stack after rendering series."
									},
									"parameters": [
										{
											"id": 2092,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DataSet",
												"id": 585
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.updateStack",
										"id": 174
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 208,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.updateStack",
								"id": 174
							}
						},
						{
							"id": 2076,
							"name": "value",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2077,
									"name": "value",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an accessor function to access the numeric value in a data row.\n`v` determines how to access the value:\n- If `v` is contained in `colNames` it specifies the column to index in the\nsupplied `row` to return as result.\n- If `v` is a function it will be valuated for the provided index `i` to return the result.\n- If 'v' is a number, it will be used as a constant to return as result",
										"returns": "an accessor function `(row?:DataRow, i?:number) => DataVal`\nthat returns a `DataVal` value. The function\nreceives a `DataRow` and the index of the row in the `DataSet` as a parameter.\n"
									},
									"parameters": [
										{
											"id": 2078,
											"name": "dim",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the Graph Dimension, used for stacking; e.g. 'hor', or 'ver'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2079,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `ValueDef` specifying the value"
											},
											"type": {
												"type": "reference",
												"name": "ValueDef",
												"id": 740
											}
										},
										{
											"id": 2080,
											"name": "colNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of names for the coluymns in the `DataSet`"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2081,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2082,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2083,
															"name": "row",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "DataRow",
																"id": 742
															}
														},
														{
															"id": 2084,
															"name": "i",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "DataVal",
														"id": 741
													}
												}
											],
											"sources": [
												{
													"fileName": "SeriesPlot.ts",
													"line": 167,
													"character": 53
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SeriesPlot.value",
										"id": 146
									}
								}
							],
							"sources": [
								{
									"fileName": "SeriesPlot.ts",
									"line": 167,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SeriesPlot.value",
								"id": 146
							}
						},
						{
							"id": 1997,
							"name": "centroid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1998,
									"name": "centroid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calculates the centroid (average) vector over the array of sample vectors.",
										"returns": "the centroid vector as an array\n"
									},
									"parameters": [
										{
											"id": 1999,
											"name": "samples",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Voronoi.ts",
									"line": 183,
									"character": 19
								}
							]
						},
						{
							"id": 1993,
							"name": "nearest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1994,
									"name": "nearest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calculates the nearest `anchor` to the `sample` vector ands returns its index in the `anchors` array."
									},
									"parameters": [
										{
											"id": 1995,
											"name": "sample",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 1996,
											"name": "anchors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "plots/Voronoi.ts",
									"line": 164,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2027
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2050,
								2048,
								2000,
								2051,
								2049,
								1983
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2034,
								2032,
								2052
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2085,
								2017,
								2013,
								2009,
								1989,
								2054,
								2058,
								2067,
								1984,
								2022,
								2044,
								2039,
								2001,
								2087,
								2036,
								2005,
								1986,
								2041,
								2090,
								2076,
								1997,
								1993
							]
						}
					],
					"sources": [
						{
							"fileName": "plots/Voronoi.ts",
							"line": 124,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NumericSeriesPlot",
							"id": 1447
						}
					]
				},
				{
					"id": 2093,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "plots/Voronoi.ts",
							"line": 110,
							"character": 58
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('Voronoi')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1982
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2093
					]
				}
			],
			"sources": [
				{
					"fileName": "plots/Voronoi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				1370,
				546,
				2494,
				576,
				2423,
				750,
				487,
				249,
				189,
				103,
				2,
				2599,
				2596,
				2597,
				2598,
				1771,
				2319,
				1561,
				2215,
				1666,
				1446,
				2094,
				1876,
				1981
			]
		}
	]
}